{"ast":null,"code":"import \"antd/lib/spin/style\";\nimport _Spin from \"antd/lib/spin\";\nimport \"antd/lib/dropdown/style\";\nimport _Dropdown from \"antd/lib/dropdown\";\nimport \"antd/lib/avatar/style\";\nimport _Avatar from \"antd/lib/avatar\";\nimport \"antd/lib/menu/style\";\nimport _Menu from \"antd/lib/menu\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\n\nvar _jsxFileName = \"/Users/nguyenthanhbinh/Work/vnshop/admin/src/layouts/AdminLayout.js\",\n    _dec,\n    _class,\n    _descriptor,\n    _temp;\n\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nimport React from 'react';\nimport { Icon as LegacyIcon } from '@ant-design/compatible';\nimport { LockOutlined, LogoutOutlined, UserOutlined, MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\nimport DocumentTitle from 'react-document-title'; // import { connect } from 'dva';\n\nimport WithDva from '../utils/store'; // import { withRouter } from 'next/router'\n// eslint-disable-next-line import/no-extraneous-dependencies\n\nimport { Link } from 'next/link';\nimport { ContainerQuery } from 'react-container-query';\nimport classNames from 'classnames';\nimport Debounce from 'lodash-decorators/debounce';\nimport GlobalFooter from '@/components/GlobalFooter';\nimport CopyRight from '@/components/CopyRight';\nimport UpdatePasswordDialog from '@/components/UpdatePasswordDialog';\nimport context from '@/utils/context';\nimport './AdminLayout.less';\nimport logo from '../assets/logo.svg';\nconst {\n  Header,\n  Sider,\n  Content\n} = _Layout;\nconst {\n  SubMenu\n} = _Menu;\nconst query = {\n  'screen-xs': {\n    maxWidth: 575\n  },\n  'screen-sm': {\n    minWidth: 576,\n    maxWidth: 767\n  },\n  'screen-md': {\n    minWidth: 768,\n    maxWidth: 991\n  },\n  'screen-lg': {\n    minWidth: 992,\n    maxWidth: 1199\n  },\n  'screen-xl': {\n    minWidth: 1200\n  }\n}; // @connect(state => ({\n//   title: state.global.title,\n//   copyRight: state.global.copyRight,\n//   collapsed: state.global.collapsed,\n//   openKeys: state.global.openKeys,\n//   selectedKeys: state.global.selectedKeys,\n//   user: state.global.user,\n//   menuPaths: state.global.menuPaths,\n//   menuMap: state.global.menuMap,\n//   menus: state.global.menus,\n//   global: state.global,\n// }))\n\nlet AdminLayout = (_dec = Debounce(600), (_class = (_temp = class AdminLayout extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      updatePwdVisible: false\n    });\n\n    _defineProperty(this, \"dispatch\", action => {\n      const {\n        dispatch\n      } = this.props;\n      dispatch(action);\n    });\n\n    _defineProperty(this, \"onCollapse\", () => {\n      const {\n        collapsed\n      } = this.props;\n      this.dispatch({\n        type: 'global/changeLayoutCollapsed',\n        payload: !collapsed\n      });\n    });\n\n    _defineProperty(this, \"onMenuClick\", ({\n      key\n    }) => {\n      if (key === 'logout') {\n        this.dispatch({\n          type: 'login/logout'\n        });\n      } else if (key === 'updatepwd') {\n        this.setState({\n          updatePwdVisible: true\n        });\n      }\n    });\n\n    _defineProperty(this, \"onMenuOpenChange\", openKeys => {\n      const {\n        menuMap\n      } = this.props;\n\n      if (openKeys.length > 1) {\n        const lastKey = openKeys[openKeys.length - 1];\n        const lastItem = menuMap[lastKey];\n\n        if (!lastItem) {\n          this.dispatch({\n            type: 'global/changeOpenKeys',\n            payload: []\n          });\n          return;\n        }\n\n        let isParent = false;\n\n        for (let i = 0; i < openKeys.length - 1; i += 1) {\n          const item = menuMap[openKeys[i]] || {};\n          let path = item.id;\n\n          if (item.parent_path !== '') {\n            path = `${item.parent_path}/${path}`;\n          }\n\n          if (lastItem.parent_path === path) {\n            isParent = true;\n            break;\n          }\n        }\n\n        if (!isParent) {\n          this.dispatch({\n            type: 'global/changeOpenKeys',\n            payload: [lastKey]\n          });\n          return;\n        }\n      }\n\n      this.dispatch({\n        type: 'global/changeOpenKeys',\n        payload: [...openKeys]\n      });\n    });\n\n    _defineProperty(this, \"onToggleClick\", () => {\n      const {\n        collapsed\n      } = this.props;\n      this.dispatch({\n        type: 'global/changeLayoutCollapsed',\n        payload: !collapsed\n      });\n      this.onTriggerResizeEvent();\n    });\n\n    _initializerDefineProperty(this, \"onTriggerResizeEvent\", _descriptor, this);\n\n    _defineProperty(this, \"handleUpdatePwdCancel\", () => {\n      this.setState({\n        updatePwdVisible: false\n      });\n    });\n  }\n\n  static getInitialProps({\n    pathname\n  }) {\n    console.log(\"pathname: \", pathname);\n    return {\n      location: pathname\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount: \", this.props);\n    const {\n      location: {\n        pathname\n      }\n    } = this.props;\n    this.dispatch({\n      type: 'global/fetchUser'\n    });\n    this.dispatch({\n      type: 'global/fetchMenuTree',\n      pathname\n    });\n  }\n\n  renderNavMenuItems(menusData) {\n    if (!menusData) {\n      return [];\n    }\n\n    return menusData.map(item => {\n      if (!item.name || item.show_status !== 1) {\n        return null;\n      }\n\n      if (item.children && item.children.some(child => child.name && child.show_status === 1)) {\n        return __jsx(SubMenu, {\n          title: item.icon ? __jsx(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }\n          }, __jsx(LegacyIcon, {\n            type: item.icon,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }\n          }), __jsx(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }\n          }, item.name)) : item.name,\n          key: item.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 11\n          }\n        }, this.renderNavMenuItems(item.children));\n      }\n\n      const {\n        router\n      } = item;\n\n      const icon = item.icon && __jsx(LegacyIcon, {\n        type: item.icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 33\n        }\n      });\n\n      console.log(\"renderNavMenuItems: \", this.props);\n      const {\n        location: {\n          pathname\n        }\n      } = this.props;\n      return __jsx(_Menu.Item, {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 9\n        }\n      }, router.startsWith('http') ? __jsx(\"a\", {\n        href: router,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }\n      }, icon, __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }\n      }, item.name)) : __jsx(Link, {\n        href: router,\n        replace: router === pathname,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }\n      }, icon, __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }\n      }, item.name)));\n    });\n  }\n\n  renderPageTitle() {\n    console.log(\"renderPageTitle: \", this.props);\n    const {\n      location: {\n        pathname\n      },\n      menuPaths,\n      title\n    } = this.props;\n    let ptitle = title;\n    const item = menuPaths[pathname];\n\n    if (item) {\n      ptitle = `${item.name} - ${title}`;\n    }\n\n    return ptitle;\n  }\n\n  render() {\n    const {\n      children,\n      user,\n      collapsed,\n      menus,\n      copyRight,\n      openKeys,\n      title,\n      selectedKeys,\n      global\n    } = this.props;\n    console.log(\"AdminLayout: \", this.props);\n    const {\n      updatePwdVisible\n    } = this.state;\n\n    const menu = __jsx(_Menu, {\n      className: \"menu\",\n      selectedKeys: [],\n      onClick: this.onMenuClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 7\n      }\n    }, __jsx(_Menu.Item, {\n      key: \"updatepwd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }\n    }, __jsx(LockOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }\n    }), \"\\u4FEE\\u6539\\u5BC6\\u7801\"), __jsx(_Menu.Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }\n    }), __jsx(_Menu.Item, {\n      key: \"logout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }\n    }, __jsx(LogoutOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }\n    }), \"\\u9000\\u51FA\\u767B\\u5F55\")); // Don't show popup menu when it is been collapsed\n\n\n    const menuProps = collapsed ? {} : {\n      openKeys\n    };\n    const siderWidth = 256;\n\n    const layout = __jsx(_Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 7\n      }\n    }, __jsx(Sider, {\n      trigger: null,\n      collapsible: true,\n      collapsed: collapsed,\n      breakpoint: \"lg\",\n      onCollapse: this.onCollapse,\n      width: siderWidth,\n      className: \"sider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }\n    }, __jsx(Link, {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      src: logo,\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 15\n      }\n    }), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 15\n      }\n    }, title))), __jsx(_Menu, _extends({\n      theme: \"dark\",\n      mode: \"inline\"\n    }, menuProps, {\n      onOpenChange: this.onMenuOpenChange,\n      selectedKeys: selectedKeys,\n      style: {\n        margin: '16px 0',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }\n    }), this.renderNavMenuItems(menus))), __jsx(_Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }\n    }, __jsx(Header, {\n      className: classNames('header'),\n      style: {\n        paddingLeft: 12,\n        paddingRight: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: classNames('foldout'),\n      onClick: () => this.onCollapse(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 13\n      }\n    }, collapsed ? __jsx(MenuUnfoldOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 28\n      }\n    }) : __jsx(MenuFoldOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 53\n      }\n    })), __jsx(\"div\", {\n      className: classNames('right'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 13\n      }\n    }, user.user_name ? __jsx(_Dropdown, {\n      overlay: menu,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }\n    }, __jsx(\"span\", {\n      className: classNames(['action', 'account']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 19\n      }\n    }, __jsx(_Avatar, {\n      size: \"small\",\n      className: classNames('avatar'),\n      icon: __jsx(UserOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 81\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 21\n      }\n    }), user.real_name !== '' ? `${user.user_name}(${user.real_name})` : user.user_name)) : __jsx(_Spin, {\n      size: \"small\",\n      style: {\n        marginLeft: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 19\n      }\n    }))), __jsx(Content, {\n      className: classNames('content'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      style: {\n        minHeight: 'calc(100vh - 150px)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 13\n      }\n    }, __jsx(context.GlobalContext.Provider, {\n      value: global,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 15\n      }\n    }, children)), __jsx(GlobalFooter, {\n      copyright: __jsx(CopyRight, {\n        title: copyRight,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 38\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 13\n      }\n    }))), __jsx(UpdatePasswordDialog, {\n      visible: updatePwdVisible,\n      onCancel: this.handleUpdatePwdCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }\n    }));\n\n    return __jsx(DocumentTitle, {\n      title: this.renderPageTitle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 7\n      }\n    }, __jsx(ContainerQuery, {\n      query: query,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }\n    }, params => __jsx(\"div\", {\n      className: classNames(params),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 22\n      }\n    }, layout)));\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"onTriggerResizeEvent\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      const event = document.createEvent('HTMLEvents');\n      event.initEvent('resize', true, false);\n      window.dispatchEvent(event);\n    };\n  }\n})), _class)); // export default AdminLayout;\n\nexport default WithDva(state => ({\n  title: state.global.title,\n  copyRight: state.global.copyRight,\n  collapsed: state.global.collapsed,\n  openKeys: state.global.openKeys,\n  selectedKeys: state.global.selectedKeys,\n  user: state.global.user,\n  menuPaths: state.global.menuPaths,\n  menuMap: state.global.menuMap,\n  menus: state.global.menus,\n  global: state.global\n}))(AdminLayout);","map":{"version":3,"sources":["/Users/nguyenthanhbinh/Work/vnshop/admin/src/layouts/AdminLayout.js"],"names":["React","Icon","LegacyIcon","LockOutlined","LogoutOutlined","UserOutlined","MenuFoldOutlined","MenuUnfoldOutlined","DocumentTitle","WithDva","Link","ContainerQuery","classNames","Debounce","GlobalFooter","CopyRight","UpdatePasswordDialog","context","logo","Header","Sider","Content","SubMenu","query","maxWidth","minWidth","AdminLayout","PureComponent","updatePwdVisible","action","dispatch","props","collapsed","type","payload","key","setState","openKeys","menuMap","length","lastKey","lastItem","isParent","i","item","path","id","parent_path","onTriggerResizeEvent","getInitialProps","pathname","console","log","location","componentDidMount","renderNavMenuItems","menusData","map","name","show_status","children","some","child","icon","router","startsWith","renderPageTitle","menuPaths","title","ptitle","render","user","menus","copyRight","selectedKeys","global","state","menu","onMenuClick","menuProps","siderWidth","layout","onCollapse","onMenuOpenChange","margin","width","paddingLeft","paddingRight","user_name","real_name","marginLeft","minHeight","handleUpdatePwdCancel","params","event","document","createEvent","initEvent","window","dispatchEvent"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Icon as LegacyIcon } from '@ant-design/compatible';\r\nimport {\r\n  LockOutlined,\r\n  LogoutOutlined,\r\n  UserOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n} from '@ant-design/icons';\r\nimport { Layout, Menu, Avatar, Dropdown, Spin } from 'antd';\r\nimport DocumentTitle from 'react-document-title';\r\n// import { connect } from 'dva';\r\nimport WithDva from '../utils/store';\r\n\r\n// import { withRouter } from 'next/router'\r\n\r\n\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\n\r\nimport { Link } from 'next/link';\r\n\r\nimport { ContainerQuery } from 'react-container-query';\r\nimport classNames from 'classnames';\r\nimport Debounce from 'lodash-decorators/debounce';\r\nimport GlobalFooter from '@/components/GlobalFooter';\r\nimport CopyRight from '@/components/CopyRight';\r\n\r\nimport UpdatePasswordDialog from '@/components/UpdatePasswordDialog';\r\n\r\nimport context from '@/utils/context';\r\n\r\nimport './AdminLayout.less';\r\nimport logo from '../assets/logo.svg';\r\n\r\nconst { Header, Sider, Content } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst query = {\r\n  'screen-xs': {\r\n    maxWidth: 575,\r\n  },\r\n  'screen-sm': {\r\n    minWidth: 576,\r\n    maxWidth: 767,\r\n  },\r\n  'screen-md': {\r\n    minWidth: 768,\r\n    maxWidth: 991,\r\n  },\r\n  'screen-lg': {\r\n    minWidth: 992,\r\n    maxWidth: 1199,\r\n  },\r\n  'screen-xl': {\r\n    minWidth: 1200,\r\n  },\r\n};\r\n\r\n// @connect(state => ({\r\n//   title: state.global.title,\r\n//   copyRight: state.global.copyRight,\r\n//   collapsed: state.global.collapsed,\r\n//   openKeys: state.global.openKeys,\r\n//   selectedKeys: state.global.selectedKeys,\r\n//   user: state.global.user,\r\n//   menuPaths: state.global.menuPaths,\r\n//   menuMap: state.global.menuMap,\r\n//   menus: state.global.menus,\r\n//   global: state.global,\r\n// }))\r\nclass AdminLayout extends React.PureComponent {\r\n  static getInitialProps({ pathname }) {\r\n    console.log(\"pathname: \", pathname);\r\n    return { location: pathname }\r\n  }\r\n\r\n  state = {\r\n    updatePwdVisible: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount: \", this.props);\r\n\r\n    const {\r\n      location: { pathname },\r\n    } = this.props;\r\n\r\n    this.dispatch({\r\n      type: 'global/fetchUser',\r\n    });\r\n\r\n    this.dispatch({\r\n      type: 'global/fetchMenuTree',\r\n      pathname,\r\n    });\r\n  }\r\n\r\n  dispatch = action => {\r\n    const { dispatch } = this.props;\r\n    dispatch(action);\r\n  };\r\n\r\n  onCollapse = () => {\r\n    const { collapsed } = this.props;\r\n    this.dispatch({\r\n      type: 'global/changeLayoutCollapsed',\r\n      payload: !collapsed,\r\n    });\r\n  };\r\n\r\n  onMenuClick = ({ key }) => {\r\n    if (key === 'logout') {\r\n      this.dispatch({\r\n        type: 'login/logout',\r\n      });\r\n    } else if (key === 'updatepwd') {\r\n      this.setState({ updatePwdVisible: true });\r\n    }\r\n  };\r\n\r\n  onMenuOpenChange = openKeys => {\r\n    const { menuMap } = this.props;\r\n    if (openKeys.length > 1) {\r\n      const lastKey = openKeys[openKeys.length - 1];\r\n      const lastItem = menuMap[lastKey];\r\n      if (!lastItem) {\r\n        this.dispatch({\r\n          type: 'global/changeOpenKeys',\r\n          payload: [],\r\n        });\r\n        return;\r\n      }\r\n\r\n      let isParent = false;\r\n      for (let i = 0; i < openKeys.length - 1; i += 1) {\r\n        const item = menuMap[openKeys[i]] || {};\r\n        let path = item.id;\r\n        if (item.parent_path !== '') {\r\n          path = `${item.parent_path}/${path}`;\r\n        }\r\n        if (lastItem.parent_path === path) {\r\n          isParent = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!isParent) {\r\n        this.dispatch({\r\n          type: 'global/changeOpenKeys',\r\n          payload: [lastKey],\r\n        });\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.dispatch({\r\n      type: 'global/changeOpenKeys',\r\n      payload: [...openKeys],\r\n    });\r\n  };\r\n\r\n  onToggleClick = () => {\r\n    const { collapsed } = this.props;\r\n    this.dispatch({\r\n      type: 'global/changeLayoutCollapsed',\r\n      payload: !collapsed,\r\n    });\r\n    this.onTriggerResizeEvent();\r\n  };\r\n\r\n  @Debounce(600)\r\n  onTriggerResizeEvent = () => {\r\n    const event = document.createEvent('HTMLEvents');\r\n    event.initEvent('resize', true, false);\r\n    window.dispatchEvent(event);\r\n  };\r\n\r\n  handleUpdatePwdCancel = () => {\r\n    this.setState({ updatePwdVisible: false });\r\n  };\r\n\r\n  renderNavMenuItems(menusData) {\r\n    if (!menusData) {\r\n      return [];\r\n    }\r\n\r\n    return menusData.map(item => {\r\n      if (!item.name || item.show_status !== 1) {\r\n        return null;\r\n      }\r\n\r\n      if (item.children && item.children.some(child => child.name && child.show_status === 1)) {\r\n        return (\r\n          <SubMenu\r\n            title={\r\n              item.icon ? (\r\n                <span>\r\n                  <LegacyIcon type={item.icon} />\r\n                  <span>{item.name}</span>\r\n                </span>\r\n              ) : (\r\n                  item.name\r\n                )\r\n            }\r\n            key={item.id}\r\n          >\r\n            {this.renderNavMenuItems(item.children)}\r\n          </SubMenu>\r\n        );\r\n      }\r\n\r\n      const { router } = item;\r\n      const icon = item.icon && <LegacyIcon type={item.icon} />;\r\n\r\n      console.log(\"renderNavMenuItems: \", this.props);\r\n      const {\r\n        location: { pathname },\r\n      } = this.props;\r\n\r\n      return (\r\n        <Menu.Item key={item.id}>\r\n          {router.startsWith('http') ? (\r\n            <a href={router} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {icon}\r\n              <span>{item.name}</span>\r\n            </a>\r\n          ) : (\r\n              <Link href={router} replace={router === pathname}>\r\n                {icon}\r\n                <span>{item.name}</span>\r\n              </Link>\r\n            )}\r\n        </Menu.Item>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderPageTitle() {\r\n    console.log(\"renderPageTitle: \", this.props);\r\n    const {\r\n      location: { pathname },\r\n      menuPaths,\r\n      title,\r\n    } = this.props;\r\n\r\n    let ptitle = title;\r\n    const item = menuPaths[pathname];\r\n    if (item) {\r\n      ptitle = `${item.name} - ${title}`;\r\n    }\r\n    return ptitle;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children,\r\n      user,\r\n      collapsed,\r\n      menus,\r\n      copyRight,\r\n      openKeys,\r\n      title,\r\n      selectedKeys,\r\n      global,\r\n    } = this.props;\r\n\r\n    console.log(\"AdminLayout: \", this.props);\r\n\r\n\r\n    const { updatePwdVisible } = this.state;\r\n\r\n    const menu = (\r\n      <Menu className=\"menu\" selectedKeys={[]} onClick={this.onMenuClick}>\r\n        <Menu.Item key=\"updatepwd\">\r\n          <LockOutlined />\r\n          修改密码\r\n        </Menu.Item>\r\n        <Menu.Divider />\r\n        <Menu.Item key=\"logout\">\r\n          <LogoutOutlined />\r\n          退出登录\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n\r\n    // Don't show popup menu when it is been collapsed\r\n    const menuProps = collapsed ? {} : { openKeys };\r\n    const siderWidth = 256;\r\n\r\n    const layout = (\r\n      <Layout>\r\n        <Sider\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={collapsed}\r\n          breakpoint=\"lg\"\r\n          onCollapse={this.onCollapse}\r\n          width={siderWidth}\r\n          className=\"sider\"\r\n        >\r\n          <div className=\"logo\">\r\n            <Link href=\"/\">\r\n              <img src={logo} alt=\"logo\" />\r\n              <h1>{title}</h1>\r\n            </Link>\r\n          </div>\r\n          <Menu\r\n            theme=\"dark\"\r\n            mode=\"inline\"\r\n            {...menuProps}\r\n            onOpenChange={this.onMenuOpenChange}\r\n            selectedKeys={selectedKeys}\r\n            style={{ margin: '16px 0', width: '100%' }}\r\n          >\r\n            {this.renderNavMenuItems(menus)}\r\n          </Menu>\r\n        </Sider>\r\n        <Layout>\r\n          <Header\r\n            className={classNames('header')}\r\n            style={{\r\n              paddingLeft: 12,\r\n              paddingRight: 12,\r\n            }}\r\n          >\r\n            <div className={classNames('foldout')} onClick={() => this.onCollapse()}>\r\n              {collapsed ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\r\n            </div>\r\n            <div className={classNames('right')}>\r\n              {user.user_name ? (\r\n                <Dropdown overlay={menu}>\r\n                  <span className={classNames(['action', 'account'])}>\r\n                    <Avatar size=\"small\" className={classNames('avatar')} icon={<UserOutlined />} />\r\n                    {user.real_name !== ''\r\n                      ? `${user.user_name}(${user.real_name})`\r\n                      : user.user_name}\r\n                  </span>\r\n                </Dropdown>\r\n              ) : (\r\n                  <Spin size=\"small\" style={{ marginLeft: 8 }} />\r\n                )}\r\n            </div>\r\n          </Header>\r\n          <Content className={classNames('content')}>\r\n            <div style={{ minHeight: 'calc(100vh - 150px)' }}>\r\n              <context.GlobalContext.Provider value={global}>\r\n                {children}\r\n              </context.GlobalContext.Provider>\r\n            </div>\r\n            <GlobalFooter copyright={<CopyRight title={copyRight} />} />\r\n          </Content>\r\n        </Layout>\r\n        <UpdatePasswordDialog visible={updatePwdVisible} onCancel={this.handleUpdatePwdCancel} />\r\n      </Layout>\r\n    );\r\n\r\n    return (\r\n      <DocumentTitle title={this.renderPageTitle()}>\r\n        <ContainerQuery query={query}>\r\n          {params => <div className={classNames(params)}>{layout}</div>}\r\n        </ContainerQuery>\r\n      </DocumentTitle>\r\n    );\r\n  }\r\n}\r\n\r\n// export default AdminLayout;\r\nexport default WithDva(state => ({\r\n  title: state.global.title,\r\n  copyRight: state.global.copyRight,\r\n  collapsed: state.global.collapsed,\r\n  openKeys: state.global.openKeys,\r\n  selectedKeys: state.global.selectedKeys,\r\n  user: state.global.user,\r\n  menuPaths: state.global.menuPaths,\r\n  menuMap: state.global.menuMap,\r\n  menus: state.global.menus,\r\n  global: state.global,\r\n}))(AdminLayout);"]},"metadata":{},"sourceType":"module"}