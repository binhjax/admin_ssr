{"ast":null,"code":"import \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as demoService from '@/services/demo';\nexport default {\n  namespace: 'demo',\n  state: {\n    search: {},\n    pagination: {},\n    data: {\n      list: [],\n      pagination: {}\n    },\n    submitting: false,\n    formTitle: '',\n    formID: '',\n    formVisible: false,\n    formData: {}\n  },\n  effects: {\n    fetch: /*#__PURE__*/_regeneratorRuntime.mark(function fetch(_ref, _ref2) {\n      var search, pagination, call, put, select, params, s, p, response;\n      return _regeneratorRuntime.wrap(function fetch$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              search = _ref.search, pagination = _ref.pagination;\n              call = _ref2.call, put = _ref2.put, select = _ref2.select;\n              params = {};\n\n              if (!search) {\n                _context.next = 9;\n                break;\n              }\n\n              params = _objectSpread(_objectSpread({}, params), search);\n              _context.next = 7;\n              return put({\n                type: 'saveSearch',\n                payload: search\n              });\n\n            case 7:\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.next = 11;\n              return select(function (state) {\n                return state.demo.search;\n              });\n\n            case 11:\n              s = _context.sent;\n\n              if (s) {\n                params = _objectSpread(_objectSpread({}, params), s);\n              }\n\n            case 13:\n              if (!pagination) {\n                _context.next = 19;\n                break;\n              }\n\n              params = _objectSpread(_objectSpread({}, params), pagination);\n              _context.next = 17;\n              return put({\n                type: 'savePagination',\n                payload: pagination\n              });\n\n            case 17:\n              _context.next = 23;\n              break;\n\n            case 19:\n              _context.next = 21;\n              return select(function (state) {\n                return state.demo.pagination;\n              });\n\n            case 21:\n              p = _context.sent;\n\n              if (p) {\n                params = _objectSpread(_objectSpread({}, params), p);\n              }\n\n            case 23:\n              _context.next = 25;\n              return call(demoService.query, params);\n\n            case 25:\n              response = _context.sent;\n              _context.next = 28;\n              return put({\n                type: 'saveData',\n                payload: response\n              });\n\n            case 28:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, fetch);\n    }),\n    loadForm: /*#__PURE__*/_regeneratorRuntime.mark(function loadForm(_ref3, _ref4) {\n      var payload, put;\n      return _regeneratorRuntime.wrap(function loadForm$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              payload = _ref3.payload;\n              put = _ref4.put;\n              _context2.next = 4;\n              return put({\n                type: 'changeFormVisible',\n                payload: true\n              });\n\n            case 4:\n              _context2.next = 6;\n              return [put({\n                type: 'saveFormType',\n                payload: payload.type\n              }), put({\n                type: 'saveFormTitle',\n                payload: '新建基础示例'\n              }), put({\n                type: 'saveFormID',\n                payload: ''\n              }), put({\n                type: 'saveFormData',\n                payload: {}\n              })];\n\n            case 6:\n              if (!(payload.type === 'E')) {\n                _context2.next = 9;\n                break;\n              }\n\n              _context2.next = 9;\n              return [put({\n                type: 'saveFormTitle',\n                payload: '编辑基础示例'\n              }), put({\n                type: 'saveFormID',\n                payload: payload.id\n              }), put({\n                type: 'fetchForm',\n                payload: {\n                  id: payload.id\n                }\n              })];\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, loadForm);\n    }),\n    fetchForm: /*#__PURE__*/_regeneratorRuntime.mark(function fetchForm(_ref5, _ref6) {\n      var payload, call, put, response;\n      return _regeneratorRuntime.wrap(function fetchForm$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              payload = _ref5.payload;\n              call = _ref6.call, put = _ref6.put;\n              _context3.next = 4;\n              return call(demoService.get, payload.id);\n\n            case 4:\n              response = _context3.sent;\n              _context3.next = 7;\n              return [put({\n                type: 'saveFormData',\n                payload: response\n              })];\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, fetchForm);\n    }),\n    submit: /*#__PURE__*/_regeneratorRuntime.mark(function submit(_ref7, _ref8) {\n      var payload, call, put, select, params, formType, success, id, response, _response;\n\n      return _regeneratorRuntime.wrap(function submit$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              payload = _ref7.payload;\n              call = _ref8.call, put = _ref8.put, select = _ref8.select;\n              _context4.next = 4;\n              return put({\n                type: 'changeSubmitting',\n                payload: true\n              });\n\n            case 4:\n              params = _objectSpread({}, payload);\n              _context4.next = 7;\n              return select(function (state) {\n                return state.demo.formType;\n              });\n\n            case 7:\n              formType = _context4.sent;\n              success = false;\n\n              if (!(formType === 'E')) {\n                _context4.next = 19;\n                break;\n              }\n\n              _context4.next = 12;\n              return select(function (state) {\n                return state.demo.formID;\n              });\n\n            case 12:\n              id = _context4.sent;\n              _context4.next = 15;\n              return call(demoService.update, id, params);\n\n            case 15:\n              response = _context4.sent;\n\n              if (response.status === 'OK') {\n                success = true;\n              }\n\n              _context4.next = 23;\n              break;\n\n            case 19:\n              _context4.next = 21;\n              return call(demoService.create, params);\n\n            case 21:\n              _response = _context4.sent;\n\n              if (_response.id && _response.id !== '') {\n                success = true;\n              }\n\n            case 23:\n              _context4.next = 25;\n              return put({\n                type: 'changeSubmitting',\n                payload: false\n              });\n\n            case 25:\n              if (!success) {\n                _context4.next = 31;\n                break;\n              }\n\n              _message.success('保存成功');\n\n              _context4.next = 29;\n              return put({\n                type: 'changeFormVisible',\n                payload: false\n              });\n\n            case 29:\n              _context4.next = 31;\n              return put({\n                type: 'fetch'\n              });\n\n            case 31:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, submit);\n    }),\n    del: /*#__PURE__*/_regeneratorRuntime.mark(function del(_ref9, _ref10) {\n      var payload, call, put, response;\n      return _regeneratorRuntime.wrap(function del$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              payload = _ref9.payload;\n              call = _ref10.call, put = _ref10.put;\n              _context5.next = 4;\n              return call(demoService.del, payload.id);\n\n            case 4:\n              response = _context5.sent;\n\n              if (!(response.status === 'OK')) {\n                _context5.next = 9;\n                break;\n              }\n\n              _message.success('删除成功');\n\n              _context5.next = 9;\n              return put({\n                type: 'fetch'\n              });\n\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, del);\n    }),\n    changeStatus: /*#__PURE__*/_regeneratorRuntime.mark(function changeStatus(_ref11, _ref12) {\n      var payload, call, put, select, response, msg, data, newData, i, item;\n      return _regeneratorRuntime.wrap(function changeStatus$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              payload = _ref11.payload;\n              call = _ref12.call, put = _ref12.put, select = _ref12.select;\n\n              if (!(payload.status === 1)) {\n                _context6.next = 8;\n                break;\n              }\n\n              _context6.next = 5;\n              return call(demoService.enable, payload.id);\n\n            case 5:\n              response = _context6.sent;\n              _context6.next = 11;\n              break;\n\n            case 8:\n              _context6.next = 10;\n              return call(demoService.disable, payload.id);\n\n            case 10:\n              response = _context6.sent;\n\n            case 11:\n              if (!(response.status === 'OK')) {\n                _context6.next = 22;\n                break;\n              }\n\n              msg = '启用成功';\n\n              if (payload.status === 2) {\n                msg = '停用成功';\n              }\n\n              _message.success(msg);\n\n              _context6.next = 17;\n              return select(function (state) {\n                return state.demo.data;\n              });\n\n            case 17:\n              data = _context6.sent;\n              newData = {\n                list: [],\n                pagination: data.pagination\n              };\n\n              for (i = 0; i < data.list.length; i += 1) {\n                item = data.list[i];\n\n                if (item.id === payload.id) {\n                  item.status = payload.status;\n                }\n\n                newData.list.push(item);\n              }\n\n              _context6.next = 22;\n              return put({\n                type: 'saveData',\n                payload: newData\n              });\n\n            case 22:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, changeStatus);\n    })\n  },\n  reducers: {\n    saveData: function saveData(state, _ref13) {\n      var payload = _ref13.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: payload\n      });\n    },\n    saveSearch: function saveSearch(state, _ref14) {\n      var payload = _ref14.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        search: payload\n      });\n    },\n    savePagination: function savePagination(state, _ref15) {\n      var payload = _ref15.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pagination: payload\n      });\n    },\n    changeFormVisible: function changeFormVisible(state, _ref16) {\n      var payload = _ref16.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formVisible: payload\n      });\n    },\n    saveFormTitle: function saveFormTitle(state, _ref17) {\n      var payload = _ref17.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formTitle: payload\n      });\n    },\n    saveFormType: function saveFormType(state, _ref18) {\n      var payload = _ref18.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formType: payload\n      });\n    },\n    saveFormID: function saveFormID(state, _ref19) {\n      var payload = _ref19.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formID: payload\n      });\n    },\n    saveFormData: function saveFormData(state, _ref20) {\n      var payload = _ref20.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formData: payload\n      });\n    },\n    changeSubmitting: function changeSubmitting(state, _ref21) {\n      var payload = _ref21.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        submitting: payload\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/Users/nguyenthanhbinh/Work/vnshop/admin/src/models/demo.js"],"names":["demoService","namespace","state","search","pagination","data","list","submitting","formTitle","formID","formVisible","formData","effects","fetch","call","put","select","params","type","payload","demo","s","p","query","response","loadForm","id","fetchForm","get","submit","formType","success","update","status","create","del","changeStatus","enable","disable","msg","newData","i","length","item","push","reducers","saveData","saveSearch","savePagination","changeFormVisible","saveFormTitle","saveFormType","saveFormID","saveFormData","changeSubmitting"],"mappings":"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","sourcesContent":["import { message } from 'antd';\r\nimport * as demoService from '@/services/demo';\r\n\r\nexport default {\r\n  namespace: 'demo',\r\n  state: {\r\n    search: {},\r\n    pagination: {},\r\n    data: {\r\n      list: [],\r\n      pagination: {},\r\n    },\r\n    submitting: false,\r\n    formTitle: '',\r\n    formID: '',\r\n    formVisible: false,\r\n    formData: {},\r\n  },\r\n  effects: {\r\n    *fetch({ search, pagination }, { call, put, select }) {\r\n      let params = {};\r\n\r\n      if (search) {\r\n        params = { ...params, ...search };\r\n        yield put({\r\n          type: 'saveSearch',\r\n          payload: search,\r\n        });\r\n      } else {\r\n        const s = yield select(state => state.demo.search);\r\n        if (s) {\r\n          params = { ...params, ...s };\r\n        }\r\n      }\r\n\r\n      if (pagination) {\r\n        params = { ...params, ...pagination };\r\n        yield put({\r\n          type: 'savePagination',\r\n          payload: pagination,\r\n        });\r\n      } else {\r\n        const p = yield select(state => state.demo.pagination);\r\n        if (p) {\r\n          params = { ...params, ...p };\r\n        }\r\n      }\r\n\r\n      const response = yield call(demoService.query, params);\r\n      yield put({\r\n        type: 'saveData',\r\n        payload: response,\r\n      });\r\n    },\r\n    *loadForm({ payload }, { put }) {\r\n      yield put({\r\n        type: 'changeFormVisible',\r\n        payload: true,\r\n      });\r\n\r\n      yield [\r\n        put({\r\n          type: 'saveFormType',\r\n          payload: payload.type,\r\n        }),\r\n        put({\r\n          type: 'saveFormTitle',\r\n          payload: '新建基础示例',\r\n        }),\r\n        put({\r\n          type: 'saveFormID',\r\n          payload: '',\r\n        }),\r\n        put({\r\n          type: 'saveFormData',\r\n          payload: {},\r\n        }),\r\n      ];\r\n\r\n      if (payload.type === 'E') {\r\n        yield [\r\n          put({\r\n            type: 'saveFormTitle',\r\n            payload: '编辑基础示例',\r\n          }),\r\n          put({\r\n            type: 'saveFormID',\r\n            payload: payload.id,\r\n          }),\r\n          put({\r\n            type: 'fetchForm',\r\n            payload: { id: payload.id },\r\n          }),\r\n        ];\r\n      }\r\n    },\r\n    *fetchForm({ payload }, { call, put }) {\r\n      const response = yield call(demoService.get, payload.id);\r\n      yield [\r\n        put({\r\n          type: 'saveFormData',\r\n          payload: response,\r\n        }),\r\n      ];\r\n    },\r\n    *submit({ payload }, { call, put, select }) {\r\n      yield put({\r\n        type: 'changeSubmitting',\r\n        payload: true,\r\n      });\r\n\r\n      const params = { ...payload };\r\n      const formType = yield select(state => state.demo.formType);\r\n      let success = false;\r\n      if (formType === 'E') {\r\n        const id = yield select(state => state.demo.formID);\r\n        const response = yield call(demoService.update, id, params);\r\n        if (response.status === 'OK') {\r\n          success = true;\r\n        }\r\n      } else {\r\n        const response = yield call(demoService.create, params);\r\n        if (response.id && response.id !== '') {\r\n          success = true;\r\n        }\r\n      }\r\n\r\n      yield put({\r\n        type: 'changeSubmitting',\r\n        payload: false,\r\n      });\r\n\r\n      if (success) {\r\n        message.success('保存成功');\r\n        yield put({\r\n          type: 'changeFormVisible',\r\n          payload: false,\r\n        });\r\n        yield put({\r\n          type: 'fetch',\r\n        });\r\n      }\r\n    },\r\n    *del({ payload }, { call, put }) {\r\n      const response = yield call(demoService.del, payload.id);\r\n      if (response.status === 'OK') {\r\n        message.success('删除成功');\r\n        yield put({ type: 'fetch' });\r\n      }\r\n    },\r\n    *changeStatus({ payload }, { call, put, select }) {\r\n      let response;\r\n      if (payload.status === 1) {\r\n        response = yield call(demoService.enable, payload.id);\r\n      } else {\r\n        response = yield call(demoService.disable, payload.id);\r\n      }\r\n\r\n      if (response.status === 'OK') {\r\n        let msg = '启用成功';\r\n        if (payload.status === 2) {\r\n          msg = '停用成功';\r\n        }\r\n        message.success(msg);\r\n        const data = yield select(state => state.demo.data);\r\n        const newData = { list: [], pagination: data.pagination };\r\n\r\n        for (let i = 0; i < data.list.length; i += 1) {\r\n          const item = data.list[i];\r\n          if (item.id === payload.id) {\r\n            item.status = payload.status;\r\n          }\r\n          newData.list.push(item);\r\n        }\r\n\r\n        yield put({\r\n          type: 'saveData',\r\n          payload: newData,\r\n        });\r\n      }\r\n    },\r\n  },\r\n  reducers: {\r\n    saveData(state, { payload }) {\r\n      return { ...state, data: payload };\r\n    },\r\n    saveSearch(state, { payload }) {\r\n      return { ...state, search: payload };\r\n    },\r\n    savePagination(state, { payload }) {\r\n      return { ...state, pagination: payload };\r\n    },\r\n    changeFormVisible(state, { payload }) {\r\n      return { ...state, formVisible: payload };\r\n    },\r\n    saveFormTitle(state, { payload }) {\r\n      return { ...state, formTitle: payload };\r\n    },\r\n    saveFormType(state, { payload }) {\r\n      return { ...state, formType: payload };\r\n    },\r\n    saveFormID(state, { payload }) {\r\n      return { ...state, formID: payload };\r\n    },\r\n    saveFormData(state, { payload }) {\r\n      return { ...state, formData: payload };\r\n    },\r\n    changeSubmitting(state, { payload }) {\r\n      return { ...state, submitting: payload };\r\n    },\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}