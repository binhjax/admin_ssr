{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { DefaultLinkModel } from '@projectstorm/react-diagrams-defaults';\nimport { CustomLinkFactory } from './CustomLinkFactory';\nexport class CustomLinkModel extends DefaultLinkModel {\n  constructor(options = {}) {\n    super(_objectSpread(_objectSpread({\n      type: CustomLinkFactory.NAME\n    }, options), {}, {\n      width: 1,\n      curvyness: 1\n    }));\n\n    _defineProperty(this, \"lastHoverIndexOfPath\", void 0);\n\n    _defineProperty(this, \"_lastPathXdirection\", void 0);\n\n    _defineProperty(this, \"_firstPathXdirection\", void 0);\n\n    this.lastHoverIndexOfPath = 0;\n    this._lastPathXdirection = false;\n    this._firstPathXdirection = false;\n  }\n\n  setFirstAndLastPathsDirection() {\n    let points = this.getPoints();\n\n    for (let i = 1; i < points.length; i += points.length - 2) {\n      let dx = Math.abs(points[i].getX() - points[i - 1].getX());\n      let dy = Math.abs(points[i].getY() - points[i - 1].getY());\n\n      if (i - 1 === 0) {\n        this._firstPathXdirection = dx > dy;\n      } else {\n        this._lastPathXdirection = dx > dy;\n      }\n    }\n  } // @ts-ignore\n\n\n  addPoint(pointModel, index = 1) {\n    // @ts-ignore\n    super.addPoint(pointModel, index);\n    this.setFirstAndLastPathsDirection();\n    return pointModel;\n  }\n\n  deserialize(event) {\n    super.deserialize(event);\n    this.setFirstAndLastPathsDirection();\n  }\n\n  setManuallyFirstAndLastPathsDirection(first, last) {\n    this._firstPathXdirection = first;\n    this._lastPathXdirection = last;\n  }\n\n  getLastPathXdirection() {\n    return this._lastPathXdirection;\n  }\n\n  getFirstPathXdirection() {\n    return this._firstPathXdirection;\n  }\n\n  setWidth(width) {\n    this.options.width = width;\n    this.fireEvent({\n      width\n    }, 'widthChanged');\n  }\n\n  setColor(color) {\n    this.options.color = color;\n    this.fireEvent({\n      color\n    }, 'colorChanged');\n  }\n\n}","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Test/CustomLinkModel.ts"],"names":["DefaultLinkModel","CustomLinkFactory","CustomLinkModel","constructor","options","type","NAME","width","curvyness","lastHoverIndexOfPath","_lastPathXdirection","_firstPathXdirection","setFirstAndLastPathsDirection","points","getPoints","i","length","dx","Math","abs","getX","dy","getY","addPoint","pointModel","index","deserialize","event","setManuallyFirstAndLastPathsDirection","first","last","getLastPathXdirection","getFirstPathXdirection","setWidth","fireEvent","setColor","color"],"mappings":";;;;;;AAAA,SAASA,gBAAT,QAA0D,uCAA1D;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAIA,OAAO,MAAMC,eAAN,SAA8BF,gBAA9B,CAA+C;AAIpDG,EAAAA,WAAW,CAACC,OAAgC,GAAG,EAApC,EAAwC;AACjD;AACEC,MAAAA,IAAI,EAAEJ,iBAAiB,CAACK;AAD1B,OAEKF,OAFL;AAGEG,MAAAA,KAAK,EAAC,CAHR;AAIEC,MAAAA,SAAS,EAAC;AAJZ;;AADiD;;AAAA;;AAAA;;AAOjD,SAAKC,oBAAL,GAA4B,CAA5B;AACA,SAAKC,mBAAL,GAA2B,KAA3B;AACA,SAAKC,oBAAL,GAA4B,KAA5B;AACD;;AAEDC,EAAAA,6BAA6B,GAAG;AAC9B,QAAIC,MAAM,GAAG,KAAKC,SAAL,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAA3B,EAAmCD,CAAC,IAAIF,MAAM,CAACG,MAAP,GAAgB,CAAxD,EAA2D;AACzD,UAAIC,EAAE,GAAGC,IAAI,CAACC,GAAL,CAASN,MAAM,CAACE,CAAD,CAAN,CAAUK,IAAV,KAAmBP,MAAM,CAACE,CAAC,GAAG,CAAL,CAAN,CAAcK,IAAd,EAA5B,CAAT;AACA,UAAIC,EAAE,GAAGH,IAAI,CAACC,GAAL,CAASN,MAAM,CAACE,CAAD,CAAN,CAAUO,IAAV,KAAmBT,MAAM,CAACE,CAAC,GAAG,CAAL,CAAN,CAAcO,IAAd,EAA5B,CAAT;;AACA,UAAIP,CAAC,GAAG,CAAJ,KAAU,CAAd,EAAiB;AACf,aAAKJ,oBAAL,GAA4BM,EAAE,GAAGI,EAAjC;AACD,OAFD,MAEO;AACL,aAAKX,mBAAL,GAA2BO,EAAE,GAAGI,EAAhC;AACD;AACF;AACF,GA3BmD,CA6BpD;;;AACAE,EAAAA,QAAQ,CAAuBC,UAAvB,EAAsCC,KAAa,GAAG,CAAtD,EAA4D;AAClE;AACA,UAAMF,QAAN,CAAeC,UAAf,EAA2BC,KAA3B;AACA,SAAKb,6BAAL;AACA,WAAOY,UAAP;AACD;;AAEDE,EAAAA,WAAW,CAACC,KAAD,EAAgC;AACzC,UAAMD,WAAN,CAAkBC,KAAlB;AACA,SAAKf,6BAAL;AACD;;AAEDgB,EAAAA,qCAAqC,CAACC,KAAD,EAAQC,IAAR,EAAc;AACjD,SAAKnB,oBAAL,GAA4BkB,KAA5B;AACA,SAAKnB,mBAAL,GAA2BoB,IAA3B;AACD;;AAEDC,EAAAA,qBAAqB,GAAY;AAC/B,WAAO,KAAKrB,mBAAZ;AACD;;AACDsB,EAAAA,sBAAsB,GAAY;AAChC,WAAO,KAAKrB,oBAAZ;AACD;;AAEDsB,EAAAA,QAAQ,CAAC1B,KAAD,EAAgB;AACtB,SAAKH,OAAL,CAAaG,KAAb,GAAqBA,KAArB;AACA,SAAK2B,SAAL,CAAe;AAAE3B,MAAAA;AAAF,KAAf,EAA0B,cAA1B;AACD;;AAED4B,EAAAA,QAAQ,CAACC,KAAD,EAAgB;AACtB,SAAKhC,OAAL,CAAagC,KAAb,GAAqBA,KAArB;AACA,SAAKF,SAAL,CAAe;AAAEE,MAAAA;AAAF,KAAf,EAA0B,cAA1B;AACD;;AA9DmD","sourcesContent":["import { DefaultLinkModel, DefaultLinkModelOptions } from '@projectstorm/react-diagrams-defaults';\nimport { CustomLinkFactory } from './CustomLinkFactory';\nimport { PointModel } from '@projectstorm/react-diagrams-core';\nimport { DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport class CustomLinkModel extends DefaultLinkModel {\n  lastHoverIndexOfPath: number;\n  private _lastPathXdirection: boolean;\n  private _firstPathXdirection: boolean;\n  constructor(options: DefaultLinkModelOptions = {}) {\n    super({\n      type: CustomLinkFactory.NAME,\n      ...options,\n      width:1,\n      curvyness:1\n    });\n    this.lastHoverIndexOfPath = 0;\n    this._lastPathXdirection = false;\n    this._firstPathXdirection = false;\n  }\n\n  setFirstAndLastPathsDirection() {\n    let points = this.getPoints();\n    for (let i = 1; i < points.length; i += points.length - 2) {\n      let dx = Math.abs(points[i].getX() - points[i - 1].getX());\n      let dy = Math.abs(points[i].getY() - points[i - 1].getY());\n      if (i - 1 === 0) {\n        this._firstPathXdirection = dx > dy;\n      } else {\n        this._lastPathXdirection = dx > dy;\n      }\n    }\n  }\n\n  // @ts-ignore\n  addPoint<P extends PointModel>(pointModel: P, index: number = 1): P {\n    // @ts-ignore\n    super.addPoint(pointModel, index);\n    this.setFirstAndLastPathsDirection();\n    return pointModel;\n  }\n\n  deserialize(event: DeserializeEvent<this>) {\n    super.deserialize(event);\n    this.setFirstAndLastPathsDirection();\n  }\n\n  setManuallyFirstAndLastPathsDirection(first, last) {\n    this._firstPathXdirection = first;\n    this._lastPathXdirection = last;\n  }\n\n  getLastPathXdirection(): boolean {\n    return this._lastPathXdirection;\n  }\n  getFirstPathXdirection(): boolean {\n    return this._firstPathXdirection;\n  }\n\n  setWidth(width: number) {\n    this.options.width = width;\n    this.fireEvent({ width }, 'widthChanged');\n  }\n\n  setColor(color: string) {\n    this.options.color = color;\n    this.fireEvent({ color }, 'colorChanged');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}