{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as loginService from '@/services/login';\nexport default {\n  namespace: 'global',\n  state: {\n    title: '权限管理脚手架',\n    copyRight: '2020 LyricTian',\n    defaultURL: '/dashboard',\n    collapsed: false,\n    openKeys: [],\n    selectedKeys: [],\n    user: {\n      user_name: 'admin',\n      real_name: '管理员',\n      role_names: []\n    },\n    menuPaths: {},\n    menuMap: {},\n    menus: []\n  },\n  effects: {\n    *menuEvent({\n      pathname\n    }, {\n      put,\n      select\n    }) {\n      let p = pathname;\n\n      if (p === '/') {\n        p = yield select(state => state.global.defaultURL);\n      }\n\n      const menuPaths = yield select(state => state.global.menuPaths);\n      const item = menuPaths[p];\n\n      if (!item) {\n        return;\n      }\n\n      if (item.parent_path && item.parent_path !== '') {\n        yield put({\n          type: 'changeOpenKeys',\n          payload: item.parent_path.split('/')\n        });\n      }\n\n      yield put({\n        type: 'changeSelectedKeys',\n        payload: [item.id]\n      });\n    },\n\n    *fetchUser(_, {\n      call,\n      put\n    }) {\n      const response = yield call(loginService.getCurrentUser);\n      yield put({\n        type: 'saveUser',\n        payload: response\n      });\n    },\n\n    *fetchMenuTree({\n      pathname\n    }, {\n      call,\n      put\n    }) {\n      const response = yield call(loginService.queryMenuTree);\n      const menuData = response.list || [];\n      yield put({\n        type: 'saveMenus',\n        payload: menuData\n      });\n      const menuPaths = {};\n      const menuMap = {};\n\n      function fillData(data) {\n        for (let i = 0; i < data.length; i += 1) {\n          menuMap[data[i].id] = data[i];\n\n          if (data[i].router !== '') {\n            menuPaths[data[i].router] = data[i];\n          }\n\n          if (data[i].children && data[i].children.length > 0) {\n            fillData(data[i].children);\n          }\n        }\n      }\n\n      fillData(menuData);\n      yield [put({\n        type: 'saveMenuPaths',\n        payload: menuPaths\n      }), put({\n        type: 'saveMenuMap',\n        payload: menuMap\n      }), put({\n        type: 'menuEvent',\n        pathname\n      })];\n    }\n\n  },\n  reducers: {\n    changeLayoutCollapsed(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        collapsed: payload\n      });\n    },\n\n    changeOpenKeys(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        openKeys: payload\n      });\n    },\n\n    changeSelectedKeys(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selectedKeys: payload\n      });\n    },\n\n    saveUser(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: payload\n      });\n    },\n\n    saveMenuPaths(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        menuPaths: payload\n      });\n    },\n\n    saveMenuMap(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        menuMap: payload\n      });\n    },\n\n    saveMenus(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        menus: payload\n      });\n    }\n\n  },\n  subscriptions: {\n    setup({\n      dispatch,\n      history\n    }) {\n      // console.log(\"store.global:  subscriptions\")\n      history.listen(({\n        pathname\n      }) => {\n        dispatch({\n          type: 'menuEvent',\n          pathname\n        });\n      });\n    }\n\n  }\n};","map":{"version":3,"sources":["/Users/nguyenthanhbinh/Work/vnshop/admin/src/models/global.js"],"names":["loginService","namespace","state","title","copyRight","defaultURL","collapsed","openKeys","selectedKeys","user","user_name","real_name","role_names","menuPaths","menuMap","menus","effects","menuEvent","pathname","put","select","p","global","item","parent_path","type","payload","split","id","fetchUser","_","call","response","getCurrentUser","fetchMenuTree","queryMenuTree","menuData","list","fillData","data","i","length","router","children","reducers","changeLayoutCollapsed","changeOpenKeys","changeSelectedKeys","saveUser","saveMenuPaths","saveMenuMap","saveMenus","subscriptions","setup","dispatch","history","listen"],"mappings":"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","sourcesContent":["import * as loginService from '@/services/login';\r\n\r\nexport default {\r\n  namespace: 'global',\r\n\r\n  state: {\r\n    title: '权限管理脚手架',\r\n    copyRight: '2020 LyricTian',\r\n    defaultURL: '/dashboard',\r\n    collapsed: false,\r\n    openKeys: [],\r\n    selectedKeys: [],\r\n    user: {\r\n      user_name: 'admin',\r\n      real_name: '管理员',\r\n      role_names: [],\r\n    },\r\n    menuPaths: {},\r\n    menuMap: {},\r\n    menus: [],\r\n  },\r\n\r\n  effects: {\r\n    *menuEvent({ pathname }, { put, select }) {\r\n      let p = pathname;\r\n      if (p === '/') {\r\n        p = yield select(state => state.global.defaultURL);\r\n      }\r\n\r\n      const menuPaths = yield select(state => state.global.menuPaths);\r\n      const item = menuPaths[p];\r\n      if (!item) {\r\n        return;\r\n      }\r\n\r\n      if (item.parent_path && item.parent_path !== '') {\r\n        yield put({\r\n          type: 'changeOpenKeys',\r\n          payload: item.parent_path.split('/'),\r\n        });\r\n      }\r\n\r\n      yield put({\r\n        type: 'changeSelectedKeys',\r\n        payload: [item.id],\r\n      });\r\n    },\r\n    *fetchUser(_, { call, put }) {\r\n      const response = yield call(loginService.getCurrentUser);\r\n      yield put({\r\n        type: 'saveUser',\r\n        payload: response,\r\n      });\r\n    },\r\n    *fetchMenuTree({ pathname }, { call, put }) {\r\n      const response = yield call(loginService.queryMenuTree);\r\n\r\n      const menuData = response.list || [];\r\n      yield put({\r\n        type: 'saveMenus',\r\n        payload: menuData,\r\n      });\r\n\r\n      const menuPaths = {};\r\n      const menuMap = {};\r\n      function fillData(data) {\r\n        for (let i = 0; i < data.length; i += 1) {\r\n          menuMap[data[i].id] = data[i];\r\n          if (data[i].router !== '') {\r\n            menuPaths[data[i].router] = data[i];\r\n          }\r\n          if (data[i].children && data[i].children.length > 0) {\r\n            fillData(data[i].children);\r\n          }\r\n        }\r\n      }\r\n      fillData(menuData);\r\n\r\n      yield [\r\n        put({\r\n          type: 'saveMenuPaths',\r\n          payload: menuPaths,\r\n        }),\r\n        put({\r\n          type: 'saveMenuMap',\r\n          payload: menuMap,\r\n        }),\r\n        put({\r\n          type: 'menuEvent',\r\n          pathname,\r\n        }),\r\n      ];\r\n    },\r\n  },\r\n\r\n  reducers: {\r\n    changeLayoutCollapsed(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        collapsed: payload,\r\n      };\r\n    },\r\n    changeOpenKeys(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        openKeys: payload,\r\n      };\r\n    },\r\n    changeSelectedKeys(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        selectedKeys: payload,\r\n      };\r\n    },\r\n    saveUser(state, { payload }) {\r\n      return { ...state, user: payload };\r\n    },\r\n    saveMenuPaths(state, { payload }) {\r\n      return { ...state, menuPaths: payload };\r\n    },\r\n    saveMenuMap(state, { payload }) {\r\n      return { ...state, menuMap: payload };\r\n    },\r\n    saveMenus(state, { payload }) {\r\n      return { ...state, menus: payload };\r\n    },\r\n  },\r\n  subscriptions: {\r\n    setup({ dispatch, history }) {\r\n      // console.log(\"store.global:  subscriptions\")\r\n      history.listen(({ pathname }) => {\r\n        dispatch({\r\n          type: 'menuEvent',\r\n          pathname,\r\n        });\r\n      });\r\n    },\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}