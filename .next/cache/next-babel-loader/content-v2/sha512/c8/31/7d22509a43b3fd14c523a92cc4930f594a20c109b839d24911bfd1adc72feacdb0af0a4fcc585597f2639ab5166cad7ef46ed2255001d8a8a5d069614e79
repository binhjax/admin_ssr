{"ast":null,"code":"import \"antd/lib/popover/style\";\nimport _Popover from \"antd/lib/popover\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/auto-complete/style\";\nimport _AutoComplete from \"antd/lib/auto-complete\";\nimport _defineProperty from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport _slicedToArray from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _taggedTemplateLiteral from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/home/tuanquang/admin_ssr/src/components/Test/CustomNodeWidget.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 20px;\\n  cursor: pointer;\\n\\n  &:hover {\\n    background: #deecf3;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport { PortWidget } from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\nimport { ExclamationCircleOutlined, PlusOutlined, EditOutlined, MoreOutlined, DeleteOutlined } from '@ant-design/icons';\nvar styles = {\n  rightPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    right: '0px'\n  },\n  leftPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '0'\n  },\n  tableHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    color: 'white',\n    fontWeight: 900,\n    fontSize: '18px',\n    background: '#316896',\n    marginBottom: '-2px'\n  },\n  tableHeadText: {\n    fill: '#fff',\n    fontWeight: 700,\n    border: ' 0 solid #e2e8f0',\n    padding: '7px 30px 7px '\n  },\n  tableRow: {\n    fontWeight: 700,\n    fontSize: '16px',\n    display: 'flex',\n    flexBasis: 100,\n    justifyContent: 'space-between',\n    background: '#f6f6f6'\n  }\n};\nexport var Port = styled.div(_templateObject());\n_c = Port;\nexport var CustomNodeWidget = function CustomNodeWidget(props) {\n  _s();\n\n  var _useState = useState(false),\n      editNode = _useState[0],\n      setEditNode = _useState[1];\n\n  var _useState2 = useState(''),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      hover = _useState3[0],\n      setHover = _useState3[1];\n\n  var _useState4 = useState({}),\n      ports = _useState4[0],\n      setPorts = _useState4[1];\n\n  useEffect(function () {\n    setPorts(props.node.getPorts());\n  }, [ports]);\n\n  var addPort = function addPort() {\n    props.node.addCustomPort('new_col', '', '');\n    props.engine.repaintCanvas();\n  };\n\n  var confirm = function confirm() {\n    _Modal.confirm({\n      title: 'Confirm',\n      icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, _this),\n      content: 'Confirm delete table',\n      okText: 'Yes',\n      cancelText: 'No',\n      onOk: function onOk() {\n        props.node.remove();\n        props.engine.repaintCanvas();\n      }\n    });\n  };\n\n  var openEdit = function openEdit() {\n    setEditNode(true);\n    setName(props.node.getOptions().extras);\n  };\n\n  var closeEdit = function closeEdit() {\n    setEditNode(false);\n    setName('');\n  };\n\n  var handelChangeName = function handelChangeName(e) {\n    setName(e.target.value);\n  };\n\n  var content = /*#__PURE__*/_jsxDEV(_Row, {\n    children: [/*#__PURE__*/_jsxDEV(_Button, {\n      type: \"ghost\",\n      icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {\n        style: {\n          color: 'green'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }, _this),\n      onClick: function onClick() {\n        return addPort();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(_Button, {\n      type: \"ghost\",\n      icon: /*#__PURE__*/_jsxDEV(EditOutlined, {\n        style: {\n          color: 'cyan'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }, _this),\n      onClick: function onClick() {\n        return openEdit();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(_Button, {\n      type: \"ghost\",\n      icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n        style: {\n          color: 'red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }, _this),\n      onClick: function onClick() {\n        return confirm();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, _this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(_Modal, {\n      visible: editNode,\n      onCancel: function onCancel() {\n        return closeEdit();\n      },\n      okText: \"Save\",\n      cancelText: \"Cancel\",\n      centered: true,\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(_Input, {\n        value: name,\n        name: \"name\",\n        onChange: handelChangeName\n      }, \"name\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, _this), \"Body:\", Object.entries(ports).map(function (_ref, index) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            value = _ref2[1];\n\n        return /*#__PURE__*/_jsxDEV(_Row, {\n          gutter: 16,\n          children: [/*#__PURE__*/_jsxDEV(_Col, {\n            span: \"10\",\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              id: \"name\",\n              value: value.getOptions().extras.name,\n              name: key\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(_Col, {\n            span: \"8\",\n            children: /*#__PURE__*/_jsxDEV(_AutoComplete, {\n              style: {\n                width: 150\n              } // options={TYPE}\n              ,\n              filterOption: function filterOption(inputValue, option) {\n                return option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1;\n              },\n              value: value.getOptions().extras.type,\n              onChange: function onChange(type) {\n                value.getOptions().extras.type = type;\n                dispatch(action.setPorts(_objectSpread({}, ports)));\n              },\n              onSelect: function onSelect(type) {\n                value.getOptions().extras.type = type; // dispatch(action.setPorts({ ...ports }));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(_Col, {\n            span: \"6\",\n            children: /*#__PURE__*/_jsxDEV(_Select, {\n              defaultValue: value.getOptions().extras.key,\n              style: {\n                width: 120\n              },\n              onChange: function onChange(key) {\n                value.getOptions().extras.key = key; // dispatch(action.setPorts({ ...ports }));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minWidth: props.size * 2,\n        height: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '0',\n          right: '0'\n        },\n        children: /*#__PURE__*/_jsxDEV(_Popover, {\n          placement: \"rightBottom\",\n          content: content,\n          trigger: \"focus\",\n          children: /*#__PURE__*/_jsxDEV(_Button, {\n            type: \"ghost\",\n            style: {\n              border: 'none'\n            },\n            icon: /*#__PURE__*/_jsxDEV(MoreOutlined, {\n              style: {\n                color: 'white',\n                fontSize: '20px',\n                paddingTop: '5px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.tableHeader,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.tableHeadText,\n          children: props.node.getOptions().extras\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, _this), Object.entries(props.node.getPorts()).map(function (_ref3, index) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            key = _ref4[0],\n            value = _ref4[1];\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.tableRow,\n          children: [/*#__PURE__*/_jsxDEV(PortWidget, {\n            port: value,\n            engine: props.engine,\n            style: styles.leftPort,\n            children: /*#__PURE__*/_jsxDEV(Port, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(PortWidget, {\n            port: value,\n            engine: props.engine,\n            style: styles.rightPort,\n            children: /*#__PURE__*/_jsxDEV(Port, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingLeft: 30\n            },\n            children: value.getOptions().extras.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: '1 0 100px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingRight: 30,\n              color: '#999'\n            },\n            children: value.getOptions().extras.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CustomNodeWidget, \"fdBuVgiu4jF7ONrEpu8ulryLW0c=\");\n\n_c2 = CustomNodeWidget;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Port\");\n$RefreshReg$(_c2, \"CustomNodeWidget\");","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Test/CustomNodeWidget.tsx"],"names":["React","useEffect","useState","PortWidget","styled","ExclamationCircleOutlined","PlusOutlined","EditOutlined","MoreOutlined","DeleteOutlined","styles","rightPort","width","height","position","right","leftPort","left","tableHeader","display","alignItems","color","fontWeight","fontSize","background","marginBottom","tableHeadText","fill","border","padding","tableRow","flexBasis","justifyContent","Port","div","CustomNodeWidget","props","editNode","setEditNode","name","setName","hover","setHover","ports","setPorts","node","getPorts","addPort","addCustomPort","engine","repaintCanvas","confirm","title","icon","content","okText","cancelText","onOk","remove","openEdit","getOptions","extras","closeEdit","handelChangeName","e","target","value","Object","entries","map","index","key","inputValue","option","toUpperCase","indexOf","type","dispatch","action","minWidth","size","top","paddingTop","paddingLeft","flex","paddingRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { CustomNodeModel } from './CustomNodeModel';\nimport {\n  DiagramEngine,\n  PortModel,\n  PortModelAlignment,\n  PortWidget,\n} from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\n\nimport {\n  ExclamationCircleOutlined,\n  PlusOutlined,\n  EditOutlined,\n  KeyOutlined,\n  MoreOutlined,\n  DeleteOutlined,\n} from '@ant-design/icons';\nimport { Col, Modal, Input, Button, Typography, Row, Popover, AutoComplete, Select } from 'antd';\n\nexport interface CustomNodeWidgetProps {\n  node: CustomNodeModel;\n  engine: DiagramEngine;\n  size?: number;\n}\n\nconst styles = {\n  rightPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    right: '0px',\n  },\n\n  leftPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '0',\n  },\n  tableHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    color: 'white',\n    fontWeight: 900,\n    fontSize: '18px',\n    background: '#316896',\n    marginBottom: '-2px',\n  },\n  tableHeadText: {\n    fill: '#fff',\n    fontWeight: 700,\n    border: ' 0 solid #e2e8f0',\n    padding: '7px 30px 7px ',\n  },\n  tableRow: {\n    fontWeight: 700,\n    fontSize: '16px',\n    display: 'flex',\n    flexBasis: 100,\n    justifyContent: 'space-between',\n    background: '#f6f6f6',\n  },\n};\nexport const Port = styled.div`\n  height: 20px;\n  cursor: pointer;\n\n  &:hover {\n    background: #deecf3;\n  }\n`;\n\nexport const CustomNodeWidget: React.FC<CustomNodeWidgetProps> = props => {\n  const [editNode, setEditNode] = useState(false);\n  const [name, setName] = useState('');\n  const [hover, setHover] = useState('');\n  const [ports, setPorts] = useState<{ [s: string]: PortModel }>({});\n\n  useEffect(() => {\n    setPorts(props.node.getPorts());\n  }, [ports]);\n  const addPort = () => {\n    props.node.addCustomPort('new_col', '', '');\n    props.engine.repaintCanvas();\n  };\n  const confirm = () => {\n    Modal.confirm({\n      title: 'Confirm',\n      icon: <ExclamationCircleOutlined />,\n      content: 'Confirm delete table',\n      okText: 'Yes',\n      cancelText: 'No',\n      onOk() {\n        props.node.remove();\n        props.engine.repaintCanvas();\n      },\n    });\n  };\n  const openEdit = () => {\n    setEditNode(true);\n    setName(props.node.getOptions().extras);\n  };\n  const closeEdit = () => {\n    setEditNode(false);\n    setName('');\n  };\n  const handelChangeName = (e: any) => {\n    setName(e.target.value);\n  };\n\n  const content = (\n    <Row>\n      <Button\n        type=\"ghost\"\n        icon={<PlusOutlined style={{ color: 'green' }} />}\n        onClick={() => addPort()}\n      />\n      <Button\n        type=\"ghost\"\n        icon={<EditOutlined style={{ color: 'cyan' }} />}\n        onClick={() => openEdit()}\n      />\n      <Button\n        type=\"ghost\"\n        icon={<DeleteOutlined style={{ color: 'red' }} />}\n        onClick={() => confirm()}\n      />\n    </Row>\n  );\n  return (\n    <div>\n      <Modal\n        visible={editNode}\n        onCancel={() => closeEdit()}\n        okText=\"Save\"\n        cancelText=\"Cancel\"\n        centered={true}\n      >\n        Name:\n        <Input value={name} name=\"name\" key=\"name\" onChange={handelChangeName} />\n        Body:\n        {Object.entries(ports).map(([key, value], index: any) => (\n          <Row gutter={16} key={index}>\n            <Col span=\"10\">\n              <Input id=\"name\" value={value.getOptions().extras.name} name={key} key={index} />\n            </Col>\n            <Col span=\"8\">\n              <AutoComplete\n                style={{ width: 150 }}\n                // options={TYPE}\n                filterOption={(inputValue, option) =>\n                  option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n                }\n                value={value.getOptions().extras.type}\n                onChange={type => {\n                  value.getOptions().extras.type = type;\n                  dispatch(action.setPorts({ ...ports }));\n                }}\n                onSelect={type => {\n                  value.getOptions().extras.type = type;\n\n                  // dispatch(action.setPorts({ ...ports }));\n                }}\n              ></AutoComplete>\n            </Col>\n            <Col span=\"6\">\n              <Select\n                defaultValue={value.getOptions().extras.key}\n                style={{ width: 120 }}\n                onChange={key => {\n                  value.getOptions().extras.key = key;\n                  // dispatch(action.setPorts({ ...ports }));\n                }}\n              ></Select>\n            </Col>\n          </Row>\n        ))}\n      </Modal>\n      <div\n        style={{\n          minWidth: props.size * 2,\n          height: 'auto',\n        }}\n      >\n        <div style={{ position: 'absolute', top: '0', right: '0' }}>\n          <Popover placement=\"rightBottom\" content={content} trigger=\"focus\">\n            <Button\n              type=\"ghost\"\n              style={{ border: 'none' }}\n              icon={\n                <MoreOutlined style={{ color: 'white', fontSize: '20px', paddingTop: '5px' }} />\n              }\n            />\n          </Popover>\n        </div>\n        <div style={styles.tableHeader}>\n          <div style={styles.tableHeadText}>{props.node.getOptions().extras}</div>\n        </div>\n        {Object.entries(props.node.getPorts()).map(([key, value], index: any) => (\n          <div style={styles.tableRow} key={index}>\n            <PortWidget port={value} engine={props.engine} style={styles.leftPort}>\n              <Port />\n            </PortWidget>\n            <PortWidget port={value} engine={props.engine} style={styles.rightPort}>\n              <Port />\n            </PortWidget>\n            <div style={{ paddingLeft: 30 }}>{value.getOptions().extras.name}</div>\n            <div style={{ flex: '1 0 100px' }}></div>\n            <div style={{ paddingRight: 30, color: '#999' }}>{value.getOptions().extras.type}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}