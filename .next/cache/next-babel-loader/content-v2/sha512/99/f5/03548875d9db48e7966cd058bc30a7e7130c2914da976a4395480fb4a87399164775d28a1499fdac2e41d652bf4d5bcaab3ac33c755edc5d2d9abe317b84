{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/badge/style\";\nimport _Badge from \"antd/lib/badge\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\n\nvar _jsxFileName = \"/Users/nguyenthanhbinh/Work/vnshop/admin/src/pages/role/RoleList.js\",\n    _dec,\n    _class,\n    _temp;\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { Form } from '@ant-design/compatible';\nimport '@ant-design/compatible/assets/index.css';\nimport PageHeaderLayout from '@/layouts/PageHeaderLayout';\nimport PButton from '@/components/PermButton';\nimport { formatDate } from '@/utils/utils';\nimport RoleCard from './RoleCard';\nimport styles from './RoleList.less';\nimport WithDva from '../../utils/store'; // @connect(state => ({\n//   role: state.role,\n//   loading: state.loading.models.role,\n// }))\n\nlet RoleList = (_dec = Form.create(), _dec(_class = (_temp = class RoleList extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      selectedRowKeys: [],\n      selectedRows: []\n    });\n\n    _defineProperty(this, \"onItemDisableClick\", item => {\n      this.dispatch({\n        type: 'role/changeStatus',\n        payload: {\n          id: item.id,\n          status: 2\n        }\n      });\n    });\n\n    _defineProperty(this, \"onItemEnableClick\", item => {\n      this.dispatch({\n        type: 'role/changeStatus',\n        payload: {\n          id: item.id,\n          status: 1\n        }\n      });\n    });\n\n    _defineProperty(this, \"clearSelectRows\", () => {\n      const {\n        selectedRowKeys\n      } = this.state;\n\n      if (selectedRowKeys.length === 0) {\n        return;\n      }\n\n      this.setState({\n        selectedRowKeys: [],\n        selectedRows: []\n      });\n    });\n\n    _defineProperty(this, \"dispatch\", action => {\n      const {\n        dispatch\n      } = this.props;\n      dispatch(action);\n    });\n\n    _defineProperty(this, \"handleAddClick\", () => {\n      this.dispatch({\n        type: 'role/loadForm',\n        payload: {\n          type: 'A'\n        }\n      });\n    });\n\n    _defineProperty(this, \"handleEditClick\", item => {\n      this.dispatch({\n        type: 'role/loadForm',\n        payload: {\n          type: 'E',\n          id: item.id\n        }\n      });\n    });\n\n    _defineProperty(this, \"handleDelClick\", item => {\n      _Modal.confirm({\n        title: `确定删除【角色数据：${item.name}】？`,\n        okText: '确认',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk: this.handleDelOKClick.bind(this, item.id)\n      });\n    });\n\n    _defineProperty(this, \"handleTableSelectRow\", (record, selected) => {\n      const keys = [];\n      const rows = [];\n\n      if (selected) {\n        keys.push(record.id);\n        rows.push(record);\n      }\n\n      this.setState({\n        selectedRowKeys: keys,\n        selectedRows: rows\n      });\n    });\n\n    _defineProperty(this, \"handleTableChange\", pagination => {\n      this.dispatch({\n        type: 'role/fetch',\n        pagination: {\n          current: pagination.current,\n          pageSize: pagination.pageSize\n        }\n      });\n      this.clearSelectRows();\n    });\n\n    _defineProperty(this, \"onResetFormClick\", () => {\n      const {\n        form\n      } = this.props;\n      form.resetFields();\n      this.dispatch({\n        type: 'role/fetch',\n        search: {},\n        pagination: {}\n      });\n    });\n\n    _defineProperty(this, \"handleSearchFormSubmit\", e => {\n      if (e) {\n        e.preventDefault();\n      }\n\n      const {\n        form\n      } = this.props;\n      form.validateFields({\n        force: true\n      }, (err, values) => {\n        if (err) {\n          return;\n        }\n\n        this.dispatch({\n          type: 'role/fetch',\n          search: values,\n          pagination: {}\n        });\n        this.clearSelectRows();\n      });\n    });\n\n    _defineProperty(this, \"handleDataFormSubmit\", data => {\n      this.dispatch({\n        type: 'role/submit',\n        payload: data\n      });\n      this.clearSelectRows();\n    });\n\n    _defineProperty(this, \"handleDataFormCancel\", () => {\n      this.dispatch({\n        type: 'role/changeFormVisible',\n        payload: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.dispatch({\n      type: 'role/fetch',\n      search: {},\n      pagination: {}\n    });\n  }\n\n  handleDelOKClick(id) {\n    this.dispatch({\n      type: 'role/del',\n      payload: {\n        id\n      }\n    });\n    this.clearSelectRows();\n  }\n\n  renderDataForm() {\n    return __jsx(RoleCard, {\n      onCancel: this.handleDataFormCancel,\n      onSubmit: this.handleDataFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 12\n      }\n    });\n  }\n\n  renderSearchForm() {\n    const {\n      form: {\n        getFieldDecorator\n      }\n    } = this.props;\n    return __jsx(Form, {\n      onSubmit: this.handleSearchFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }\n    }, __jsx(_Row, {\n      gutter: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }, __jsx(_Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }, __jsx(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, getFieldDecorator('queryValue')(__jsx(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u9700\\u8981\\u67E5\\u8BE2\\u7684\\u5185\\u5BB9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 48\n      }\n    })))), __jsx(_Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      style: {\n        overflow: 'hidden',\n        paddingTop: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, __jsx(_Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }\n    }, \"\\u67E5\\u8BE2\"), __jsx(_Button, {\n      style: {\n        marginLeft: 8\n      },\n      onClick: this.onResetFormClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, \"\\u91CD\\u7F6E\")))));\n  }\n\n  render() {\n    const {\n      loading,\n      role: {\n        data: {\n          list,\n          pagination\n        }\n      }\n    } = this.props;\n    const {\n      selectedRowKeys,\n      selectedRows\n    } = this.state;\n    const columns = [{\n      title: '角色名称',\n      dataIndex: 'name'\n    }, {\n      title: '排序值',\n      dataIndex: 'sequence'\n    }, {\n      title: '状态',\n      dataIndex: 'status',\n      render: val => {\n        if (val === 1) {\n          return __jsx(_Badge, {\n            status: \"success\",\n            text: \"\\u542F\\u7528\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 20\n            }\n          });\n        }\n\n        return __jsx(_Badge, {\n          status: \"error\",\n          text: \"\\u505C\\u7528\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 18\n          }\n        });\n      }\n    }, {\n      title: '创建时间',\n      dataIndex: 'created_at',\n      render: val => __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 24\n        }\n      }, formatDate(val, 'YYYY-MM-DD'))\n    }, {\n      title: '备注',\n      dataIndex: 'memo'\n    }];\n\n    const paginationProps = _objectSpread({\n      showSizeChanger: true,\n      showQuickJumper: true,\n      showTotal: total => __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 27\n        }\n      }, \"\\u5171\", total, \"\\u6761\")\n    }, pagination);\n\n    const breadcrumbList = [{\n      title: '系统管理'\n    }, {\n      title: '角色管理',\n      href: '/system/role'\n    }];\n    return __jsx(PageHeaderLayout, {\n      title: \"\\u89D2\\u8272\\u7BA1\\u7406\",\n      breadcrumbList: breadcrumbList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 7\n      }\n    }, __jsx(_Card, {\n      bordered: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: styles.tableList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: styles.tableListForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }\n    }, this.renderSearchForm()), __jsx(\"div\", {\n      className: styles.tableListOperator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }\n    }, __jsx(PButton, {\n      code: \"add\",\n      type: \"primary\",\n      onClick: () => this.handleAddClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 15\n      }\n    }, \"\\u65B0\\u5EFA\"), selectedRows.length === 1 && [__jsx(PButton, {\n      key: \"edit\",\n      code: \"edit\",\n      onClick: () => this.handleEditClick(selectedRows[0]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }\n    }, \"\\u7F16\\u8F91\"), __jsx(PButton, {\n      key: \"del\",\n      code: \"del\",\n      type: \"danger\",\n      onClick: () => this.handleDelClick(selectedRows[0]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }\n    }, \"\\u5220\\u9664\"), selectedRows[0].status === 2 && __jsx(PButton, {\n      key: \"enable\",\n      code: \"enable\",\n      onClick: () => this.onItemEnableClick(selectedRows[0]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 19\n      }\n    }, \"\\u542F\\u7528\"), selectedRows[0].status === 1 && __jsx(PButton, {\n      key: \"disable\",\n      code: \"disable\",\n      type: \"danger\",\n      onClick: () => this.onItemDisableClick(selectedRows[0]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 19\n      }\n    }, \"\\u7981\\u7528\")]), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 13\n      }\n    }, __jsx(_Table, {\n      rowSelection: {\n        selectedRowKeys,\n        onSelect: this.handleTableSelectRow\n      },\n      loading: loading,\n      rowKey: record => record.id,\n      dataSource: list,\n      columns: columns,\n      pagination: paginationProps,\n      onChange: this.handleTableChange,\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 15\n      }\n    })))), this.renderDataForm());\n  }\n\n}, _temp)) || _class);\nexport default WithDva(state => ({\n  role: state.role,\n  loading: state.loading.models.role\n}))(RoleList); // export default RoleList;","map":{"version":3,"sources":["/Users/nguyenthanhbinh/Work/vnshop/admin/src/pages/role/RoleList.js"],"names":["React","PureComponent","Form","PageHeaderLayout","PButton","formatDate","RoleCard","styles","WithDva","RoleList","create","selectedRowKeys","selectedRows","item","dispatch","type","payload","id","status","state","length","setState","action","props","confirm","title","name","okText","okType","cancelText","onOk","handleDelOKClick","bind","record","selected","keys","rows","push","pagination","current","pageSize","clearSelectRows","form","resetFields","search","e","preventDefault","validateFields","force","err","values","data","componentDidMount","renderDataForm","handleDataFormCancel","handleDataFormSubmit","renderSearchForm","getFieldDecorator","handleSearchFormSubmit","overflow","paddingTop","marginLeft","onResetFormClick","render","loading","role","list","columns","dataIndex","val","paginationProps","showSizeChanger","showQuickJumper","showTotal","total","breadcrumbList","href","tableList","tableListForm","tableListOperator","handleAddClick","handleEditClick","handleDelClick","onItemEnableClick","onItemDisableClick","onSelect","handleTableSelectRow","handleTableChange","models"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { Form } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\nimport { Row, Col, Card, Input, Button, Table, Modal, Badge } from 'antd';\r\nimport PageHeaderLayout from '@/layouts/PageHeaderLayout';\r\nimport PButton from '@/components/PermButton';\r\nimport { formatDate } from '@/utils/utils';\r\nimport RoleCard from './RoleCard';\r\n\r\nimport styles from './RoleList.less';\r\n\r\nimport WithDva from '../../utils/store';\r\n\r\n\r\n// @connect(state => ({\r\n//   role: state.role,\r\n//   loading: state.loading.models.role,\r\n// }))\r\n@Form.create()\r\nclass RoleList extends PureComponent {\r\n  state = {\r\n    selectedRowKeys: [],\r\n    selectedRows: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.dispatch({\r\n      type: 'role/fetch',\r\n      search: {},\r\n      pagination: {},\r\n    });\r\n  }\r\n\r\n  onItemDisableClick = item => {\r\n    this.dispatch({\r\n      type: 'role/changeStatus',\r\n      payload: { id: item.id, status: 2 },\r\n    });\r\n  };\r\n\r\n  onItemEnableClick = item => {\r\n    this.dispatch({\r\n      type: 'role/changeStatus',\r\n      payload: { id: item.id, status: 1 },\r\n    });\r\n  };\r\n\r\n  clearSelectRows = () => {\r\n    const { selectedRowKeys } = this.state;\r\n    if (selectedRowKeys.length === 0) {\r\n      return;\r\n    }\r\n    this.setState({ selectedRowKeys: [], selectedRows: [] });\r\n  };\r\n\r\n  dispatch = action => {\r\n    const { dispatch } = this.props;\r\n    dispatch(action);\r\n  };\r\n\r\n  handleAddClick = () => {\r\n    this.dispatch({\r\n      type: 'role/loadForm',\r\n      payload: {\r\n        type: 'A',\r\n      },\r\n    });\r\n  };\r\n\r\n  handleEditClick = item => {\r\n    this.dispatch({\r\n      type: 'role/loadForm',\r\n      payload: {\r\n        type: 'E',\r\n        id: item.id,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleDelClick = item => {\r\n    Modal.confirm({\r\n      title: `确定删除【角色数据：${item.name}】？`,\r\n      okText: '确认',\r\n      okType: 'danger',\r\n      cancelText: '取消',\r\n      onOk: this.handleDelOKClick.bind(this, item.id),\r\n    });\r\n  };\r\n\r\n  handleTableSelectRow = (record, selected) => {\r\n    const keys = [];\r\n    const rows = [];\r\n    if (selected) {\r\n      keys.push(record.id);\r\n      rows.push(record);\r\n    }\r\n    this.setState({\r\n      selectedRowKeys: keys,\r\n      selectedRows: rows,\r\n    });\r\n  };\r\n\r\n  handleTableChange = pagination => {\r\n    this.dispatch({\r\n      type: 'role/fetch',\r\n      pagination: {\r\n        current: pagination.current,\r\n        pageSize: pagination.pageSize,\r\n      },\r\n    });\r\n    this.clearSelectRows();\r\n  };\r\n\r\n  onResetFormClick = () => {\r\n    const { form } = this.props;\r\n    form.resetFields();\r\n\r\n    this.dispatch({\r\n      type: 'role/fetch',\r\n      search: {},\r\n      pagination: {},\r\n    });\r\n  };\r\n\r\n  handleSearchFormSubmit = e => {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n\r\n    const { form } = this.props;\r\n    form.validateFields({ force: true }, (err, values) => {\r\n      if (err) {\r\n        return;\r\n      }\r\n      this.dispatch({\r\n        type: 'role/fetch',\r\n        search: values,\r\n        pagination: {},\r\n      });\r\n      this.clearSelectRows();\r\n    });\r\n  };\r\n\r\n  handleDataFormSubmit = data => {\r\n    this.dispatch({\r\n      type: 'role/submit',\r\n      payload: data,\r\n    });\r\n    this.clearSelectRows();\r\n  };\r\n\r\n  handleDataFormCancel = () => {\r\n    this.dispatch({\r\n      type: 'role/changeFormVisible',\r\n      payload: false,\r\n    });\r\n  };\r\n\r\n  handleDelOKClick(id) {\r\n    this.dispatch({\r\n      type: 'role/del',\r\n      payload: { id },\r\n    });\r\n    this.clearSelectRows();\r\n  }\r\n\r\n  renderDataForm() {\r\n    return <RoleCard onCancel={this.handleDataFormCancel} onSubmit={this.handleDataFormSubmit} />;\r\n  }\r\n\r\n  renderSearchForm() {\r\n    const {\r\n      form: { getFieldDecorator },\r\n    } = this.props;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSearchFormSubmit}>\r\n        <Row gutter={16}>\r\n          <Col span={8}>\r\n            <Form.Item>\r\n              {getFieldDecorator('queryValue')(<Input placeholder=\"请输入需要查询的内容\" />)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={8}>\r\n            <div style={{ overflow: 'hidden', paddingTop: 4 }}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                查询\r\n              </Button>\r\n              <Button style={{ marginLeft: 8 }} onClick={this.onResetFormClick}>\r\n                重置\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      loading,\r\n      role: {\r\n        data: { list, pagination },\r\n      },\r\n    } = this.props;\r\n\r\n    const { selectedRowKeys, selectedRows } = this.state;\r\n\r\n    const columns = [\r\n      {\r\n        title: '角色名称',\r\n        dataIndex: 'name',\r\n      },\r\n      {\r\n        title: '排序值',\r\n        dataIndex: 'sequence',\r\n      },\r\n      {\r\n        title: '状态',\r\n        dataIndex: 'status',\r\n        render: val => {\r\n          if (val === 1) {\r\n            return <Badge status=\"success\" text=\"启用\" />;\r\n          }\r\n          return <Badge status=\"error\" text=\"停用\" />;\r\n        },\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        dataIndex: 'created_at',\r\n        render: val => <span>{formatDate(val, 'YYYY-MM-DD')}</span>,\r\n      },\r\n      {\r\n        title: '备注',\r\n        dataIndex: 'memo',\r\n      },\r\n    ];\r\n\r\n    const paginationProps = {\r\n      showSizeChanger: true,\r\n      showQuickJumper: true,\r\n      showTotal: total => <span>共{total}条</span>,\r\n      ...pagination,\r\n    };\r\n\r\n    const breadcrumbList = [{ title: '系统管理' }, { title: '角色管理', href: '/system/role' }];\r\n\r\n    return (\r\n      <PageHeaderLayout title=\"角色管理\" breadcrumbList={breadcrumbList}>\r\n        <Card bordered={false}>\r\n          <div className={styles.tableList}>\r\n            <div className={styles.tableListForm}>{this.renderSearchForm()}</div>\r\n            <div className={styles.tableListOperator}>\r\n              <PButton code=\"add\" type=\"primary\" onClick={() => this.handleAddClick()}>\r\n                新建\r\n              </PButton>\r\n              {selectedRows.length === 1 && [\r\n                <PButton\r\n                  key=\"edit\"\r\n                  code=\"edit\"\r\n                  onClick={() => this.handleEditClick(selectedRows[0])}\r\n                >\r\n                  编辑\r\n                </PButton>,\r\n                <PButton\r\n                  key=\"del\"\r\n                  code=\"del\"\r\n                  type=\"danger\"\r\n                  onClick={() => this.handleDelClick(selectedRows[0])}\r\n                >\r\n                  删除\r\n                </PButton>,\r\n                selectedRows[0].status === 2 && (\r\n                  <PButton\r\n                    key=\"enable\"\r\n                    code=\"enable\"\r\n                    onClick={() => this.onItemEnableClick(selectedRows[0])}\r\n                  >\r\n                    启用\r\n                  </PButton>\r\n                ),\r\n                selectedRows[0].status === 1 && (\r\n                  <PButton\r\n                    key=\"disable\"\r\n                    code=\"disable\"\r\n                    type=\"danger\"\r\n                    onClick={() => this.onItemDisableClick(selectedRows[0])}\r\n                  >\r\n                    禁用\r\n                  </PButton>\r\n                ),\r\n              ]}\r\n            </div>\r\n            <div>\r\n              <Table\r\n                rowSelection={{\r\n                  selectedRowKeys,\r\n                  onSelect: this.handleTableSelectRow,\r\n                }}\r\n                loading={loading}\r\n                rowKey={record => record.id}\r\n                dataSource={list}\r\n                columns={columns}\r\n                pagination={paginationProps}\r\n                onChange={this.handleTableChange}\r\n                size=\"small\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </Card>\r\n        {this.renderDataForm()}\r\n      </PageHeaderLayout>\r\n    );\r\n  }\r\n}\r\nexport default WithDva(state => ({\r\n  role: state.role,\r\n  loading: state.loading.models.role,\r\n}))(RoleList);\r\n// export default RoleList;\r\n"]},"metadata":{},"sourceType":"module"}