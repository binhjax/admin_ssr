{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _taggedTemplateLiteral from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/tuanquang/admin_ssr/src/components/Test/CustomNodeWidget.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 20px;\\n  background: #f6f6f6;\\n  cursor: pointer;\\n  margin-top: 5px;\\n\\n  &:hover {\\n    background: #deecf3;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport { PortModelAlignment, PortWidget } from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\nvar styles = {\n  tableHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    color: 'white',\n    border: ' 0 solid #e2e8f0',\n    fontWeight: 900,\n    fontSize: '20px',\n    background: '#316896',\n    marginBottom: '-2px'\n  },\n  tableRow: {\n    fontWeight: 700,\n    fontSize: '20px',\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  rightPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '380px'\n  },\n  leftPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '0'\n  }\n};\nexport var Port = styled.div(_templateObject());\n_c = Port;\nexport var CustomNodeWidget = /*#__PURE__*/function (_React$Component) {\n  _inherits(CustomNodeWidget, _React$Component);\n\n  var _super = _createSuper(CustomNodeWidget);\n\n  function CustomNodeWidget(props) {\n    _classCallCheck(this, CustomNodeWidget);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(CustomNodeWidget, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          minWidth: this.props.size * 2,\n          minHeight: this.props.size,\n          width: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.tableHeader,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.tableHeadText,\n            children: \"Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.tableRow,\n          children: [/*#__PURE__*/_jsxDEV(PortWidget, {\n            port: this.props.node.getPort(PortModelAlignment.LEFT),\n            engine: this.props.engine,\n            style: styles.leftPort,\n            children: /*#__PURE__*/_jsxDEV(Port, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(PortWidget, {\n            port: this.props.node.getPort(PortModelAlignment.RIGHT),\n            engine: this.props.engine,\n            style: styles.rightPort,\n            children: /*#__PURE__*/_jsxDEV(Port, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingLeft: 30\n            },\n            children: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#dbdd4d'\n            },\n            children: \"String\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingRight: 30\n            },\n            children: \"PK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return CustomNodeWidget;\n}(React.Component);\n\nvar _c;\n\n$RefreshReg$(_c, \"Port\");","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Test/CustomNodeWidget.tsx"],"names":["React","PortModelAlignment","PortWidget","styled","styles","tableHeader","display","alignItems","color","border","fontWeight","fontSize","background","marginBottom","tableRow","justifyContent","rightPort","width","height","position","left","leftPort","Port","div","CustomNodeWidget","props","minWidth","size","minHeight","tableHeadText","node","getPort","LEFT","engine","RIGHT","paddingLeft","paddingRight","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DiamondNodeModel } from './DiamondNodeModel';\nimport { DiagramEngine, PortModelAlignment, PortWidget } from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\n\nexport interface CustomNodeWidgetProps {\n  node: DiamondNodeModel;\n  engine: DiagramEngine;\n  size?: number;\n}\n\nconst styles = {\n  tableHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    color: 'white',\n    border: ' 0 solid #e2e8f0',\n    fontWeight: 900,\n    fontSize: '20px',\n    background: '#316896',\n    marginBottom: '-2px',\n  },\n\n  tableRow: {\n    fontWeight: 700,\n    fontSize: '20px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  rightPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '380px',\n  },\n\n  leftPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '0',\n  },\n};\nexport const Port = styled.div`\n  height: 20px;\n  background: #f6f6f6;\n  cursor: pointer;\n  margin-top: 5px;\n\n  &:hover {\n    background: #deecf3;\n  }\n`;\nexport class CustomNodeWidget extends React.Component<CustomNodeWidgetProps> {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div style={{ minWidth: this.props.size * 2, minHeight: this.props.size, width: 'auto' }}>\n        <div style={styles.tableHeader}>\n          <div style={styles.tableHeadText}>Test</div>\n        </div>\n        <div style={styles.tableRow}>\n          <PortWidget\n            port={this.props.node.getPort(PortModelAlignment.LEFT)}\n            engine={this.props.engine}\n            style={styles.leftPort}\n          >\n            <Port />\n          </PortWidget>\n          <PortWidget\n            port={this.props.node.getPort(PortModelAlignment.RIGHT)}\n            engine={this.props.engine}\n            style={styles.rightPort}\n          >\n            <Port />\n          </PortWidget>\n          <div style={{ paddingLeft: 30 }}>Student</div>\n          <div style={{ color: '#dbdd4d' }}>String</div>\n          <div style={{ paddingRight: 30 }}>PK</div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}