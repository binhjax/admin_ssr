{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Link } from 'next/link';\nimport PageHeader from '@/components/PageHeader';\nimport styles from './PageHeaderLayout.less';\nexport default ((_ref) => {\n  let {\n    children,\n    wrapperClassName,\n    top\n  } = _ref,\n      restProps = _objectWithoutProperties(_ref, [\"children\", \"wrapperClassName\", \"top\"]);\n\n  return __jsx(\"div\", {\n    style: {\n      margin: '-24px -24px 0'\n    },\n    className: wrapperClassName\n  }, top, __jsx(PageHeader, _extends({}, restProps, {\n    linkElement: Link\n  })), children ? __jsx(\"div\", {\n    className: styles.content\n  }, children) : null);\n});","map":null,"metadata":{},"sourceType":"module"}