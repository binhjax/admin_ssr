{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/tuanquang/admin_ssr/src/components/Test/index.tsx\";\nimport createEngine, { DefaultNodeModel, DiagramModel } from '@projectstorm/react-diagrams';\nimport * as React from 'react'; // import the custom models\n\nimport { CustomNodeModel } from './CustomNodeModel';\nimport { CustomNodeFactory } from './CustomNodeFactory';\nimport { CustomPortFactory } from './CustomPortFactory';\nimport { CustomPortModel } from './CustomPortModel';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport { DemoCanvasWidget } from '../helpers1/DemoCanvasWidget';\nimport { CustomLinkFactory } from './CustomLinkFactory';\nexport default (() => {\n  //1) setup the diagram engine\n  var engine = createEngine(); // register some other factories as well\n\n  engine.getPortFactories().registerFactory(new CustomPortFactory('diamond', config => new CustomPortModel('', '', '')));\n  engine.getLinkFactories().registerFactory(new CustomLinkFactory());\n  engine.getNodeFactories().registerFactory(new CustomNodeFactory()); //2) setup the diagram model\n\n  var model = new DiagramModel(); //3-A) create a default node\n\n  var node1 = new DefaultNodeModel('Node 1', 'rgb(0,192,255)');\n  var port1 = node1.addOutPort('Out');\n  node1.setPosition(100, 200); //3-B) create our new custom node\n\n  var node2 = new CustomNodeModel();\n  node2.setPosition(250, 108);\n  node2.addPort(new CustomPortModel('id', 'int', 'pk'));\n  var node3 = new DefaultNodeModel('Node 3', 'red');\n  var port3 = node3.addInPort('In');\n  node3.setPosition(500, 100); //3-C) link the 2 nodes together\n\n  var node4 = new DefaultNodeModel('Node 4', 'rgb(0,192,255)');\n  var port4 = node4.addOutPort('Out');\n  node4.setPosition(200, 10); //4) add the models to the root graph\n\n  model.addAll(node1, node2, node3, node4); //5) load model into engine\n\n  engine.setModel(model); //6) render the diagram!\n\n  return /*#__PURE__*/_jsxDEV(DemoCanvasWidget, {\n    children: /*#__PURE__*/_jsxDEV(CanvasWidget, {\n      engine: engine\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n});","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Test/index.tsx"],"names":["createEngine","DefaultNodeModel","DiagramModel","React","CustomNodeModel","CustomNodeFactory","CustomPortFactory","CustomPortModel","CanvasWidget","DemoCanvasWidget","CustomLinkFactory","engine","getPortFactories","registerFactory","config","getLinkFactories","getNodeFactories","model","node1","port1","addOutPort","setPosition","node2","addPort","node3","port3","addInPort","node4","port4","addAll","setModel"],"mappings":";;AAAA,OAAOA,YAAP,IACEC,gBADF,EAEEC,YAFF,QAMO,8BANP;AAOA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CACA;;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,YAAT,QAA6B,iCAA7B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AAEA,SAASC,iBAAT,QAAkC,qBAAlC;AAEA,gBAAe,MAAM;AACnB;AACA,MAAIC,MAAM,GAAGX,YAAY,EAAzB,CAFmB,CAInB;;AACAW,EAAAA,MAAM,CACHC,gBADH,GAEGC,eAFH,CAEmB,IAAIP,iBAAJ,CAAsB,SAAtB,EAAiCQ,MAAM,IAAI,IAAIP,eAAJ,CAAoB,EAApB,EAAwB,EAAxB,EAA4B,EAA5B,CAA3C,CAFnB;AAGAI,EAAAA,MAAM,CAACI,gBAAP,GAA0BF,eAA1B,CAA0C,IAAIH,iBAAJ,EAA1C;AAEAC,EAAAA,MAAM,CAACK,gBAAP,GAA0BH,eAA1B,CAA0C,IAAIR,iBAAJ,EAA1C,EAVmB,CAYnB;;AACA,MAAIY,KAAK,GAAG,IAAIf,YAAJ,EAAZ,CAbmB,CAenB;;AACA,MAAIgB,KAAK,GAAG,IAAIjB,gBAAJ,CAAqB,QAArB,EAA+B,gBAA/B,CAAZ;AACA,MAAIkB,KAAK,GAAGD,KAAK,CAACE,UAAN,CAAiB,KAAjB,CAAZ;AACAF,EAAAA,KAAK,CAACG,WAAN,CAAkB,GAAlB,EAAuB,GAAvB,EAlBmB,CAoBnB;;AACA,MAAIC,KAAK,GAAG,IAAIlB,eAAJ,EAAZ;AACAkB,EAAAA,KAAK,CAACD,WAAN,CAAkB,GAAlB,EAAuB,GAAvB;AACAC,EAAAA,KAAK,CAACC,OAAN,CAAc,IAAIhB,eAAJ,CAAoB,IAApB,EAA0B,KAA1B,EAAiC,IAAjC,CAAd;AAEA,MAAIiB,KAAK,GAAG,IAAIvB,gBAAJ,CAAqB,QAArB,EAA+B,KAA/B,CAAZ;AACA,MAAIwB,KAAK,GAAGD,KAAK,CAACE,SAAN,CAAgB,IAAhB,CAAZ;AACAF,EAAAA,KAAK,CAACH,WAAN,CAAkB,GAAlB,EAAuB,GAAvB,EA3BmB,CA6BnB;;AAEA,MAAIM,KAAK,GAAG,IAAI1B,gBAAJ,CAAqB,QAArB,EAA+B,gBAA/B,CAAZ;AACA,MAAI2B,KAAK,GAAGD,KAAK,CAACP,UAAN,CAAiB,KAAjB,CAAZ;AACAO,EAAAA,KAAK,CAACN,WAAN,CAAkB,GAAlB,EAAuB,EAAvB,EAjCmB,CAmCnB;;AACAJ,EAAAA,KAAK,CAACY,MAAN,CAAaX,KAAb,EAAoBI,KAApB,EAA2BE,KAA3B,EAAkCG,KAAlC,EApCmB,CAsCnB;;AACAhB,EAAAA,MAAM,CAACmB,QAAP,CAAgBb,KAAhB,EAvCmB,CAyCnB;;AACA,sBACE,QAAC,gBAAD;AAAA,2BACE,QAAC,YAAD;AAAc,MAAA,MAAM,EAAEN;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA/CD","sourcesContent":["import createEngine, {\n  DefaultNodeModel,\n  DiagramModel,\n  PortModelAlignment,\n  DefaultPortModel,\n  RightAngleLinkFactory,\n} from '@projectstorm/react-diagrams';\nimport * as React from 'react';\n// import the custom models\nimport { CustomNodeModel } from './CustomNodeModel';\nimport { CustomNodeFactory } from './CustomNodeFactory';\nimport { CustomPortFactory } from './CustomPortFactory';\nimport { CustomPortModel } from './CustomPortModel';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport { DemoCanvasWidget } from '../helpers1/DemoCanvasWidget';\nimport { CustomLinkModel } from '../CustomNode/CustomLinkModel';\nimport { CustomLinkFactory } from './CustomLinkFactory';\n\nexport default () => {\n  //1) setup the diagram engine\n  var engine = createEngine();\n\n  // register some other factories as well\n  engine\n    .getPortFactories()\n    .registerFactory(new CustomPortFactory('diamond', config => new CustomPortModel('', '', '')));\n  engine.getLinkFactories().registerFactory(new CustomLinkFactory());\n\n  engine.getNodeFactories().registerFactory(new CustomNodeFactory());\n\n  //2) setup the diagram model\n  var model = new DiagramModel();\n\n  //3-A) create a default node\n  var node1 = new DefaultNodeModel('Node 1', 'rgb(0,192,255)');\n  var port1 = node1.addOutPort('Out');\n  node1.setPosition(100, 200);\n\n  //3-B) create our new custom node\n  var node2 = new CustomNodeModel();\n  node2.setPosition(250, 108);\n  node2.addPort(new CustomPortModel('id', 'int', 'pk'));\n\n  var node3 = new DefaultNodeModel('Node 3', 'red');\n  var port3 = node3.addInPort('In');\n  node3.setPosition(500, 100);\n\n  //3-C) link the 2 nodes together\n\n  var node4 = new DefaultNodeModel('Node 4', 'rgb(0,192,255)');\n  var port4 = node4.addOutPort('Out');\n  node4.setPosition(200, 10);\n\n  //4) add the models to the root graph\n  model.addAll(node1, node2, node3, node4);\n\n  //5) load model into engine\n  engine.setModel(model);\n\n  //6) render the diagram!\n  return (\n    <DemoCanvasWidget>\n      <CanvasWidget engine={engine} />\n    </DemoCanvasWidget>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}