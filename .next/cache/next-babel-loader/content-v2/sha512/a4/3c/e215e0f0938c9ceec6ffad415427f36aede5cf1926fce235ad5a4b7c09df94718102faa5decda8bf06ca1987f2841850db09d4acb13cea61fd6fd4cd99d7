{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/tuanquang/admin_ssr/src/components/Editor/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-noconflict/mode-mysql';\nimport 'ace-builds/src-noconflict/theme-monokai';\n\nconst Editor = props => {\n  const {\n    0: data,\n    1: setData\n  } = useState('');\n  useEffect(() => {\n    window.addEventListener('message', event => {\n      console.log(event);\n\n      if (event) {\n        console.log(event);\n        setData(localStorage.getItem('json-diagram'));\n        console.log(localStorage.getItem('json-diagram'));\n        console.log(data);\n      }\n    }, false);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AceEditor, {\n      placeholder: \"Placeholder Text\",\n      mode: \"mysql\",\n      theme: \"monokai\",\n      name: \"blah2\",\n      width: \"100%\",\n      height: \"100vh\" //   onLoad={this.onLoad}\n      //   onChange={this.onChange}\n      ,\n      fontSize: 14,\n      showPrintMargin: true,\n      showGutter: true,\n      highlightActiveLine: true,\n      value: \"Table users as U { id int [pk, increment] // auto-increment full_name varchar created_at timestamp country_code int } Table countries { code int [pk] name varchar continent_name varchar } // Creating references // You can also define relaionship separately // > many-to-one; < one-to-many; - one-to-one Ref: U.country_code > countries.code   Ref: merchants.country_code > countries.code //----------------------------------------------// //// -- LEVEL 2 //// -- Adding column settings Table order_items { order_id int [ref: > orders.id] // inline relationship (many-to-one) product_id int quantity int [default: 1] // default value } Ref: order_items.product_id > products.id Table orders { id int [pk] // primary key user_id int [not null, unique] status varchar created_at varchar [note: 'When order created'] // add column note } \",\n      setOptions: {\n        enableBasicAutocompletion: false,\n        enableLiveAutocompletion: false,\n        enableSnippets: false,\n        showLineNumbers: true,\n        tabSize: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Editor;","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Editor/index.js"],"names":["React","useEffect","useState","AceEditor","Editor","props","data","setData","window","addEventListener","event","console","log","localStorage","getItem","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,OAAO,sCAAP;AACA,OAAO,yCAAP;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,MAAM,CAACC,gBAAP,CACE,SADF,EAEEC,KAAK,IAAI;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AAEA,UAAIA,KAAJ,EAAW;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEAH,QAAAA,OAAO,CAACM,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAD,CAAP;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAZ;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACD;AACF,KAZH,EAaE,KAbF;AAeD,GAhBQ,CAAT;AAkBA,sBACE;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,WAAW,EAAC,kBADd;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,KAAK,EAAC,MALR;AAME,MAAA,MAAM,EAAC,OANT,CAOE;AACA;AARF;AASE,MAAA,QAAQ,EAAE,EATZ;AAUE,MAAA,eAAe,EAAE,IAVnB;AAWE,MAAA,UAAU,EAAE,IAXd;AAYE,MAAA,mBAAmB,EAAE,IAZvB;AAaE,MAAA,KAAK,EAAC,m0BAbR;AAoDE,MAAA,UAAU,EAAE;AACVS,QAAAA,yBAAyB,EAAE,KADjB;AAEVC,QAAAA,wBAAwB,EAAE,KAFhB;AAGVC,QAAAA,cAAc,EAAE,KAHN;AAIVC,QAAAA,eAAe,EAAE,IAJP;AAKVC,QAAAA,OAAO,EAAE;AALC;AApDd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgED,CApFD;;AAqFA,eAAef,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport AceEditor from 'react-ace';\n\nimport 'ace-builds/src-noconflict/mode-mysql';\nimport 'ace-builds/src-noconflict/theme-monokai';\n\nconst Editor = props => {\n  const [data, setData] = useState('');\n  useEffect(() => {\n    window.addEventListener(\n      'message',\n      event => {\n        console.log(event);\n\n        if (event) {\n          console.log(event);\n\n          setData(localStorage.getItem('json-diagram'));\n          console.log(localStorage.getItem('json-diagram'));\n          console.log(data);\n        }\n      },\n      false\n    );\n  });\n\n  return (\n    <div>\n      <AceEditor\n        placeholder=\"Placeholder Text\"\n        mode=\"mysql\"\n        theme=\"monokai\"\n        name=\"blah2\"\n        width=\"100%\"\n        height=\"100vh\"\n        //   onLoad={this.onLoad}\n        //   onChange={this.onChange}\n        fontSize={14}\n        showPrintMargin={true}\n        showGutter={true}\n        highlightActiveLine={true}\n        value=\"Table users as U {\n            id int [pk, increment] // auto-increment\n            full_name varchar\n            created_at timestamp\n            country_code int\n          }\n          \n          Table countries {\n            code int [pk]\n            name varchar\n            continent_name varchar\n           }\n          \n          // Creating references\n          // You can also define relaionship separately\n          // > many-to-one; < one-to-many; - one-to-one\n          Ref: U.country_code > countries.code  \n          Ref: merchants.country_code > countries.code\n          \n          //----------------------------------------------//\n          \n          //// -- LEVEL 2\n          //// -- Adding column settings\n          \n          Table order_items {\n            order_id int [ref: > orders.id] // inline relationship (many-to-one)\n            product_id int\n            quantity int [default: 1] // default value\n          }\n          \n          Ref: order_items.product_id > products.id\n          \n          Table orders {\n            id int [pk] // primary key\n            user_id int [not null, unique]\n            status varchar\n            created_at varchar [note: 'When order created'] // add column note\n          }\n          \"\n        setOptions={{\n          enableBasicAutocompletion: false,\n          enableLiveAutocompletion: false,\n          enableSnippets: false,\n          showLineNumbers: true,\n          tabSize: 2,\n        }}\n      />\n    </div>\n  );\n};\nexport default Editor;\n"]},"metadata":{},"sourceType":"module"}