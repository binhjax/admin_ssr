{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport \"antd/lib/badge/style\";\nimport _Badge from \"antd/lib/badge\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/tree/style\";\nimport _Tree from \"antd/lib/tree\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/nguyenthanhbinh/Work/vnshop/admin/src/pages/menu/MenuList.js\",\n    _dec,\n    _class,\n    _temp;\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport { Form } from '@ant-design/compatible';\nimport '@ant-design/compatible/assets/index.css';\nimport PageHeaderLayout from '@/layouts/PageHeaderLayout';\nimport PButton from '@/components/PermButton';\nimport { formatDate } from '@/utils/utils';\nimport MenuCard from './MenuCard';\nimport styles from './MenuList.less';\nimport WithDva from '../../utils/store'; // @connect(({ menu, loading }) => ({\n//   menu,\n//   loading: loading.models.menu,\n// }))\n\nvar MenuList = (_dec = Form.create(), _dec(_class = (_temp = /*#__PURE__*/function (_PureComponent) {\n  _inherits(MenuList, _PureComponent);\n\n  var _super = _createSuper(MenuList);\n\n  function MenuList() {\n    var _this;\n\n    _classCallCheck(this, MenuList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      selectedRowKeys: [],\n      selectedRows: [],\n      treeSelectedKeys: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onItemDisableClick\", function (item) {\n      _this.dispatch({\n        type: 'menu/changeStatus',\n        payload: {\n          id: item.id,\n          status: 2\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onItemEnableClick\", function (item) {\n      _this.dispatch({\n        type: 'menu/changeStatus',\n        payload: {\n          id: item.id,\n          status: 1\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEditClick\", function () {\n      var selectedRows = _this.state.selectedRows;\n\n      if (selectedRows.length === 0) {\n        return;\n      }\n\n      var item = selectedRows[0];\n\n      _this.dispatch({\n        type: 'menu/loadForm',\n        payload: {\n          type: 'E',\n          id: item.id\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAddClick\", function () {\n      _this.dispatch({\n        type: 'menu/loadForm',\n        payload: {\n          type: 'A'\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDelClick\", function () {\n      var selectedRows = _this.state.selectedRows;\n\n      if (selectedRows.length === 0) {\n        return;\n      }\n\n      var item = selectedRows[0];\n\n      _Modal.confirm({\n        title: \"\\u786E\\u5B9A\\u5220\\u9664\\u3010\\u83DC\\u5355\\u6570\\u636E\\uFF1A\".concat(item.name, \"\\u3011\\uFF1F\"),\n        okText: '确认',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk: _this.handleDelOKClick.bind(_assertThisInitialized(_this), item.id)\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTableSelectRow\", function (record, selected) {\n      var keys = [];\n      var rows = [];\n\n      if (selected) {\n        keys.push(record.id);\n        rows.push(record);\n      }\n\n      _this.setState({\n        selectedRowKeys: keys,\n        selectedRows: rows\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTableChange\", function (pagination) {\n      _this.dispatch({\n        type: 'menu/fetch',\n        pagination: {\n          current: pagination.current,\n          pageSize: pagination.pageSize\n        }\n      });\n\n      _this.clearSelectRows();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onResetFormClick\", function () {\n      var form = _this.props.form;\n      form.resetFields();\n\n      _this.dispatch({\n        type: 'menu/fetch',\n        search: {\n          parent_id: _this.getParentID()\n        },\n        pagination: {}\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSearchFormSubmit\", function (e) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      var form = _this.props.form;\n      form.validateFields(function (err, values) {\n        if (err) {\n          return;\n        }\n\n        _this.dispatch({\n          type: 'menu/fetch',\n          search: _objectSpread(_objectSpread({}, values), {}, {\n            parent_id: _this.getParentID()\n          }),\n          pagination: {}\n        });\n\n        _this.clearSelectRows();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFormSubmit\", function (data) {\n      _this.dispatch({\n        type: 'menu/submit',\n        payload: data\n      });\n\n      _this.clearSelectRows();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFormCancel\", function () {\n      _this.dispatch({\n        type: 'menu/changeFormVisible',\n        payload: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearSelectRows\", function () {\n      var selectedRowKeys = _this.state.selectedRowKeys;\n\n      if (selectedRowKeys.length === 0) {\n        return;\n      }\n\n      _this.setState({\n        selectedRowKeys: [],\n        selectedRows: []\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"dispatch\", function (action) {\n      var dispatch = _this.props.dispatch;\n      dispatch(action);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getParentID\", function () {\n      var treeSelectedKeys = _this.state.treeSelectedKeys;\n      var parentID = '';\n\n      if (treeSelectedKeys.length > 0) {\n        var _treeSelectedKeys = _slicedToArray(treeSelectedKeys, 1);\n\n        parentID = _treeSelectedKeys[0];\n      }\n\n      return parentID;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderTreeNodes\", function (data) {\n      return data.map(function (item) {\n        if (item.children) {\n          return __jsx(_Tree.TreeNode, {\n            title: item.name,\n            key: item.id,\n            dataRef: item,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 11\n            }\n          }, _this.renderTreeNodes(item.children));\n        }\n\n        return __jsx(_Tree.TreeNode, {\n          title: item.name,\n          key: item.id,\n          dataRef: item,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 14\n          }\n        });\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(MenuList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.dispatch({\n        type: 'menu/fetchTree'\n      });\n      this.dispatch({\n        type: 'menu/fetch',\n        search: {},\n        pagination: {}\n      });\n    }\n  }, {\n    key: \"handleDelOKClick\",\n    value: function handleDelOKClick(id) {\n      this.dispatch({\n        type: 'menu/del',\n        payload: {\n          id: id\n        }\n      });\n      this.clearSelectRows();\n    }\n  }, {\n    key: \"renderDataForm\",\n    value: function renderDataForm() {\n      return __jsx(MenuCard, {\n        onCancel: this.handleFormCancel,\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 12\n        }\n      });\n    }\n  }, {\n    key: \"renderSearchForm\",\n    value: function renderSearchForm() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return __jsx(Form, {\n        onSubmit: this.onSearchFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 7\n        }\n      }, __jsx(_Row, {\n        gutter: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 9\n        }\n      }, __jsx(_Col, {\n        span: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }\n      }, getFieldDecorator('queryValue')(__jsx(_Input, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u9700\\u8981\\u67E5\\u8BE2\\u7684\\u5185\\u5BB9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 48\n        }\n      })))), __jsx(_Col, {\n        span: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        style: {\n          overflow: 'hidden',\n          paddingTop: 4\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }\n      }, __jsx(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }\n      }, \"\\u67E5\\u8BE2\"), __jsx(_Button, {\n        style: {\n          marginLeft: 8\n        },\n        onClick: this.onResetFormClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }\n      }, \"\\u91CD\\u7F6E\")))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          loading = _this$props.loading,\n          _this$props$menu = _this$props.menu,\n          _this$props$menu$data = _this$props$menu.data,\n          list = _this$props$menu$data.list,\n          pagination = _this$props$menu$data.pagination,\n          treeData = _this$props$menu.treeData,\n          expandedKeys = _this$props$menu.expandedKeys;\n      var _this$state = this.state,\n          selectedRowKeys = _this$state.selectedRowKeys,\n          selectedRows = _this$state.selectedRows;\n      var columns = [{\n        title: '菜单名称',\n        dataIndex: 'name',\n        width: 130,\n        render: function render(val, row) {\n          if (row.show_status !== 1) {\n            return __jsx(_Badge, {\n              status: \"default\",\n              text: val,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 20\n              }\n            });\n          }\n\n          return __jsx(\"span\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 18\n            }\n          }, val);\n        }\n      }, {\n        title: '排序值',\n        dataIndex: 'sequence',\n        width: 100\n      }, {\n        title: '菜单图标',\n        dataIndex: 'icon',\n        width: 100\n      }, {\n        title: '访问路由',\n        dataIndex: 'router',\n        width: 150\n      }, {\n        title: '状态',\n        dataIndex: 'status',\n        width: 80,\n        render: function render(val) {\n          if (val === 1) {\n            return __jsx(_Badge, {\n              status: \"success\",\n              text: \"\\u542F\\u7528\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 20\n              }\n            });\n          }\n\n          return __jsx(_Badge, {\n            status: \"error\",\n            text: \"\\u505C\\u7528\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 18\n            }\n          });\n        }\n      }, {\n        title: '创建时间',\n        width: 150,\n        dataIndex: 'created_at',\n        render: function render(val) {\n          return __jsx(\"span\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 24\n            }\n          }, formatDate(val, 'YYYY-MM-DD'));\n        }\n      }, {\n        title: '备注',\n        dataIndex: 'memo'\n      }];\n\n      var paginationProps = _objectSpread({\n        showSizeChanger: true,\n        showQuickJumper: true,\n        showTotal: function showTotal(total) {\n          return __jsx(\"span\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 27\n            }\n          }, \"\\u5171\", total, \"\\u6761\");\n        }\n      }, pagination);\n\n      var breadcrumbList = [{\n        title: 'System Management'\n      }, {\n        title: 'Menu management',\n        href: '/system/menu'\n      }];\n      return __jsx(PageHeaderLayout, {\n        title: \"Menu management\",\n        breadcrumbList: breadcrumbList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 7\n        }\n      }, __jsx(_Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 9\n        }\n      }, __jsx(_Layout.Sider, {\n        width: 180,\n        style: {\n          background: '#fff',\n          borderRight: '1px solid lightGray',\n          padding: 15,\n          overflow: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }\n      }, __jsx(_Tree, {\n        expandedKeys: expandedKeys,\n        onSelect: function onSelect(keys) {\n          _this2.setState({\n            treeSelectedKeys: keys\n          });\n\n          var search = _this2.props.menu.search;\n          var item = {\n            parentID: undefined\n          };\n\n          if (keys.length > 0) {\n            var _keys = _slicedToArray(keys, 1);\n\n            item.parentID = _keys[0];\n          }\n\n          _this2.dispatch({\n            type: 'menu/fetch',\n            search: _objectSpread(_objectSpread({}, search), item),\n            pagination: {}\n          });\n        },\n        onExpand: function onExpand(keys) {\n          _this2.dispatch({\n            type: 'menu/saveExpandedKeys',\n            payload: keys\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }\n      }, this.renderTreeNodes(treeData))), __jsx(_Layout.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }\n      }, __jsx(_Card, {\n        bordered: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: styles.tableList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 15\n        }\n      }, __jsx(\"div\", {\n        className: styles.tableListForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 17\n        }\n      }, this.renderSearchForm()), __jsx(\"div\", {\n        className: styles.tableListOperator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 17\n        }\n      }, __jsx(PButton, {\n        code: \"add\",\n        type: \"primary\",\n        onClick: function onClick() {\n          return _this2.handleAddClick();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 19\n        }\n      }, \"\\u65B0\\u5EFA\"), selectedRowKeys.length === 1 && [__jsx(PButton, {\n        key: \"edit\",\n        code: \"edit\",\n        onClick: function onClick() {\n          return _this2.handleEditClick();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 21\n        }\n      }, \"\\u7F16\\u8F91\"), __jsx(PButton, {\n        key: \"del\",\n        code: \"del\",\n        type: \"danger\",\n        onClick: function onClick() {\n          return _this2.handleDelClick();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 21\n        }\n      }, \"\\u5220\\u9664\"), selectedRows[0].status === 2 && __jsx(PButton, {\n        key: \"enable\",\n        code: \"enable\",\n        onClick: function onClick() {\n          return _this2.onItemEnableClick(selectedRows[0]);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 23\n        }\n      }, \"\\u542F\\u7528\"), selectedRows[0].status === 1 && __jsx(PButton, {\n        key: \"disable\",\n        code: \"disable\",\n        type: \"danger\",\n        onClick: function onClick() {\n          return _this2.onItemDisableClick(selectedRows[0]);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 23\n        }\n      }, \"\\u7981\\u7528\")]), __jsx(_Table, {\n        rowSelection: {\n          selectedRowKeys: selectedRowKeys,\n          onSelect: this.handleTableSelectRow\n        },\n        loading: loading,\n        rowKey: function rowKey(record) {\n          return record.id;\n        },\n        dataSource: list,\n        columns: columns,\n        pagination: paginationProps,\n        onChange: this.onTableChange,\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 17\n        }\n      }))))), this.renderDataForm());\n    }\n  }]);\n\n  return MenuList;\n}(PureComponent), _temp)) || _class);\nexport default WithDva(function (_ref) {\n  var menu = _ref.menu,\n      loading = _ref.loading;\n  return {\n    menu: menu,\n    loading: loading.models.menu\n  };\n})(MenuList); // export default MenuList;","map":{"version":3,"sources":["/Users/nguyenthanhbinh/Work/vnshop/admin/src/pages/menu/MenuList.js"],"names":["React","PureComponent","Form","PageHeaderLayout","PButton","formatDate","MenuCard","styles","WithDva","MenuList","create","selectedRowKeys","selectedRows","treeSelectedKeys","item","dispatch","type","payload","id","status","state","length","confirm","title","name","okText","okType","cancelText","onOk","handleDelOKClick","bind","record","selected","keys","rows","push","setState","pagination","current","pageSize","clearSelectRows","form","props","resetFields","search","parent_id","getParentID","e","preventDefault","validateFields","err","values","data","action","parentID","map","children","renderTreeNodes","handleFormCancel","handleFormSubmit","getFieldDecorator","onSearchFormSubmit","overflow","paddingTop","marginLeft","onResetFormClick","loading","menu","list","treeData","expandedKeys","columns","dataIndex","width","render","val","row","show_status","paginationProps","showSizeChanger","showQuickJumper","showTotal","total","breadcrumbList","href","background","borderRight","padding","undefined","tableList","tableListForm","renderSearchForm","tableListOperator","handleAddClick","handleEditClick","handleDelClick","onItemEnableClick","onItemDisableClick","onSelect","handleTableSelectRow","onTableChange","renderDataForm","models"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { Form } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\nimport { Row, Col, Card, Input, Button, Table, Modal, Layout, Tree, Badge } from 'antd';\r\nimport PageHeaderLayout from '@/layouts/PageHeaderLayout';\r\nimport PButton from '@/components/PermButton';\r\nimport { formatDate } from '@/utils/utils';\r\nimport MenuCard from './MenuCard';\r\nimport styles from './MenuList.less';\r\nimport WithDva from '../../utils/store';\r\n\r\n\r\n\r\n// @connect(({ menu, loading }) => ({\r\n//   menu,\r\n//   loading: loading.models.menu,\r\n// }))\r\n\r\n\r\n@Form.create()\r\nclass MenuList extends PureComponent {\r\n  state = {\r\n    selectedRowKeys: [],\r\n    selectedRows: [],\r\n    treeSelectedKeys: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.dispatch({\r\n      type: 'menu/fetchTree',\r\n    });\r\n\r\n    this.dispatch({\r\n      type: 'menu/fetch',\r\n      search: {},\r\n      pagination: {},\r\n    });\r\n  }\r\n\r\n  onItemDisableClick = item => {\r\n    this.dispatch({\r\n      type: 'menu/changeStatus',\r\n      payload: { id: item.id, status: 2 },\r\n    });\r\n  };\r\n\r\n  onItemEnableClick = item => {\r\n    this.dispatch({\r\n      type: 'menu/changeStatus',\r\n      payload: { id: item.id, status: 1 },\r\n    });\r\n  };\r\n\r\n  handleEditClick = () => {\r\n    const { selectedRows } = this.state;\r\n    if (selectedRows.length === 0) {\r\n      return;\r\n    }\r\n    const item = selectedRows[0];\r\n    this.dispatch({\r\n      type: 'menu/loadForm',\r\n      payload: {\r\n        type: 'E',\r\n        id: item.id,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleAddClick = () => {\r\n    this.dispatch({\r\n      type: 'menu/loadForm',\r\n      payload: {\r\n        type: 'A',\r\n      },\r\n    });\r\n  };\r\n\r\n  handleDelClick = () => {\r\n    const { selectedRows } = this.state;\r\n    if (selectedRows.length === 0) {\r\n      return;\r\n    }\r\n    const item = selectedRows[0];\r\n    Modal.confirm({\r\n      title: `确定删除【菜单数据：${item.name}】？`,\r\n      okText: '确认',\r\n      okType: 'danger',\r\n      cancelText: '取消',\r\n      onOk: this.handleDelOKClick.bind(this, item.id),\r\n    });\r\n  };\r\n\r\n  handleTableSelectRow = (record, selected) => {\r\n    const keys = [];\r\n    const rows = [];\r\n    if (selected) {\r\n      keys.push(record.id);\r\n      rows.push(record);\r\n    }\r\n    this.setState({\r\n      selectedRowKeys: keys,\r\n      selectedRows: rows,\r\n    });\r\n  };\r\n\r\n  onTableChange = pagination => {\r\n    this.dispatch({\r\n      type: 'menu/fetch',\r\n      pagination: {\r\n        current: pagination.current,\r\n        pageSize: pagination.pageSize,\r\n      },\r\n    });\r\n    this.clearSelectRows();\r\n  };\r\n\r\n  onResetFormClick = () => {\r\n    const { form } = this.props;\r\n    form.resetFields();\r\n    this.dispatch({\r\n      type: 'menu/fetch',\r\n      search: { parent_id: this.getParentID() },\r\n      pagination: {},\r\n    });\r\n  };\r\n\r\n  onSearchFormSubmit = e => {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n\r\n    const { form } = this.props;\r\n    form.validateFields((err, values) => {\r\n      if (err) {\r\n        return;\r\n      }\r\n      this.dispatch({\r\n        type: 'menu/fetch',\r\n        search: {\r\n          ...values,\r\n          parent_id: this.getParentID(),\r\n        },\r\n        pagination: {},\r\n      });\r\n      this.clearSelectRows();\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = data => {\r\n    this.dispatch({\r\n      type: 'menu/submit',\r\n      payload: data,\r\n    });\r\n    this.clearSelectRows();\r\n  };\r\n\r\n  handleFormCancel = () => {\r\n    this.dispatch({\r\n      type: 'menu/changeFormVisible',\r\n      payload: false,\r\n    });\r\n  };\r\n\r\n  clearSelectRows = () => {\r\n    const { selectedRowKeys } = this.state;\r\n    if (selectedRowKeys.length === 0) {\r\n      return;\r\n    }\r\n    this.setState({ selectedRowKeys: [], selectedRows: [] });\r\n  };\r\n\r\n  dispatch = action => {\r\n    const { dispatch } = this.props;\r\n    dispatch(action);\r\n  };\r\n\r\n  getParentID = () => {\r\n    const { treeSelectedKeys } = this.state;\r\n    let parentID = '';\r\n    if (treeSelectedKeys.length > 0) {\r\n      [parentID] = treeSelectedKeys;\r\n    }\r\n    return parentID;\r\n  };\r\n\r\n  handleDelOKClick(id) {\r\n    this.dispatch({\r\n      type: 'menu/del',\r\n      payload: { id },\r\n    });\r\n    this.clearSelectRows();\r\n  }\r\n\r\n  renderDataForm() {\r\n    return <MenuCard onCancel={this.handleFormCancel} onSubmit={this.handleFormSubmit} />;\r\n  }\r\n\r\n  renderTreeNodes = data =>\r\n    data.map(item => {\r\n      if (item.children) {\r\n        return (\r\n          <Tree.TreeNode title={item.name} key={item.id} dataRef={item}>\r\n            {this.renderTreeNodes(item.children)}\r\n          </Tree.TreeNode>\r\n        );\r\n      }\r\n      return <Tree.TreeNode title={item.name} key={item.id} dataRef={item} />;\r\n    });\r\n\r\n  renderSearchForm() {\r\n    const {\r\n      form: { getFieldDecorator },\r\n    } = this.props;\r\n    return (\r\n      <Form onSubmit={this.onSearchFormSubmit}>\r\n        <Row gutter={16}>\r\n          <Col span={8}>\r\n            <Form.Item>\r\n              {getFieldDecorator('queryValue')(<Input placeholder=\"请输入需要查询的内容\" />)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={8}>\r\n            <div style={{ overflow: 'hidden', paddingTop: 4 }}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                查询\r\n              </Button>\r\n              <Button style={{ marginLeft: 8 }} onClick={this.onResetFormClick}>\r\n                重置\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      loading,\r\n      menu: {\r\n        data: { list, pagination },\r\n        treeData,\r\n        expandedKeys,\r\n      },\r\n    } = this.props;\r\n\r\n    const { selectedRowKeys, selectedRows } = this.state;\r\n\r\n    const columns = [\r\n      {\r\n        title: '菜单名称',\r\n        dataIndex: 'name',\r\n        width: 130,\r\n        render: (val, row) => {\r\n          if (row.show_status !== 1) {\r\n            return <Badge status=\"default\" text={val} />;\r\n          }\r\n          return <span>{val}</span>;\r\n        },\r\n      },\r\n      {\r\n        title: '排序值',\r\n        dataIndex: 'sequence',\r\n        width: 100,\r\n      },\r\n      {\r\n        title: '菜单图标',\r\n        dataIndex: 'icon',\r\n        width: 100,\r\n      },\r\n      {\r\n        title: '访问路由',\r\n        dataIndex: 'router',\r\n        width: 150,\r\n      },\r\n      {\r\n        title: '状态',\r\n        dataIndex: 'status',\r\n        width: 80,\r\n        render: val => {\r\n          if (val === 1) {\r\n            return <Badge status=\"success\" text=\"启用\" />;\r\n          }\r\n          return <Badge status=\"error\" text=\"停用\" />;\r\n        },\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        width: 150,\r\n        dataIndex: 'created_at',\r\n        render: val => <span>{formatDate(val, 'YYYY-MM-DD')}</span>,\r\n      },\r\n      {\r\n        title: '备注',\r\n        dataIndex: 'memo',\r\n      },\r\n    ];\r\n\r\n    const paginationProps = {\r\n      showSizeChanger: true,\r\n      showQuickJumper: true,\r\n      showTotal: total => <span>共{total}条</span>,\r\n      ...pagination,\r\n    };\r\n\r\n    const breadcrumbList = [{ title: 'System Management' },\r\n    { title: 'Menu management', href: '/system/menu' }];\r\n\r\n    return (\r\n      <PageHeaderLayout title=\"Menu management\" breadcrumbList={breadcrumbList}>\r\n        <Layout>\r\n          <Layout.Sider\r\n            width={180}\r\n            style={{\r\n              background: '#fff',\r\n              borderRight: '1px solid lightGray',\r\n              padding: 15,\r\n              overflow: 'auto',\r\n            }}\r\n          >\r\n            <Tree\r\n              expandedKeys={expandedKeys}\r\n              onSelect={keys => {\r\n                this.setState({\r\n                  treeSelectedKeys: keys,\r\n                });\r\n\r\n                const {\r\n                  menu: { search },\r\n                } = this.props;\r\n\r\n                const item = {\r\n                  parentID: undefined,\r\n                };\r\n\r\n                if (keys.length > 0) {\r\n                  [item.parentID] = keys;\r\n                }\r\n\r\n                this.dispatch({\r\n                  type: 'menu/fetch',\r\n                  search: { ...search, ...item },\r\n                  pagination: {},\r\n                });\r\n              }}\r\n              onExpand={keys => {\r\n                this.dispatch({\r\n                  type: 'menu/saveExpandedKeys',\r\n                  payload: keys,\r\n                });\r\n              }}\r\n            >\r\n              {this.renderTreeNodes(treeData)}\r\n            </Tree>\r\n          </Layout.Sider>\r\n          <Layout.Content>\r\n            <Card bordered={false}>\r\n              <div className={styles.tableList}>\r\n                <div className={styles.tableListForm}>{this.renderSearchForm()}</div>\r\n                <div className={styles.tableListOperator}>\r\n                  <PButton code=\"add\" type=\"primary\" onClick={() => this.handleAddClick()}>\r\n                    新建\r\n                  </PButton>\r\n                  {selectedRowKeys.length === 1 && [\r\n                    <PButton key=\"edit\" code=\"edit\" onClick={() => this.handleEditClick()}>\r\n                      编辑\r\n                    </PButton>,\r\n                    <PButton\r\n                      key=\"del\"\r\n                      code=\"del\"\r\n                      type=\"danger\"\r\n                      onClick={() => this.handleDelClick()}\r\n                    >\r\n                      删除\r\n                    </PButton>,\r\n                    selectedRows[0].status === 2 && (\r\n                      <PButton\r\n                        key=\"enable\"\r\n                        code=\"enable\"\r\n                        onClick={() => this.onItemEnableClick(selectedRows[0])}\r\n                      >\r\n                        启用\r\n                      </PButton>\r\n                    ),\r\n                    selectedRows[0].status === 1 && (\r\n                      <PButton\r\n                        key=\"disable\"\r\n                        code=\"disable\"\r\n                        type=\"danger\"\r\n                        onClick={() => this.onItemDisableClick(selectedRows[0])}\r\n                      >\r\n                        禁用\r\n                      </PButton>\r\n                    ),\r\n                  ]}\r\n                </div>\r\n                <Table\r\n                  rowSelection={{\r\n                    selectedRowKeys,\r\n                    onSelect: this.handleTableSelectRow,\r\n                  }}\r\n                  loading={loading}\r\n                  rowKey={record => record.id}\r\n                  dataSource={list}\r\n                  columns={columns}\r\n                  pagination={paginationProps}\r\n                  onChange={this.onTableChange}\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n            </Card>\r\n          </Layout.Content>\r\n        </Layout>\r\n        {this.renderDataForm()}\r\n      </PageHeaderLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WithDva(({ menu, loading }) => ({\r\n  menu,\r\n  loading: loading.models.menu,\r\n}))(MenuList);\r\n// export default MenuList;\r\n"]},"metadata":{},"sourceType":"module"}