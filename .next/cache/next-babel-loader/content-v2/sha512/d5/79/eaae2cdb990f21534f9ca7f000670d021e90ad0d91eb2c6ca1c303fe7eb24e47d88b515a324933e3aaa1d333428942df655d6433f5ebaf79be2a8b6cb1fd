{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\n\nvar _jsxFileName = \"/Users/nguyenthanhbinh/Work/vnshop/admin/src/components/UpdatePasswordDialog/index.js\",\n    _dec,\n    _class,\n    _temp;\n\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { Form } from '@ant-design/compatible'; // import '../../pages/menu/MenuAction/index.css';\n\nimport { updatePwd } from '@/services/login';\nimport { md5Hash } from \"../../utils/utils\";\nlet UpdatePasswordDialog = (_dec = Form.create(), _dec(_class = (_temp = class UpdatePasswordDialog extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      submitting: false\n    });\n\n    _defineProperty(this, \"onOKClick\", () => {\n      const {\n        form\n      } = this.props;\n      form.validateFieldsAndScroll((err, values) => {\n        if (err) {\n          return;\n        }\n\n        if (values.new_password !== values.confirm_new_password) {\n          _message.warning('新密码与确认新密码不一致！');\n\n          return;\n        }\n\n        this.setState({\n          submitting: true\n        });\n        const formData = {\n          old_password: md5Hash(values.old_password),\n          new_password: md5Hash(values.new_password)\n        };\n        updatePwd(formData).then(res => {\n          if (res.status === 'OK') {\n            _message.success('密码更新成功！');\n\n            this.handleCancel();\n          }\n\n          this.setState({\n            submitting: false\n          });\n        });\n      });\n    });\n\n    _defineProperty(this, \"handleCancel\", () => {\n      const {\n        onCancel\n      } = this.props;\n\n      if (onCancel) {\n        onCancel();\n      }\n    });\n\n    _defineProperty(this, \"dispatch\", action => {\n      const {\n        dispatch\n      } = this.props;\n      dispatch(action);\n    });\n  }\n\n  render() {\n    const {\n      visible,\n      form: {\n        getFieldDecorator\n      }\n    } = this.props;\n    const {\n      submitting\n    } = this.state;\n    const formItemLayout = {\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 16\n      }\n    };\n    return __jsx(_Modal, {\n      title: \"\\u4FEE\\u6539\\u4E2A\\u4EBA\\u5BC6\\u7801\",\n      width: 450,\n      visible: visible,\n      maskClosable: false,\n      confirmLoading: submitting,\n      destroyOnClose: true,\n      onOk: this.onOKClick,\n      onCancel: this.handleCancel,\n      style: {\n        top: 20\n      },\n      bodyStyle: {\n        maxHeight: 'calc( 100vh - 158px )',\n        overflowY: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, __jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"\\u65E7\\u5BC6\\u7801\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }), getFieldDecorator('old_password', {\n      rules: [{\n        required: true,\n        message: '请输入旧密码'\n      }]\n    })(__jsx(_Input, {\n      type: \"password\",\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u65E7\\u5BC6\\u7801\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 16\n      }\n    }))), __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"\\u65B0\\u5BC6\\u7801\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }), getFieldDecorator('new_password', {\n      rules: [{\n        required: true,\n        message: '请输入新密码'\n      }]\n    })(__jsx(_Input, {\n      type: \"password\",\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u65B0\\u5BC6\\u7801\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 16\n      }\n    }))), __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"\\u786E\\u8BA4\\u65B0\\u5BC6\\u7801\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }), getFieldDecorator('confirm_new_password', {\n      rules: [{\n        required: true,\n        message: '请输入确认新密码'\n      }]\n    })(__jsx(_Input, {\n      type: \"password\",\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u786E\\u8BA4\\u65B0\\u5BC6\\u7801\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 16\n      }\n    })))));\n  }\n\n}, _temp)) || _class);\nexport default UpdatePasswordDialog;","map":{"version":3,"sources":["/Users/nguyenthanhbinh/Work/vnshop/admin/src/components/UpdatePasswordDialog/index.js"],"names":["React","PureComponent","Form","updatePwd","md5Hash","UpdatePasswordDialog","create","submitting","form","props","validateFieldsAndScroll","err","values","new_password","confirm_new_password","warning","setState","formData","old_password","then","res","status","success","handleCancel","onCancel","action","dispatch","render","visible","getFieldDecorator","state","formItemLayout","labelCol","span","wrapperCol","onOKClick","top","maxHeight","overflowY","rules","required","message"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { Form } from '@ant-design/compatible';\r\n// import '../../pages/menu/MenuAction/index.css';\r\nimport { Input, Modal, message } from 'antd';\r\nimport { updatePwd } from '@/services/login';\r\nimport { md5Hash } from '../../utils/utils';\r\n\r\n@Form.create()\r\nclass UpdatePasswordDialog extends PureComponent {\r\n  state = {\r\n    submitting: false,\r\n  };\r\n\r\n  onOKClick = () => {\r\n    const { form } = this.props;\r\n\r\n    form.validateFieldsAndScroll((err, values) => {\r\n      if (err) {\r\n        return;\r\n      }\r\n      if (values.new_password !== values.confirm_new_password) {\r\n        message.warning('新密码与确认新密码不一致！');\r\n        return;\r\n      }\r\n\r\n      this.setState({ submitting: true });\r\n      const formData = {\r\n        old_password: md5Hash(values.old_password),\r\n        new_password: md5Hash(values.new_password),\r\n      };\r\n      updatePwd(formData).then(res => {\r\n        if (res.status === 'OK') {\r\n          message.success('密码更新成功！');\r\n          this.handleCancel();\r\n        }\r\n        this.setState({ submitting: false });\r\n      });\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    const { onCancel } = this.props;\r\n    if (onCancel) {\r\n      onCancel();\r\n    }\r\n  };\r\n\r\n  dispatch = action => {\r\n    const { dispatch } = this.props;\r\n    dispatch(action);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      visible,\r\n      form: { getFieldDecorator },\r\n    } = this.props;\r\n\r\n    const { submitting } = this.state;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        span: 6,\r\n      },\r\n      wrapperCol: {\r\n        span: 16,\r\n      },\r\n    };\r\n\r\n    return (\r\n      <Modal\r\n        title=\"修改个人密码\"\r\n        width={450}\r\n        visible={visible}\r\n        maskClosable={false}\r\n        confirmLoading={submitting}\r\n        destroyOnClose\r\n        onOk={this.onOKClick}\r\n        onCancel={this.handleCancel}\r\n        style={{ top: 20 }}\r\n        bodyStyle={{ maxHeight: 'calc( 100vh - 158px )', overflowY: 'auto' }}\r\n      >\r\n        <Form>\r\n          <Form.Item {...formItemLayout} label=\"旧密码\">\r\n            {getFieldDecorator('old_password', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: '请输入旧密码',\r\n                },\r\n              ],\r\n            })(<Input type=\"password\" placeholder=\"请输入旧密码\" />)}\r\n          </Form.Item>\r\n          <Form.Item {...formItemLayout} label=\"新密码\">\r\n            {getFieldDecorator('new_password', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: '请输入新密码',\r\n                },\r\n              ],\r\n            })(<Input type=\"password\" placeholder=\"请输入新密码\" />)}\r\n          </Form.Item>\r\n          <Form.Item {...formItemLayout} label=\"确认新密码\">\r\n            {getFieldDecorator('confirm_new_password', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: '请输入确认新密码',\r\n                },\r\n              ],\r\n            })(<Input type=\"password\" placeholder=\"请输入确认新密码\" />)}\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdatePasswordDialog;\r\n"]},"metadata":{},"sourceType":"module"}