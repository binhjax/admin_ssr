{"ast":null,"code":"import \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Volumes/ExternalData/Work/vnshop/admin/src/components/User/RoleSelect.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react'; // React.useLayoutEffect = React.useEffect;\n\nimport { query } from '@/services/role';\n\nfunction parseValue(value) {\n  if (!value) {\n    return [];\n  }\n\n  return value.map(function (v) {\n    return v.role_id;\n  });\n}\n\nvar RoleSelect = /*#__PURE__*/function (_PureComponent) {\n  _inherits(RoleSelect, _PureComponent);\n\n  var _super = _createSuper(RoleSelect);\n\n  function RoleSelect(props) {\n    var _this;\n\n    _classCallCheck(this, RoleSelect);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (value) {\n      _this.setState({\n        value: value\n      });\n\n      _this.triggerChange(value);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"triggerChange\", function (data) {\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        var newData = data.map(function (v) {\n          return {\n            role_id: v\n          };\n        });\n        onChange(newData);\n      }\n    });\n\n    _this.state = {\n      value: parseValue(props.value),\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(RoleSelect, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      query({\n        q: 'select'\n      }).then(function (data) {\n        _this2.setState({\n          data: data.list || []\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          value = _this$state.value,\n          data = _this$state.data;\n      return __jsx(_Select, {\n        mode: \"tags\",\n        value: value,\n        onChange: this.handleChange,\n        placeholder: \"Please choose a role\",\n        style: {\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }\n      }, data.map(function (item) {\n        return __jsx(_Select.Option, {\n          key: item.id,\n          value: item.id,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }\n        }, item.name);\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, state) {\n      if ('value' in nextProps) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          value: parseValue(nextProps.value)\n        });\n      }\n\n      return state;\n    }\n  }]);\n\n  return RoleSelect;\n}(PureComponent);\n\nexport { RoleSelect as default };","map":{"version":3,"sources":["/Volumes/ExternalData/Work/vnshop/admin/src/components/User/RoleSelect.js"],"names":["React","PureComponent","query","parseValue","value","map","v","role_id","RoleSelect","props","setState","triggerChange","data","onChange","newData","state","q","then","list","handleChange","width","item","id","name","nextProps"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC,C,CACA;;AAGA,SAASC,KAAT,QAAsB,iBAAtB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAI,CAACA,KAAL,EAAY;AACV,WAAO,EAAP;AACD;;AACD,SAAOA,KAAK,CAACC,GAAN,CAAU,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,OAAN;AAAA,GAAX,CAAP;AACD;;IAEoBC,U;;;;;AACnB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,mEAsBJ,UAAAL,KAAK,EAAI;AACtB,YAAKM,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAALA;AAAF,OAAd;;AACA,YAAKO,aAAL,CAAmBP,KAAnB;AACD,KAzBkB;;AAAA,oEA2BH,UAAAQ,IAAI,EAAI;AAAA,UACdC,QADc,GACD,MAAKJ,KADJ,CACdI,QADc;;AAEtB,UAAIA,QAAJ,EAAc;AACZ,YAAMC,OAAO,GAAGF,IAAI,CAACP,GAAL,CAAS,UAAAC,CAAC;AAAA,iBAAK;AAAEC,YAAAA,OAAO,EAAED;AAAX,WAAL;AAAA,SAAV,CAAhB;AACAO,QAAAA,QAAQ,CAACC,OAAD,CAAR;AACD;AACF,KAjCkB;;AAGjB,UAAKC,KAAL,GAAa;AACXX,MAAAA,KAAK,EAAED,UAAU,CAACM,KAAK,CAACL,KAAP,CADN;AAEXQ,MAAAA,IAAI,EAAE;AAFK,KAAb;AAHiB;AAOlB;;;;wCAEmB;AAAA;;AAClBV,MAAAA,KAAK,CAAC;AAAEc,QAAAA,CAAC,EAAE;AAAL,OAAD,CAAL,CAAuBC,IAAvB,CAA4B,UAAAL,IAAI,EAAI;AAClC,QAAA,MAAI,CAACF,QAAL,CAAc;AAAEE,UAAAA,IAAI,EAAEA,IAAI,CAACM,IAAL,IAAa;AAArB,SAAd;AACD,OAFD;AAGD;;;6BAsBQ;AAAA;;AAAA,wBACiB,KAAKH,KADtB;AAAA,UACCX,KADD,eACCA,KADD;AAAA,UACQQ,IADR,eACQA,IADR;AAGP,aACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAER,KAFT;AAGE,QAAA,QAAQ,EAAE,KAAKe,YAHjB;AAIE,QAAA,WAAW,EAAC,sBAJd;AAKE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGR,IAAI,CAACP,GAAL,CAAS,UAAAgB,IAAI;AAAA,eACZ,cAAQ,MAAR;AAAe,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAzB;AAA6B,UAAA,KAAK,EAAED,IAAI,CAACC,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,IAAI,CAACE,IADR,CADY;AAAA,OAAb,CAPH,CADF;AAeD;;;6CAtC+BC,S,EAAWT,K,EAAO;AAChD,UAAI,WAAWS,SAAf,EAA0B;AACxB,+CAAYT,KAAZ;AAAmBX,UAAAA,KAAK,EAAED,UAAU,CAACqB,SAAS,CAACpB,KAAX;AAApC;AACD;;AACD,aAAOW,KAAP;AACD;;;;EArBqCd,a;;SAAnBO,U","sourcesContent":["import React, { PureComponent } from 'react';\n// React.useLayoutEffect = React.useEffect;\n\nimport { Select } from 'antd';\nimport { query } from '@/services/role';\n\nfunction parseValue(value) {\n  if (!value) {\n    return [];\n  }\n  return value.map(v => v.role_id);\n}\n\nexport default class RoleSelect extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: parseValue(props.value),\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    query({ q: 'select' }).then(data => {\n      this.setState({ data: data.list || [] });\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps, state) {\n    if ('value' in nextProps) {\n      return { ...state, value: parseValue(nextProps.value) };\n    }\n    return state;\n  }\n\n  handleChange = value => {\n    this.setState({ value });\n    this.triggerChange(value);\n  };\n\n  triggerChange = data => {\n    const { onChange } = this.props;\n    if (onChange) {\n      const newData = data.map(v => ({ role_id: v }));\n      onChange(newData);\n    }\n  };\n\n  render() {\n    const { value, data } = this.state;\n\n    return (\n      <Select\n        mode=\"tags\"\n        value={value}\n        onChange={this.handleChange}\n        placeholder=\"Please choose a role\"\n        style={{ width: '100%' }}\n      >\n        {data.map(item => (\n          <Select.Option key={item.id} value={item.id}>\n            {item.name}\n          </Select.Option>\n        ))}\n      </Select>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}