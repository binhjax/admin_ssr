{"ast":null,"code":"import _classCallCheck from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { NodeModel } from '@projectstorm/react-diagrams';\nimport { CustomPortModel } from './CustomPortModel';\nexport var CustomNodeModel = /*#__PURE__*/function (_NodeModel) {\n  _inherits(CustomNodeModel, _NodeModel);\n\n  var _super = _createSuper(CustomNodeModel);\n\n  function CustomNodeModel(name) {\n    _classCallCheck(this, CustomNodeModel);\n\n    return _super.call(this, {\n      type: 'custom',\n      extras: name\n    });\n  }\n\n  _createClass(CustomNodeModel, [{\n    key: \"setName\",\n    value: function setName(name) {\n      this.options.extras = name;\n    }\n  }, {\n    key: \"getCustomPort\",\n    value: function getCustomPort(name) {\n      var port = this.getPort(name);\n      return port;\n    }\n  }, {\n    key: \"addCustomPort\",\n    value: function addCustomPort(name, type, key) {\n      return this.addPort(new CustomPortModel(name, type, key));\n    }\n  }, {\n    key: \"setPorts\",\n    value: function setPorts(ports) {\n      this.ports = ports;\n    }\n  }, {\n    key: \"deletePort\",\n    value: function deletePort(port) {\n      Object.values(port.getLinks()).forEach(function (link) {\n        link.remove();\n      });\n      this.removePort(port);\n    }\n  }]);\n\n  return CustomNodeModel;\n}(NodeModel);","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Test/CustomNodeModel.ts"],"names":["NodeModel","CustomPortModel","CustomNodeModel","name","type","extras","options","port","getPort","key","addPort","ports","Object","values","getLinks","forEach","link","remove","removePort"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,QAAwD,8BAAxD;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAMA,WAAaC,eAAb;AAAA;;AAAA;;AACE,2BAAYC,IAAZ,EAA0B;AAAA;;AAAA,6BAClB;AACJC,MAAAA,IAAI,EAAE,QADF;AAEJC,MAAAA,MAAM,EAAEF;AAFJ,KADkB;AAKzB;;AANH;AAAA;AAAA,4BAOUA,IAPV,EAOwB;AAEpB,WAAKG,OAAL,CAAaD,MAAb,GAAsBF,IAAtB;AACD;AAVH;AAAA;AAAA,kCAWgBA,IAXhB,EAW8B;AAC1B,UAAII,IAAqB,GAAG,KAAKC,OAAL,CAAaL,IAAb,CAA5B;AACA,aAAOI,IAAP;AACD;AAdH;AAAA;AAAA,kCAegBJ,IAfhB,EAe8BC,IAf9B,EAe4CK,GAf5C,EAe0E;AACtE,aAAO,KAAKC,OAAL,CAAa,IAAIT,eAAJ,CAAoBE,IAApB,EAA0BC,IAA1B,EAAgCK,GAAhC,CAAb,CAAP;AACD;AAjBH;AAAA;AAAA,6BAkBWE,KAlBX,EAkB8C;AAC1C,WAAKA,KAAL,GAAaA,KAAb;AACD;AApBH;AAAA;AAAA,+BAqBaJ,IArBb,EAqBoC;AAChCK,MAAAA,MAAM,CAACC,MAAP,CAAcN,IAAI,CAACO,QAAL,EAAd,EAA+BC,OAA/B,CAAuC,UAACC,IAAD,EAAU;AAC/CA,QAAAA,IAAI,CAACC,MAAL;AACD,OAFD;AAGA,WAAKC,UAAL,CAAgBX,IAAhB;AACD;AA1BH;;AAAA;AAAA,EAAqCP,SAArC","sourcesContent":["import { NodeModel, NodeModelGenerics, PortModel } from '@projectstorm/react-diagrams';\nimport { CustomPortModel } from './CustomPortModel';\n\nexport interface CustomNodeModelGenerics {\n  PORT: CustomPortModel;\n}\n\nexport class CustomNodeModel extends NodeModel<NodeModelGenerics & CustomNodeModelGenerics> {\n  constructor(name: string) {\n    super({\n      type: 'custom',\n      extras: name,\n    });\n  }\n  setName(name: string) {\n\t  \n    this.options.extras = name;\n  }\n  getCustomPort(name: string) {\n    let port: CustomPortModel = this.getPort(name) as CustomPortModel;\n    return port;\n  }\n  addCustomPort(name: string, type: string, key: string): CustomPortModel {\n    return this.addPort(new CustomPortModel(name, type, key)) as CustomPortModel;\n  }\n  setPorts(ports: { [s: string]: PortModel }) {\n    this.ports = ports;\n  }\n  deletePort(port: CustomPortModel) {\n    Object.values(port.getLinks()).forEach((link) => {\n      link.remove();\n    });\n    this.removePort(port);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}