{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _taggedTemplateLiteral from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/tuanquang/admin_ssr/src/components/Test/CustomNodeWidget.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: '100%';\\n  height: 20px;\\n  background: #f6f6f6;\\n  cursor: pointer;\\n  margin-top: 5px;\\n\\n  &:hover {\\n    background: #deecf3;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport { PortModelAlignment, PortWidget } from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\nvar styles = {\n  tableHeader: {\n    color: 'white',\n    border: ' 0 solid #e2e8f0',\n    fontWeight: 400,\n    fontSize: '20px',\n    padding: '5px 20px',\n    background: '#316896',\n    marginBottom: '-2px'\n  },\n  rightPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '380px'\n  },\n  leftPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '0'\n  },\n  tableRow: {\n    fontWeight: 700,\n    fontSize: '20px'\n  }\n};\nexport var Port = styled.div(_templateObject());\n_c = Port;\nexport var CustomNodeWidget = /*#__PURE__*/function (_React$Component) {\n  _inherits(CustomNodeWidget, _React$Component);\n\n  var _super = _createSuper(CustomNodeWidget);\n\n  function CustomNodeWidget(props) {\n    _classCallCheck(this, CustomNodeWidget);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(CustomNodeWidget, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          minWidth: this.props.size * 2,\n          minHeight: this.props.size\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.tableHeader,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.tableRow,\n          children: [/*#__PURE__*/_jsxDEV(PortWidget, {\n            port: this.props.node.getPort(PortModelAlignment.LEFT),\n            engine: this.props.engine,\n            style: styles.leftPort,\n            children: /*#__PURE__*/_jsxDEV(Port, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(PortWidget, {\n            port: this.props.node.getPort(PortModelAlignment.RIGHT),\n            engine: this.props.engine,\n            style: styles.rightPort,\n            children: /*#__PURE__*/_jsxDEV(Port, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: '#dbdd4d'\n            },\n            children: \"String\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"PK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 4\n      }, this);\n    }\n  }]);\n\n  return CustomNodeWidget;\n}(React.Component);\n\nvar _c;\n\n$RefreshReg$(_c, \"Port\");","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Test/CustomNodeWidget.tsx"],"names":["React","PortModelAlignment","PortWidget","styled","styles","tableHeader","color","border","fontWeight","fontSize","padding","background","marginBottom","rightPort","width","height","position","left","leftPort","tableRow","Port","div","CustomNodeWidget","props","minWidth","size","minHeight","node","getPort","LEFT","engine","RIGHT","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DiamondNodeModel } from './DiamondNodeModel';\nimport { DiagramEngine, PortModelAlignment, PortWidget } from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\n\nexport interface CustomNodeWidgetProps {\n\tnode: DiamondNodeModel;\n\tengine: DiagramEngine;\n\tsize?: number;\n}\n\nconst styles = {\n\ttableHeader: {\n\t\tcolor: 'white',\n\t\tborder: ' 0 solid #e2e8f0',\n\t\tfontWeight: 400,\n\t\tfontSize: '20px',\n\t\tpadding: '5px 20px',\n\t\tbackground: '#316896',\n\t\tmarginBottom: '-2px',\n\t},\n\trightPort: {\n\t\twidth: '20px',\n\t\theight: '20px',\n\t\tposition: 'absolute',\n\t\tleft: '380px',\n\t},\n\n\tleftPort: {\n\t\twidth: '20px',\n\t\theight: '20px',\n\t\tposition: 'absolute',\n\t\tleft: '0',\n\t},\n\ttableRow: {\n\t\tfontWeight: 700,\n\t\tfontSize: '20px',\n\t}\n}\nexport const Port = styled.div`\n  width: '100%';\n  height: 20px;\n  background: #f6f6f6;\n  cursor: pointer;\n  margin-top: 5px;\n\n  &:hover {\n    background: #deecf3;\n  }\n`;\nexport class CustomNodeWidget extends React.Component<CustomNodeWidgetProps> {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div style={{ minWidth: this.props.size * 2, minHeight: this.props.size }}>\n\t\t\t\t<div style={styles.tableHeader} >\n\t\t\t\t\t<p>Test</p>\n\t\t\t\t</div>\n\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={styles.tableRow}\n\t\t\t\t\t>\n\t\t\t\t\t\t<PortWidget port={this.props.node.getPort(PortModelAlignment.LEFT)} engine={this.props.engine} style={styles.leftPort}>\n\t\t\t\t\t\t\t<Port />\n\t\t\t\t\t\t</PortWidget>\n\t\t\t\t\t\t<PortWidget port={this.props.node.getPort(PortModelAlignment.RIGHT)} engine={this.props.engine} style={styles.rightPort}>\n\t\t\t\t\t\t\t<Port />\n\t\t\t\t\t\t</PortWidget>\n\t\t\t\t\t\t<p>Student</p>\n\t\t\t\t\t\t<p style={{ color: '#dbdd4d' }}>String</p>\n\t\t\t\t\t\t<p>PK</p>\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}