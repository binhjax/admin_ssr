{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Volumes/ExternalData/Work/vnshop/admin/src/components/Role/RoleMenu/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport * as menuService from '@/services/menu';\nimport EditableCell from './EditableCell';\n\nvar RoleMenu = /*#__PURE__*/function (_PureComponent) {\n  _inherits(RoleMenu, _PureComponent);\n\n  var _super = _createSuper(RoleMenu);\n\n  function RoleMenu(props) {\n    var _this;\n\n    _classCallCheck(this, RoleMenu);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"fillData\", function (data) {\n      var newData = _toConsumableArray(data);\n\n      for (var i = 0; i < newData.length; i += 1) {\n        var children = newData[i].children;\n\n        var item = _objectSpread(_objectSpread({}, newData[i]), {}, {\n          hasChild: children && children.length > 0\n        });\n\n        if (item.hasChild) {\n          item.children = _this.fillData(children);\n        }\n\n        newData[i] = item;\n      }\n\n      return newData;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSave\", function (record, dataIndex, values) {\n      var dataSource = _this.state.dataSource;\n\n      var data = _toConsumableArray(dataSource);\n\n      var index = data.findIndex(function (item) {\n        return item.menu_id === record.id;\n      });\n      var item = data[index];\n\n      if (!item) {\n        item = {\n          menu_id: record.id,\n          dataIndex: values\n        };\n      } else {\n        item[dataIndex] = values;\n      }\n\n      data.splice(index, 1, _objectSpread({}, item));\n\n      _this.setState({\n        dataSource: data\n      }, function () {\n        _this.triggerChange(data);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"triggerChange\", function (data) {\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        onChange(data);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"expandAllChild\", function (data) {\n      var child = [];\n\n      for (var i = 0; i < data.length; i += 1) {\n        child.push(data[i]);\n\n        if (data[i].children) {\n          child = [].concat(_toConsumableArray(child), _toConsumableArray(_this.expandAllChild(data[i].children)));\n        }\n      }\n\n      return child;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkAndAdd\", function (data, addData) {\n      var list = _toConsumableArray(data);\n\n      for (var i = 0; i < addData.length; i += 1) {\n        var exists = false;\n\n        for (var j = 0; j < list.length; j += 1) {\n          if (list[j].menu_id === addData[i].id) {\n            exists = true;\n            break;\n          }\n        }\n\n        if (!exists) {\n          var item = {\n            menu_id: addData[i].id,\n            actions: addData[i].actions ? addData[i].actions.map(function (v) {\n              return v.id;\n            }) : []\n          };\n          list.push(item);\n        }\n      }\n\n      return list;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"cancelSelected\", function (data, selectedRows) {\n      var list = [];\n\n      for (var i = 0; i < data.length; i += 1) {\n        var exists = false;\n\n        for (var j = 0; j < selectedRows.length; j += 1) {\n          if (data[i].menu_id === selectedRows[j].id) {\n            exists = true;\n            break;\n          }\n        }\n\n        if (!exists) {\n          list.push(data[i]);\n        }\n      }\n\n      return list;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelectedRow\", function (record, selected) {\n      var selectedRows = [record];\n\n      if (record.children) {\n        selectedRows = [].concat(_toConsumableArray(selectedRows), _toConsumableArray(_this.expandAllChild(record.children)));\n      }\n\n      var dataSource = _this.state.dataSource;\n      var list = [];\n\n      if (selected) {\n        list = _this.checkAndAdd(dataSource, selectedRows);\n      } else {\n        list = _this.cancelSelected(dataSource, selectedRows);\n      }\n\n      _this.setState({\n        dataSource: list\n      }, function () {\n        _this.triggerChange(list);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelectAll\", function (selected, selectRows) {\n      var list = [];\n\n      if (selected) {\n        list = selectRows.map(function (vv) {\n          var item = {\n            menu_id: vv.id,\n            actions: vv.actions ? vv.actions.map(function (v) {\n              return v.id;\n            }) : []\n          };\n          return item;\n        });\n      }\n\n      _this.setState({\n        dataSource: list\n      }, function () {\n        _this.triggerChange(list);\n      });\n    });\n\n    _this.columns = [{\n      title: '菜单名称',\n      dataIndex: 'name',\n      width: '35%'\n    }, {\n      title: '动作权限',\n      dataIndex: 'actions',\n      editable: true\n    }];\n    _this.state = {\n      menuData: [],\n      dataSource: props.value || []\n    };\n    return _this;\n  }\n\n  _createClass(RoleMenu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      menuService.queryTree().then(function (data) {\n        var list = data.list || [];\n\n        _this2.setState({\n          menuData: _this2.fillData(list)\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          dataSource = _this$state.dataSource,\n          menuData = _this$state.menuData;\n      var components = {\n        body: {\n          cell: EditableCell\n        }\n      };\n      var columns = this.columns.map(function (col) {\n        if (!col.editable) {\n          return col;\n        }\n\n        return _objectSpread(_objectSpread({}, col), {}, {\n          onCell: function onCell(record) {\n            return {\n              record: record,\n              data: dataSource,\n              dataIndex: col.dataIndex,\n              handleSave: _this3.handleSave\n            };\n          }\n        });\n      });\n      return menuData.length > 0 && __jsx(_Table, {\n        bordered: true,\n        defaultExpandAllRows: true,\n        rowSelection: {\n          selectedRowKeys: dataSource.map(function (v) {\n            return v.menu_id;\n          }),\n          onSelect: this.handleSelectedRow,\n          onSelectAll: this.handleSelectAll\n        },\n        rowKey: function rowKey(record) {\n          return record.id;\n        },\n        components: components,\n        dataSource: menuData,\n        columns: columns,\n        pagination: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 9\n        }\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, state) {\n      if ('value' in nextProps) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          dataSource: nextProps.value || []\n        });\n      }\n\n      return state;\n    }\n  }]);\n\n  return RoleMenu;\n}(PureComponent);\n\nexport { RoleMenu as default };","map":{"version":3,"sources":["/Volumes/ExternalData/Work/vnshop/admin/src/components/Role/RoleMenu/index.js"],"names":["React","PureComponent","menuService","EditableCell","RoleMenu","props","data","newData","i","length","children","item","hasChild","fillData","record","dataIndex","values","dataSource","state","index","findIndex","menu_id","id","splice","setState","triggerChange","onChange","child","push","expandAllChild","addData","list","exists","j","actions","map","v","selectedRows","selected","checkAndAdd","cancelSelected","selectRows","vv","columns","title","width","editable","menuData","value","queryTree","then","components","body","cell","col","onCell","handleSave","selectedRowKeys","onSelect","handleSelectedRow","onSelectAll","handleSelectAll","nextProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Table } from 'antd';\nimport * as menuService from '@/services/menu';\nimport EditableCell from './EditableCell';\n\nexport default class RoleMenu extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.columns = [\n      {\n        title: '菜单名称',\n        dataIndex: 'name',\n        width: '35%',\n      },\n      {\n        title: '动作权限',\n        dataIndex: 'actions',\n        editable: true,\n      },\n    ];\n\n    this.state = {\n      menuData: [],\n      dataSource: props.value || [],\n    };\n  }\n\n  componentDidMount() {\n    menuService.queryTree().then(data => {\n      const list = data.list || [];\n      this.setState({ menuData: this.fillData(list) });\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps, state) {\n    if ('value' in nextProps) {\n      return {\n        ...state,\n        dataSource: nextProps.value || [],\n      };\n    }\n    return state;\n  }\n\n  fillData = data => {\n    const newData = [...data];\n    for (let i = 0; i < newData.length; i += 1) {\n      const { children } = newData[i];\n      const item = { ...newData[i], hasChild: children && children.length > 0 };\n      if (item.hasChild) {\n        item.children = this.fillData(children);\n      }\n      newData[i] = item;\n    }\n    return newData;\n  };\n\n  handleSave = (record, dataIndex, values) => {\n    const { dataSource } = this.state;\n    const data = [...dataSource];\n    const index = data.findIndex(item => item.menu_id === record.id);\n    let item = data[index];\n    if (!item) {\n      item = {\n        menu_id: record.id,\n        dataIndex: values,\n      };\n    } else {\n      item[dataIndex] = values;\n    }\n    data.splice(index, 1, {\n      ...item,\n    });\n    this.setState({ dataSource: data }, () => {\n      this.triggerChange(data);\n    });\n  };\n\n  triggerChange = data => {\n    const { onChange } = this.props;\n    if (onChange) {\n      onChange(data);\n    }\n  };\n\n  expandAllChild = data => {\n    let child = [];\n    for (let i = 0; i < data.length; i += 1) {\n      child.push(data[i]);\n      if (data[i].children) {\n        child = [...child, ...this.expandAllChild(data[i].children)];\n      }\n    }\n    return child;\n  };\n\n  checkAndAdd = (data, addData) => {\n    const list = [...data];\n\n    for (let i = 0; i < addData.length; i += 1) {\n      let exists = false;\n      for (let j = 0; j < list.length; j += 1) {\n        if (list[j].menu_id === addData[i].id) {\n          exists = true;\n          break;\n        }\n      }\n\n      if (!exists) {\n        const item = {\n          menu_id: addData[i].id,\n          actions: addData[i].actions ? addData[i].actions.map(v => v.id) : [],\n        };\n        list.push(item);\n      }\n    }\n\n    return list;\n  };\n\n  cancelSelected = (data, selectedRows) => {\n    const list = [];\n    for (let i = 0; i < data.length; i += 1) {\n      let exists = false;\n      for (let j = 0; j < selectedRows.length; j += 1) {\n        if (data[i].menu_id === selectedRows[j].id) {\n          exists = true;\n          break;\n        }\n      }\n      if (!exists) {\n        list.push(data[i]);\n      }\n    }\n    return list;\n  };\n\n  handleSelectedRow = (record, selected) => {\n    let selectedRows = [record];\n    if (record.children) {\n      selectedRows = [...selectedRows, ...this.expandAllChild(record.children)];\n    }\n\n    const { dataSource } = this.state;\n    let list = [];\n    if (selected) {\n      list = this.checkAndAdd(dataSource, selectedRows);\n    } else {\n      list = this.cancelSelected(dataSource, selectedRows);\n    }\n\n    this.setState({ dataSource: list }, () => {\n      this.triggerChange(list);\n    });\n  };\n\n  handleSelectAll = (selected, selectRows) => {\n    let list = [];\n    if (selected) {\n      list = selectRows.map(vv => {\n        const item = {\n          menu_id: vv.id,\n          actions: vv.actions ? vv.actions.map(v => v.id) : [],\n        };\n        return item;\n      });\n    }\n    this.setState({ dataSource: list }, () => {\n      this.triggerChange(list);\n    });\n  };\n\n  render() {\n    const { dataSource, menuData } = this.state;\n    const components = {\n      body: {\n        cell: EditableCell,\n      },\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          data: dataSource,\n          dataIndex: col.dataIndex,\n          handleSave: this.handleSave,\n        }),\n      };\n    });\n\n    return (\n      menuData.length > 0 && (\n        <Table\n          bordered\n          defaultExpandAllRows\n          rowSelection={{\n            selectedRowKeys: dataSource.map(v => v.menu_id),\n            onSelect: this.handleSelectedRow,\n            onSelectAll: this.handleSelectAll,\n          }}\n          rowKey={record => record.id}\n          components={components}\n          dataSource={menuData}\n          columns={columns}\n          pagination={false}\n        />\n      )\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}