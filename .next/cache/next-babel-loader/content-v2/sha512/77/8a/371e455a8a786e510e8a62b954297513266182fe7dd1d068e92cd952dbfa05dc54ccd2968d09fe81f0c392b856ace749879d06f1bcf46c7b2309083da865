{"ast":null,"code":"import \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/popover/style\";\nimport _Popover from \"antd/lib/popover\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _slicedToArray from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/typography/style\";\nimport _Typography from \"antd/lib/typography\";\n\nvar _jsxFileName = \"/home/tuanquang/admin_ssr/src/components/CustomNode/CustomNodeWidget.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 20px;\\n  height: 20px;\\n  background: #f6f6f6;\\n  cursor: pointer;\\n  margin-top: 5px;\\n\\n  &:hover {\\n    background: #deecf3;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux'; // import * as action from '../../actions/node';\n\nimport { PortWidget } from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\nimport { ExclamationCircleOutlined, PlusOutlined, EditOutlined, KeyOutlined, MoreOutlined, DeleteOutlined } from '@ant-design/icons';\nvar Text = _Typography.Text;\nvar Option = _Select.Option;\n\n/**\n * @author Nguyen Tuan Quang\n */\nexport var Port = styled.div(_templateObject());\n_c = Port;\nvar styles = {\n  cardHeader: {\n    color: 'white',\n    border: ' 0 solid #e2e8f0',\n    fontWeight: 400,\n    fontSize: '20px',\n    padding: '5px 20px',\n    height: '40px',\n    background: '#316896',\n    marginBottom: '-2px'\n  },\n  rightPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '380px'\n  },\n  leftPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '0'\n  },\n  fieldText: {\n    fontSize: '20px'\n  }\n};\n\nvar CustomNodeWidget = function CustomNodeWidget(props) {\n  _s();\n\n  // const { dispatch } = props;\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      editNode = _React$useState2[0],\n      setEditNode = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      name = _React$useState4[0],\n      setName = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      hover = _React$useState6[0],\n      setHover = _React$useState6[1]; // const ports: { [s: string]: PortModel } = useSelector((state) => state.node.ports);\n\n\n  var dispatch = useDispatch();\n\n  var save = function save() {\n    props.node.addCustomPort('new_col', '', '');\n    props.engine.repaintCanvas();\n  };\n\n  var confirm = function confirm() {\n    _Modal.confirm({\n      title: 'Confirm',\n      icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, _this),\n      content: 'Confirm delete table',\n      okText: 'Yes',\n      cancelText: 'No',\n      onOk: function onOk() {\n        props.node.remove();\n        props.engine.repaintCanvas();\n      }\n    });\n  };\n\n  var confirmDeletePort = function confirmDeletePort(port) {\n    _Modal.confirm({\n      title: 'Confirm',\n      icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, _this),\n      content: 'Confirm delete port',\n      okText: 'Yes',\n      cancelText: 'No',\n      onOk: function onOk() {\n        props.node.removePort(port);\n        dispatch(action.setPorts(props.node.getPorts()));\n        props.engine.repaintCanvas();\n      }\n    });\n  };\n\n  var openEdit = function openEdit() {\n    setEditNode(true);\n    setName(props.node.getOptions().extras);\n    dispatch(action.setPorts(props.node.getPorts()));\n  };\n\n  var closeEdit = function closeEdit() {\n    setEditNode(false);\n    setName('');\n  };\n\n  var handelChangeName = function handelChangeName(e) {\n    setName(e.target.value);\n  };\n\n  var handleChangePort = function handleChangePort(e) {\n    var _e$target = e.target,\n        id = _e$target.id,\n        name = _e$target.name,\n        value = _e$target.value;\n    ports[name].getOptions().extras[id] = value; // dispatch(action.setPorts({ ...ports }));\n  };\n\n  var submit = function submit() {\n    props.node.setName(name);\n    closeEdit();\n  };\n\n  var handleDeleteButton = function handleDeleteButton(e, value) {\n    e.stopPropagation();\n\n    if (e.key === 'Delete') {\n      confirmDeletePort(value);\n    }\n  };\n\n  var handleRowClick = function handleRowClick(e, key, value) {\n    setHover(key); // dispatch(action.setPort(value));\n\n    props.node.setSelected(false);\n  };\n\n  var selectTable = function selectTable(e) {\n    props.node.setSelected(false); // dispatch(action.setSelectedNode(props.node));\n    // dispatch(action.setActive('table'));\n  };\n\n  var content = /*#__PURE__*/_jsxDEV(_Row, {\n    children: [/*#__PURE__*/_jsxDEV(_Button, {\n      type: \"ghost\",\n      icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {\n        style: {\n          color: 'green'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }, _this),\n      onClick: function onClick() {\n        return save();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(_Button, {\n      type: \"ghost\",\n      icon: /*#__PURE__*/_jsxDEV(EditOutlined, {\n        style: {\n          color: 'cyan'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }, _this),\n      onClick: function onClick() {\n        return openEdit();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(_Button, {\n      type: \"ghost\",\n      icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n        style: {\n          color: 'red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }, _this),\n      onClick: function onClick() {\n        return confirm();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, _this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'custom-node',\n      style: {\n        position: 'relative',\n        minWidth: props.size * 4,\n        minHeight: props.size\n      },\n      onKeyDown: function onKeyDown(e) {\n        e.stopPropagation();\n\n        if (e.key === 'Delete') {\n          confirm();\n        }\n      },\n      onClick: function onClick(e) {\n        selectTable(e);\n      },\n      tabIndex: -1,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.cardHeader,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.node.getOptions().extras\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#F6F6F6',\n          padding: '20px',\n          border: 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '0',\n            right: '0'\n          },\n          children: /*#__PURE__*/_jsxDEV(_Popover, {\n            placement: \"rightBottom\",\n            content: content,\n            trigger: \"focus\",\n            children: /*#__PURE__*/_jsxDEV(_Button, {\n              type: \"ghost\",\n              style: {\n                border: 'none'\n              },\n              icon: /*#__PURE__*/_jsxDEV(MoreOutlined, {\n                style: {\n                  color: 'white',\n                  fontSize: '20px',\n                  paddingTop: '5px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, _this), Object.entries(props.node.getPorts()).map(function (_ref, index) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              key = _ref2[0],\n              value = _ref2[1];\n\n          return value.getOptions().extras.key === 'PRIMARY KEY' ? /*#__PURE__*/_jsxDEV(_Row, {\n            onFocus: function onFocus() {\n              return setHover(key);\n            },\n            onBlur: function onBlur() {\n              return setHover('');\n            },\n            style: {\n              backgroundColor: hover === key ? '#4770FF' : '',\n              fontWeight: 'bold',\n              fontSize: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(PortWidget, {\n              port: value,\n              engine: props.engine,\n              style: styles.leftPort,\n              children: /*#__PURE__*/_jsxDEV(Port, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(PortWidget, {\n              port: value,\n              engine: props.engine,\n              style: styles.rightPort,\n              children: /*#__PURE__*/_jsxDEV(Port, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(_Col, {\n              span: 10,\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                children: value.getOptions().extras.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(_Col, {\n              span: 8,\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                style: {\n                  color: '#dbdd4d'\n                },\n                children: value.getOptions().extras.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(_Col, {\n              span: 3,\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                children: \"PK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(_Col, {\n              span: 3,\n              children: /*#__PURE__*/_jsxDEV(KeyOutlined, {\n                style: {\n                  color: 'yellow',\n                  fontSize: 20\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, _this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, _this) : '';\n        }), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, _this), Object.entries(props.node.getPorts()).map(function (_ref3, index) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              key = _ref4[0],\n              value = _ref4[1];\n\n          return value.getOptions().extras.key !== 'PRIMARY KEY' ? /*#__PURE__*/_jsxDEV(_Row, {\n            onClick: function onClick(e) {\n              return handleRowClick(e, key, value);\n            },\n            onBlur: function onBlur() {\n              return setHover('');\n            },\n            style: {\n              backgroundColor: hover === key ? '#deecf3' : ''\n            },\n            onKeyDown: function onKeyDown(e) {\n              return handleDeleteButton(e, value);\n            },\n            tabIndex: -1,\n            children: [/*#__PURE__*/_jsxDEV(PortWidget, {\n              port: value,\n              engine: props.engine,\n              style: styles.leftPort,\n              children: /*#__PURE__*/_jsxDEV(Port, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(PortWidget, {\n              port: value,\n              engine: props.engine,\n              style: styles.rightPort,\n              children: /*#__PURE__*/_jsxDEV(Port, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(_Col, {\n              lg: 10,\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                style: styles.fieldText,\n                children: value.getOptions().extras.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(_Col, {\n              lg: 8,\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                style: styles.fieldText,\n                children: value.getOptions().extras.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(_Col, {\n              lg: 3,\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                style: styles.fieldText,\n                children: value.getOptions().extras.key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, _this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, _this) : '';\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CustomNodeWidget, \"j4I7r8QAxm/6bXYeuTekKfh5T9o=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = CustomNodeWidget;\nexport default CustomNodeWidget;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Port\");\n$RefreshReg$(_c2, \"CustomNodeWidget\");","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/CustomNode/CustomNodeWidget.tsx"],"names":["React","useDispatch","PortWidget","styled","ExclamationCircleOutlined","PlusOutlined","EditOutlined","KeyOutlined","MoreOutlined","DeleteOutlined","Text","Option","Port","div","styles","cardHeader","color","border","fontWeight","fontSize","padding","height","background","marginBottom","rightPort","width","position","left","leftPort","fieldText","CustomNodeWidget","props","useState","editNode","setEditNode","name","setName","hover","setHover","dispatch","save","node","addCustomPort","engine","repaintCanvas","confirm","title","icon","content","okText","cancelText","onOk","remove","confirmDeletePort","port","removePort","action","setPorts","getPorts","openEdit","getOptions","extras","closeEdit","handelChangeName","e","target","value","handleChangePort","id","ports","submit","handleDeleteButton","stopPropagation","key","handleRowClick","setSelected","selectTable","minWidth","size","minHeight","top","right","paddingTop","Object","entries","map","index","backgroundColor","type"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { CustomNodeModel } from './CustomNodeModel';\nimport { useDispatch, useSelector } from 'react-redux';\n// import * as action from '../../actions/node';\nimport { DiagramEngine, PortWidget, PortModel } from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\nimport { TYPE } from '../../const';\nimport {\n  ExclamationCircleOutlined,\n  PlusOutlined,\n  EditOutlined,\n  KeyOutlined,\n  MoreOutlined,\n  DeleteOutlined,\n} from '@ant-design/icons';\nimport { Col, Modal, Input, Button, Typography, Row, Popover, AutoComplete, Select } from 'antd';\nconst { Text } = Typography;\nconst { Option } = Select;\nexport interface CustomNodeWidgetProps {\n  node: CustomNodeModel;\n  engine: DiagramEngine;\n  size?: number | undefined;\n}\n\n/**\n * @author Nguyen Tuan Quang\n */\nexport const Port = styled.div`\n  width: 20px;\n  height: 20px;\n  background: #f6f6f6;\n  cursor: pointer;\n  margin-top: 5px;\n\n  &:hover {\n    background: #deecf3;\n  }\n`;\n\nconst styles = {\n  cardHeader: {\n    color: 'white',\n    border: ' 0 solid #e2e8f0',\n    fontWeight: 400,\n    fontSize: '20px',\n    padding: '5px 20px',\n    height: '40px',\n    background: '#316896',\n    marginBottom: '-2px',\n  },\n  rightPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '380px',\n  },\n  leftPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '0',\n  },\n  fieldText: { fontSize: '20px' },\n};\nconst CustomNodeWidget: React.FC<CustomNodeWidgetProps> = (props) => {\n  // const { dispatch } = props;\n\n  const [editNode, setEditNode] = React.useState(false);\n  const [name, setName] = React.useState('');\n  const [hover, setHover] = React.useState('');\n  // const ports: { [s: string]: PortModel } = useSelector((state) => state.node.ports);\n  const dispatch = useDispatch();\n  const save = () => {\n    props.node.addCustomPort('new_col', '', '');\n    props.engine.repaintCanvas();\n  };\n  const confirm = () => {\n    Modal.confirm({\n      title: 'Confirm',\n      icon: <ExclamationCircleOutlined />,\n      content: 'Confirm delete table',\n      okText: 'Yes',\n      cancelText: 'No',\n      onOk() {\n        props.node.remove();\n        props.engine.repaintCanvas();\n      },\n    });\n  };\n  const confirmDeletePort = (port: PortModel) => {\n    Modal.confirm({\n      title: 'Confirm',\n      icon: <ExclamationCircleOutlined />,\n      content: 'Confirm delete port',\n      okText: 'Yes',\n      cancelText: 'No',\n      onOk() {\n        props.node.removePort(port);\n        dispatch(action.setPorts(props.node.getPorts()));\n        props.engine.repaintCanvas();\n      },\n    });\n  };\n  const openEdit = () => {\n    setEditNode(true);\n    setName(props.node.getOptions().extras);\n    dispatch(action.setPorts(props.node.getPorts()));\n  };\n  const closeEdit = () => {\n    setEditNode(false);\n    setName('');\n  };\n  const handelChangeName = (e: any) => {\n    setName(e.target.value);\n  };\n  const handleChangePort = (e) => {\n    const { id, name, value } = e.target;\n\n    ports[name].getOptions().extras[id] = value;\n    // dispatch(action.setPorts({ ...ports }));\n  };\n  const submit = () => {\n    props.node.setName(name);\n    closeEdit();\n  };\n  const handleDeleteButton = (e, value) => {\n    e.stopPropagation();\n    if (e.key === 'Delete') {\n      confirmDeletePort(value);\n    }\n  };\n  const handleRowClick = (e, key, value) => {\n    setHover(key);\n    // dispatch(action.setPort(value));\n    props.node.setSelected(false);\n  };\n  const selectTable = (e) => {\n    props.node.setSelected(false);\n    // dispatch(action.setSelectedNode(props.node));\n    // dispatch(action.setActive('table'));\n  };\n  const content = (\n    <Row>\n      <Button\n        type='ghost'\n        icon={<PlusOutlined style={{ color: 'green' }} />}\n        onClick={() => save()}\n      />\n      <Button\n        type='ghost'\n        icon={<EditOutlined style={{ color: 'cyan' }} />}\n        onClick={() => openEdit()}\n      />\n      <Button\n        type='ghost'\n        icon={<DeleteOutlined style={{ color: 'red' }} />}\n        onClick={() => confirm()}\n      />\n    </Row>\n  );\n\n  return (\n    <div>\n      {/* <Modal\n        visible={editNode}\n        onCancel={() => closeEdit()}\n        okText='Save'\n        cancelText='Cancel'\n        onOk={() => submit()}\n      >\n        Name:\n        <Input value={name} name='name' key='name' onChange={handelChangeName} />\n        Body:\n        {ports !== undefined\n          ? Object.entries(ports).map(([key, value], index: any) =>\n              value.getOptions().extras.key === 'PRIMARY KEY' ? (\n                <Row gutter={16} key={index}>\n                  <Col span='10'>\n                    <Input\n                      id='name'\n                      value={value.getOptions().extras.name}\n                      name={key}\n                      key={index}\n                      onChange={handleChangePort}\n                    />\n                  </Col>\n                  <Col span='8'>\n                    <AutoComplete\n                      style={{ width: 150 }}\n                      options={TYPE}\n                      filterOption={(inputValue, option) =>\n                        option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n                      }\n                      value={value.getOptions().extras.type}\n                      onChange={(type) => {\n                        value.getOptions().extras.type = type;\n                        // dispatch(action.setPorts({ ...ports }));\n                      }}\n                      onSelect={(type) => {\n                        value.getOptions().extras.type = type;\n\n                        // dispatch(action.setPorts({ ...ports }));\n                      }}\n                    ></AutoComplete>\n                  </Col>\n                  <Col span='6'>\n                    <Select\n                      defaultValue={value.getOptions().extras.key}\n                      style={{ width: 120 }}\n                      onChange={(key) => {\n                        value.getOptions().extras.key = key;\n                        // dispatch(action.setPorts({ ...ports }));\n                      }}\n                    >\n                      <Option value=''>null</Option>\n                      <Option value='PRIMARY KEY'>PRIMARY KEY</Option>\n                    </Select>\n                  </Col>\n                </Row>\n              ) : (\n                ''\n              )\n            )\n          : ''}\n        <hr />\n        {ports !== undefined\n          ? Object.entries(ports).map(([key, value], index: any) =>\n              value.getOptions().extras.key !== 'PRIMARY KEY' ? (\n                <Row gutter={16} key={index} style={{ paddingTop: '5px' }}>\n                  <Col span='10'>\n                    <Input\n                      id='name'\n                      value={value.getOptions().extras.name}\n                      name={key}\n                      key={index}\n                      onChange={handleChangePort}\n                    />\n                  </Col>\n                  <Col span='8'>\n                    <AutoComplete\n                      style={{ width: 150 }}\n                      options={TYPE}\n                      filterOption={(inputValue, option) =>\n                        option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n                      }\n                      value={value.getOptions().extras.type}\n                      onChange={(type) => {\n                        value.getOptions().extras.type = type;\n                        // dispatch(action.setPorts({ ...ports }));\n                      }}\n                      onSelect={(type) => {\n                        value.getOptions().extras.type = type;\n\n                        // dispatch(action.setPorts({ ...ports }));\n                      }}\n                    ></AutoComplete>\n                  </Col>\n                  <Col span='6'>\n                    <Select\n                      defaultValue={value.getOptions().extras.key}\n                      style={{ width: 120 }}\n                      onChange={(key) => {\n                        value.getOptions().extras.key = key;\n                        // dispatch(action.setPorts({ ...ports }));\n                      }}\n                    >\n                      <Option value=''>null</Option>\n                      <Option value='PRIMARY KEY'>PRIMARY KEY</Option>\n                    </Select>\n                  </Col>\n                </Row>\n              ) : (\n                ''\n              )\n            )\n          : ''}\n      </Modal> */}\n      <div\n        className={'custom-node'}\n        style={{\n          position: 'relative',\n          minWidth: props.size * 4,\n          minHeight: props.size,\n        }}\n        onKeyDown={(e) => {\n          e.stopPropagation();\n          if (e.key === 'Delete') {\n            confirm();\n          }\n        }}\n        onClick={(e) => {\n          selectTable(e);\n        }}\n        tabIndex={-1}\n      >\n        <div style={styles.cardHeader}>\n          <p>{props.node.getOptions().extras}</p>\n        </div>\n        <div\n          style={{\n            background: '#F6F6F6',\n            padding: '20px',\n            border: 'none',\n          }}\n        >\n          <div style={{ position: 'absolute', top: '0', right: '0' }}>\n            <Popover placement='rightBottom' content={content} trigger='focus'>\n              <Button\n                type='ghost'\n                style={{ border: 'none' }}\n                icon={\n                  <MoreOutlined style={{ color: 'white', fontSize: '20px', paddingTop: '5px' }} />\n                }\n              />\n            </Popover>\n          </div>\n          {Object.entries(props.node.getPorts()).map(([key, value], index: any) =>\n            value.getOptions().extras.key === 'PRIMARY KEY' ? (\n              <Row\n                key={index}\n                onFocus={() => setHover(key)}\n                onBlur={() => setHover('')}\n                style={{\n                  backgroundColor: hover === key ? '#4770FF' : '',\n                  fontWeight: 'bold',\n                  fontSize: '20px',\n                }}\n              >\n                <PortWidget port={value} engine={props.engine} style={styles.leftPort}>\n                  <Port />\n                </PortWidget>\n                <PortWidget port={value} engine={props.engine} style={styles.rightPort}>\n                  <Port />\n                </PortWidget>\n                <Col span={10}>\n                  <Text>{value.getOptions().extras.name}</Text>\n                </Col>\n                <Col span={8}>\n                  <Text style={{ color: '#dbdd4d' }}>{value.getOptions().extras.type}</Text>\n                </Col>\n                <Col span={3}>\n                  <Text>PK</Text>\n                </Col>\n                <Col span={3}>\n                  <KeyOutlined style={{ color: 'yellow', fontSize: 20 }} />\n                </Col>\n              </Row>\n            ) : (\n              ''\n            )\n          )}\n          <hr />\n\n          {Object.entries(props.node.getPorts()).map(([key, value], index: any) =>\n            value.getOptions().extras.key !== 'PRIMARY KEY' ? (\n              <Row\n                key={index}\n                onClick={(e) => handleRowClick(e, key, value)}\n                onBlur={() => setHover('')}\n                style={{ backgroundColor: hover === key ? '#deecf3' : '' }}\n                onKeyDown={(e) => handleDeleteButton(e, value)}\n                tabIndex={-1}\n              >\n                <PortWidget port={value} engine={props.engine} style={styles.leftPort}>\n                  <Port />\n                </PortWidget>\n                <PortWidget port={value} engine={props.engine} style={styles.rightPort}>\n                  <Port />\n                </PortWidget>\n                <Col lg={10}>\n                  <Text style={styles.fieldText}>{value.getOptions().extras.name}</Text>\n                </Col>\n                <Col lg={8}>\n                  <Text style={styles.fieldText}>{value.getOptions().extras.type}</Text>\n                </Col>\n                <Col lg={3}>\n                  <Text style={styles.fieldText}>{value.getOptions().extras.key}</Text>\n                </Col>\n              </Row>\n            ) : (\n              ''\n            )\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default CustomNodeWidget;\n"]},"metadata":{},"sourceType":"module"}