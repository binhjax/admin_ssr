{"ast":null,"code":"import \"antd/lib/popover/style\";\nimport _Popover from \"antd/lib/popover\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/auto-complete/style\";\nimport _AutoComplete from \"antd/lib/auto-complete\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nvar _jsxFileName = \"/home/tuanquang/admin_ssr/src/components/Test/CustomNodeWidget.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { PortWidget } from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\nimport { ExclamationCircleOutlined, PlusOutlined, EditOutlined, MoreOutlined, DeleteOutlined } from '@ant-design/icons';\nconst styles = {\n  rightPort: {\n    width: '35px',\n    height: '35px',\n    position: 'absolute',\n    right: '0px'\n  },\n  leftPort: {\n    width: '35px',\n    height: '35px',\n    position: 'absolute',\n    left: '0'\n  },\n  tableHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    color: 'white',\n    fontWeight: 900,\n    fontSize: '18px',\n    background: '#316896',\n    marginBottom: '-2px'\n  },\n  tableHeadText: {\n    fill: '#fff',\n    fontWeight: 700,\n    border: ' 0 solid #e2e8f0',\n    padding: '7px 30px 7px '\n  },\n  tableRow: {\n    fontWeight: 700,\n    fontSize: '16px',\n    display: 'flex',\n    flexBasis: 100,\n    justifyContent: 'space-between',\n    background: '#f6f6f6',\n    padding: '5px 0px 5px 0px'\n  }\n};\nexport const Port = styled.div`\n  height: 35px;\n  cursor: pointer;\n\n  &:hover {\n    background: #deecf3;\n  }\n`;\nexport const CustomNodeWidget = props => {\n  const {\n    0: editNode,\n    1: setEditNode\n  } = useState(false);\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: hover,\n    1: setHover\n  } = useState('');\n  const {\n    0: ports,\n    1: setPorts\n  } = useState({});\n  useEffect(() => {\n    setPorts(props.node.getPorts());\n  }, [ports]);\n\n  const addPort = () => {\n    props.node.addCustomPort('new_col', '', '');\n    props.engine.repaintCanvas();\n  };\n\n  const confirm = () => {\n    _Modal.confirm({\n      title: 'Confirm',\n      icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this),\n      content: 'Confirm delete table',\n      okText: 'Yes',\n      cancelText: 'No',\n\n      onOk() {\n        props.node.remove();\n        props.engine.repaintCanvas();\n      }\n\n    });\n  };\n\n  const openEdit = () => {\n    setEditNode(true);\n    setName(props.node.getOptions().extras);\n  };\n\n  const closeEdit = () => {\n    setEditNode(false);\n    setName('');\n  };\n\n  const handelChangeName = e => {\n    setName(e.target.value);\n  };\n\n  const handleChangePort = e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n    ports[name].getOptions().extras[id] = value;\n    setPorts(_objectSpread({}, ports));\n  };\n\n  const content = /*#__PURE__*/_jsxDEV(_Row, {\n    children: [/*#__PURE__*/_jsxDEV(_Button, {\n      type: \"ghost\",\n      icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {\n        style: {\n          color: 'green'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }, this),\n      onClick: () => addPort()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Button, {\n      type: \"ghost\",\n      icon: /*#__PURE__*/_jsxDEV(EditOutlined, {\n        style: {\n          color: 'cyan'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }, this),\n      onClick: () => openEdit()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Button, {\n      type: \"ghost\",\n      icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n        style: {\n          color: 'red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }, this),\n      onClick: () => confirm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(_Modal, {\n      visible: editNode,\n      onCancel: () => closeEdit(),\n      centered: true,\n      footer: false,\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(_Input, {\n        value: name,\n        name: \"name\",\n        onChange: handelChangeName\n      }, \"name\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), \"Body:\", Object.entries(ports).map(([key, value], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(_Input, {\n          id: \"name\",\n          value: value.getOptions().extras.name,\n          name: key,\n          onChange: handleChangePort\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(_AutoComplete, {\n          style: {\n            width: 150\n          } // options={TYPE}\n          ,\n          filterOption: (inputValue, option) => option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1,\n          value: value.getOptions().extras.type,\n          onChange: type => {\n            value.getOptions().extras.type = type;\n            setPorts(_objectSpread({}, ports));\n          },\n          onSelect: type => {\n            value.getOptions().extras.type = type; // dispatch(action.setPorts({ ...ports }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(_Select, {\n          defaultValue: value.getOptions().extras.key,\n          style: {\n            width: 120\n          },\n          onChange: key => {\n            value.getOptions().extras.key = key;\n            setPorts(_objectSpread({}, ports));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minWidth: props.size * 2,\n        height: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '0',\n          right: '0'\n        },\n        children: /*#__PURE__*/_jsxDEV(_Popover, {\n          placement: \"rightBottom\",\n          content: content,\n          trigger: \"focus\",\n          children: /*#__PURE__*/_jsxDEV(_Button, {\n            type: \"ghost\",\n            style: {\n              border: 'none'\n            },\n            icon: /*#__PURE__*/_jsxDEV(MoreOutlined, {\n              style: {\n                color: 'white',\n                fontSize: '20px',\n                paddingTop: '5px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.tableHeader,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.tableHeadText,\n          children: props.node.getOptions().extras\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), Object.entries(props.node.getPorts()).map(([key, value], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.tableRow,\n        children: [/*#__PURE__*/_jsxDEV(PortWidget, {\n          port: value,\n          engine: props.engine,\n          style: styles.leftPort,\n          children: /*#__PURE__*/_jsxDEV(Port, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PortWidget, {\n          port: value,\n          engine: props.engine,\n          style: styles.rightPort,\n          children: /*#__PURE__*/_jsxDEV(Port, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingLeft: 30\n          },\n          children: value.getOptions().extras.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: '1 0 100px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingRight: 30,\n            color: '#999'\n          },\n          children: value.getOptions().extras.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Test/CustomNodeWidget.tsx"],"names":["React","useEffect","useState","PortWidget","styled","ExclamationCircleOutlined","PlusOutlined","EditOutlined","MoreOutlined","DeleteOutlined","styles","rightPort","width","height","position","right","leftPort","left","tableHeader","display","alignItems","color","fontWeight","fontSize","background","marginBottom","tableHeadText","fill","border","padding","tableRow","flexBasis","justifyContent","Port","div","CustomNodeWidget","props","editNode","setEditNode","name","setName","hover","setHover","ports","setPorts","node","getPorts","addPort","addCustomPort","engine","repaintCanvas","confirm","title","icon","content","okText","cancelText","onOk","remove","openEdit","getOptions","extras","closeEdit","handelChangeName","e","target","value","handleChangePort","id","Object","entries","map","key","index","inputValue","option","toUpperCase","indexOf","type","minWidth","size","top","paddingTop","paddingLeft","flex","paddingRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { CustomNodeModel } from './CustomNodeModel';\nimport {\n  DiagramEngine,\n  PortModel,\n  PortModelAlignment,\n  PortWidget,\n} from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\n\nimport {\n  ExclamationCircleOutlined,\n  PlusOutlined,\n  EditOutlined,\n  KeyOutlined,\n  MoreOutlined,\n  DeleteOutlined,\n} from '@ant-design/icons';\nimport { Col, Modal, Input, Button, Typography, Row, Popover, AutoComplete, Select } from 'antd';\n\nexport interface CustomNodeWidgetProps {\n  node: CustomNodeModel;\n  engine: DiagramEngine;\n  size?: number;\n}\n\nconst styles = {\n  rightPort: {\n    width: '35px',\n    height: '35px',\n    position: 'absolute',\n    right: '0px',\n  },\n\n  leftPort: {\n    width: '35px',\n    height: '35px',\n    position: 'absolute',\n    left: '0',\n  },\n  tableHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    color: 'white',\n    fontWeight: 900,\n    fontSize: '18px',\n    background: '#316896',\n    marginBottom: '-2px',\n  },\n  tableHeadText: {\n    fill: '#fff',\n    fontWeight: 700,\n    border: ' 0 solid #e2e8f0',\n    padding: '7px 30px 7px ',\n  },\n  tableRow: {\n    fontWeight: 700,\n    fontSize: '16px',\n    display: 'flex',\n    flexBasis: 100,\n    justifyContent: 'space-between',\n    background: '#f6f6f6',\n    padding: '5px 0px 5px 0px',\n  },\n};\nexport const Port = styled.div`\n  height: 35px;\n  cursor: pointer;\n\n  &:hover {\n    background: #deecf3;\n  }\n`;\n\nexport const CustomNodeWidget: React.FC<CustomNodeWidgetProps> = props => {\n  const [editNode, setEditNode] = useState(false);\n  const [name, setName] = useState('');\n  const [hover, setHover] = useState('');\n  const [ports, setPorts] = useState<{ [s: string]: PortModel }>({});\n\n  useEffect(() => {\n    setPorts(props.node.getPorts());\n  }, [ports]);\n  const addPort = () => {\n    props.node.addCustomPort('new_col', '', '');\n    props.engine.repaintCanvas();\n  };\n  const confirm = () => {\n    Modal.confirm({\n      title: 'Confirm',\n      icon: <ExclamationCircleOutlined />,\n      content: 'Confirm delete table',\n      okText: 'Yes',\n      cancelText: 'No',\n      onOk() {\n        props.node.remove();\n        props.engine.repaintCanvas();\n      },\n    });\n  };\n  const openEdit = () => {\n    setEditNode(true);\n    setName(props.node.getOptions().extras);\n  };\n  const closeEdit = () => {\n    setEditNode(false);\n    setName('');\n  };\n  const handelChangeName = (e: any) => {\n    setName(e.target.value);\n  };\n  const handleChangePort = e => {\n    const { id, name, value } = e.target;\n\n    ports[name].getOptions().extras[id] = value;\n    setPorts({ ...ports });\n  };\n  const content = (\n    <Row>\n      <Button\n        type=\"ghost\"\n        icon={<PlusOutlined style={{ color: 'green' }} />}\n        onClick={() => addPort()}\n      />\n      <Button\n        type=\"ghost\"\n        icon={<EditOutlined style={{ color: 'cyan' }} />}\n        onClick={() => openEdit()}\n      />\n      <Button\n        type=\"ghost\"\n        icon={<DeleteOutlined style={{ color: 'red' }} />}\n        onClick={() => confirm()}\n      />\n    </Row>\n  );\n  return (\n    <div>\n      <Modal visible={editNode} onCancel={() => closeEdit()} centered={true} footer={false}>\n        Name:\n        <Input value={name} name=\"name\" key=\"name\" onChange={handelChangeName} />\n        Body:\n        {Object.entries(ports).map(([key, value], index: any) => (\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <Input\n              id=\"name\"\n              value={value.getOptions().extras.name}\n              name={key}\n              key={index}\n              onChange={handleChangePort}\n            />\n\n            <AutoComplete\n              style={{ width: 150 }}\n              // options={TYPE}\n              filterOption={(inputValue, option) =>\n                option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n              }\n              value={value.getOptions().extras.type}\n              onChange={type => {\n                value.getOptions().extras.type = type;\n                setPorts({ ...ports });\n              }}\n              onSelect={type => {\n                value.getOptions().extras.type = type;\n\n                // dispatch(action.setPorts({ ...ports }));\n              }}\n            ></AutoComplete>\n\n            <Select\n              defaultValue={value.getOptions().extras.key}\n              style={{ width: 120 }}\n              onChange={key => {\n                value.getOptions().extras.key = key;\n                setPorts({ ...ports });\n              }}\n            ></Select>\n          </div>\n        ))}\n      </Modal>\n      <div\n        style={{\n          minWidth: props.size * 2,\n          height: 'auto',\n        }}\n      >\n        <div style={{ position: 'absolute', top: '0', right: '0' }}>\n          <Popover placement=\"rightBottom\" content={content} trigger=\"focus\">\n            <Button\n              type=\"ghost\"\n              style={{ border: 'none' }}\n              icon={\n                <MoreOutlined style={{ color: 'white', fontSize: '20px', paddingTop: '5px' }} />\n              }\n            />\n          </Popover>\n        </div>\n        <div style={styles.tableHeader}>\n          <div style={styles.tableHeadText}>{props.node.getOptions().extras}</div>\n        </div>\n        {Object.entries(props.node.getPorts()).map(([key, value], index: any) => (\n          <div style={styles.tableRow} key={index}>\n            <PortWidget port={value} engine={props.engine} style={styles.leftPort}>\n              <Port />\n            </PortWidget>\n            <PortWidget port={value} engine={props.engine} style={styles.rightPort}>\n              <Port />\n            </PortWidget>\n            <div style={{ paddingLeft: 30 }}>{value.getOptions().extras.name}</div>\n            <div style={{ flex: '1 0 100px' }}></div>\n            <div style={{ paddingRight: 30, color: '#999' }}>{value.getOptions().extras.type}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}