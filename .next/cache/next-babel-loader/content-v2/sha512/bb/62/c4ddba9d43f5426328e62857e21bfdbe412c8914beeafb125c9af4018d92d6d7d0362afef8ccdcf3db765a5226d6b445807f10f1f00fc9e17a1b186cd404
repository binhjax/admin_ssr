{"ast":null,"code":"import \"antd/lib/popover/style\";\nimport _Popover from \"antd/lib/popover\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/auto-complete/style\";\nimport _AutoComplete from \"antd/lib/auto-complete\";\nimport _slicedToArray from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _defineProperty from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _taggedTemplateLiteral from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/home/tuanquang/admin_ssr/src/components/Test/CustomNodeWidget.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 25px;\\n  cursor: pointer;\\n\\n  &:hover {\\n    background: #deecf3;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport { TYPE } from '../../const';\nimport { PortWidget } from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\nimport { ExclamationCircleOutlined, PlusOutlined, EditOutlined, MoreOutlined, DeleteOutlined, DeleteRowOutlined } from '@ant-design/icons';\nvar styles = {\n  rightPort: {\n    width: '25px',\n    height: '25px',\n    position: 'absolute',\n    right: '0px'\n  },\n  leftPort: {\n    width: '25px',\n    height: '25px',\n    position: 'absolute',\n    left: '0'\n  },\n  tableHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    color: 'white',\n    fontWeight: 900,\n    fontSize: '18px',\n    background: '#316896',\n    marginBottom: '-2px'\n  },\n  tableHeadText: {\n    fill: '#fff',\n    fontWeight: 700,\n    border: ' 0 solid #e2e8f0',\n    padding: '7px 30px 7px '\n  },\n  tableRow: {\n    fontSize: '16px',\n    display: 'flex',\n    width: '100%',\n    flexBasis: 100,\n    justifyContent: 'space-between',\n    background: '#f6f6f6',\n    padding: '5px 0px 5px 0px'\n  }\n};\nexport var Port = styled.div(_templateObject());\n_c = Port;\nexport var CustomNodeWidget = function CustomNodeWidget(props) {\n  _s();\n\n  var _useState = useState(false),\n      editNode = _useState[0],\n      setEditNode = _useState[1];\n\n  var _useState2 = useState(''),\n      tableName = _useState2[0],\n      setTableName = _useState2[1];\n\n  var _useState3 = useState(''),\n      hover = _useState3[0],\n      setHover = _useState3[1];\n\n  var _useState4 = useState({}),\n      ports = _useState4[0],\n      setPorts = _useState4[1];\n\n  useEffect(function () {\n    setTableName(props.node.getOptions().extras);\n    setPorts(props.node.getPorts());\n  }, []);\n\n  var addPort = function addPort() {\n    props.node.addCustomPort('new_col', '', '');\n    props.engine.repaintCanvas();\n  };\n\n  var confirm = function confirm() {\n    _Modal.confirm({\n      title: 'Confirm',\n      icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, _this),\n      content: 'Confirm delete table',\n      okText: 'Yes',\n      cancelText: 'No',\n      onOk: function onOk() {\n        props.node.remove();\n        props.engine.repaintCanvas();\n      }\n    });\n  };\n\n  var confirmDeletePort = function confirmDeletePort(port) {\n    _Modal.confirm({\n      title: 'Confirm',\n      icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, _this),\n      content: 'Confirm delete port',\n      okText: 'Yes',\n      cancelText: 'No',\n      onOk: function onOk() {\n        props.node.removePort(port);\n        props.engine.repaintCanvas();\n      }\n    });\n  };\n\n  var openEdit = function openEdit() {\n    setEditNode(true);\n  };\n\n  var closeEdit = function closeEdit() {\n    setEditNode(false);\n  };\n\n  var handelChangeName = function handelChangeName(e) {\n    setTableName(e.target.value);\n    props.node.setName(e.target.value);\n  };\n\n  var handleChangePort = function handleChangePort(e) {\n    var _e$target = e.target,\n        id = _e$target.id,\n        name = _e$target.name,\n        value = _e$target.value;\n    ports[name].getOptions().extras[id] = value;\n    setPorts(_objectSpread({}, ports));\n    props.node.setPorts(ports);\n  };\n\n  var content = /*#__PURE__*/_jsxDEV(_Row, {\n    children: [/*#__PURE__*/_jsxDEV(_Button, {\n      type: \"ghost\",\n      icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {\n        style: {\n          color: 'green'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }, _this),\n      onClick: function onClick() {\n        return addPort();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(_Button, {\n      type: \"ghost\",\n      icon: /*#__PURE__*/_jsxDEV(EditOutlined, {\n        style: {\n          color: 'cyan'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }, _this),\n      onClick: function onClick() {\n        return openEdit();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(_Button, {\n      type: \"ghost\",\n      icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n        style: {\n          color: 'red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }, _this),\n      onClick: function onClick() {\n        return confirm();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, _this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(_Modal, {\n      visible: editNode,\n      onCancel: function onCancel() {\n        return closeEdit();\n      },\n      centered: true,\n      footer: false,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 5,\n          fontWeight: 700\n        },\n        children: \"Table:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(_Input, {\n        value: tableName,\n        onChange: handelChangeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 5,\n          fontWeight: 700\n        },\n        children: \"Columns:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, _this), Object.entries(ports).map(function (_ref, index) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            value = _ref2[1];\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(_Input, {\n            id: \"name\",\n            value: value.getOptions().extras.name,\n            name: key,\n            onChange: handleChangePort\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(_AutoComplete, {\n            style: {\n              width: 250\n            },\n            options: TYPE,\n            filterOption: function filterOption(inputValue, option) {\n              return option.value.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1;\n            },\n            value: value.getOptions().extras.type,\n            onChange: function onChange(type) {\n              value.getOptions().extras.type = type;\n              setPorts(_objectSpread({}, ports));\n            },\n            onSelect: function onSelect(type) {\n              value.getOptions().extras.type = type;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(_Select, {\n            defaultValue: value.getOptions().extras.key,\n            style: {\n              width: 120\n            },\n            onChange: function onChange(key) {\n              value.getOptions().extras.key = key;\n              setPorts(_objectSpread({}, ports));\n            },\n            children: [/*#__PURE__*/_jsxDEV(_Select.Option, {\n              value: \"PK\",\n              children: \"PK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(_Select.Option, {\n              value: \"null\",\n              children: \"Null\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(DeleteRowOutlined, {\n            onClick: function onClick() {\n              return confirmDeletePort(value);\n            },\n            style: {\n              fontSize: 20,\n              cursor: 'pointer',\n              color: 'red'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minWidth: props.size * 2,\n        height: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '0',\n          right: '0'\n        },\n        children: /*#__PURE__*/_jsxDEV(_Popover, {\n          placement: \"rightBottom\",\n          content: content,\n          trigger: \"focus\",\n          children: /*#__PURE__*/_jsxDEV(_Button, {\n            type: \"ghost\",\n            style: {\n              border: 'none'\n            },\n            icon: /*#__PURE__*/_jsxDEV(MoreOutlined, {\n              style: {\n                color: 'white',\n                fontSize: '20px',\n                paddingTop: '5px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.tableHeader,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.tableHeadText,\n          children: tableName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, _this), Object.entries(props.node.getPorts()).map(function (_ref3, index) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            key = _ref4[0],\n            value = _ref4[1];\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.tableRow,\n          children: [/*#__PURE__*/_jsxDEV(PortWidget, {\n            port: value,\n            engine: props.engine,\n            style: styles.leftPort,\n            children: /*#__PURE__*/_jsxDEV(Port, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(PortWidget, {\n            port: value,\n            engine: props.engine,\n            style: styles.rightPort,\n            children: /*#__PURE__*/_jsxDEV(Port, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingLeft: 30,\n              fontWeight: value.getOptions().extras.key === 'PK' ? 700 : 500,\n              color: value.getOptions().extras.key === 'PK' ? '#000' : '#999'\n            },\n            children: value.getOptions().extras.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: '1 0 100px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingRight: 30,\n              color: '#999',\n              fontWeight: value.getOptions().extras.key === 'PK' ? 700 : 500\n            },\n            children: value.getOptions().extras.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CustomNodeWidget, \"EVdWgAx3CnSWdrqClivfnP05uTQ=\");\n\n_c2 = CustomNodeWidget;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Port\");\n$RefreshReg$(_c2, \"CustomNodeWidget\");","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Test/CustomNodeWidget.tsx"],"names":["React","useEffect","useState","TYPE","PortWidget","styled","ExclamationCircleOutlined","PlusOutlined","EditOutlined","MoreOutlined","DeleteOutlined","DeleteRowOutlined","styles","rightPort","width","height","position","right","leftPort","left","tableHeader","display","alignItems","color","fontWeight","fontSize","background","marginBottom","tableHeadText","fill","border","padding","tableRow","flexBasis","justifyContent","Port","div","CustomNodeWidget","props","editNode","setEditNode","tableName","setTableName","hover","setHover","ports","setPorts","node","getOptions","extras","getPorts","addPort","addCustomPort","engine","repaintCanvas","confirm","title","icon","content","okText","cancelText","onOk","remove","confirmDeletePort","port","removePort","openEdit","closeEdit","handelChangeName","e","target","value","setName","handleChangePort","id","name","marginTop","Object","entries","map","index","key","inputValue","option","toLowerCase","indexOf","type","cursor","minWidth","size","top","paddingTop","paddingLeft","flex","paddingRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { CustomNodeModel } from './CustomNodeModel';\nimport { TYPE } from '../../const';\n\nimport {\n  DiagramEngine,\n  PortModel,\n  PortModelAlignment,\n  PortWidget,\n} from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\n\nimport {\n  ExclamationCircleOutlined,\n  PlusOutlined,\n  EditOutlined,\n  MoreOutlined,\n  DeleteOutlined,\n  DeleteRowOutlined,\n} from '@ant-design/icons';\nimport { Col, Modal, Input, Button, Typography, Row, Popover, AutoComplete, Select } from 'antd';\n\nexport interface CustomNodeWidgetProps {\n  node: CustomNodeModel;\n  engine: DiagramEngine;\n  size?: number;\n}\n\nconst styles = {\n  rightPort: {\n    width: '25px',\n    height: '25px',\n    position: 'absolute',\n    right: '0px',\n  },\n\n  leftPort: {\n    width: '25px',\n    height: '25px',\n    position: 'absolute',\n    left: '0',\n  },\n  tableHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    color: 'white',\n    fontWeight: 900,\n    fontSize: '18px',\n    background: '#316896',\n    marginBottom: '-2px',\n  },\n  tableHeadText: {\n    fill: '#fff',\n    fontWeight: 700,\n    border: ' 0 solid #e2e8f0',\n    padding: '7px 30px 7px ',\n  },\n  tableRow: {\n    fontSize: '16px',\n    display: 'flex',\n    width: '100%',\n    flexBasis: 100,\n    justifyContent: 'space-between',\n    background: '#f6f6f6',\n    padding: '5px 0px 5px 0px',\n  },\n};\nexport const Port = styled.div`\n  height: 25px;\n  cursor: pointer;\n\n  &:hover {\n    background: #deecf3;\n  }\n`;\n\nexport const CustomNodeWidget: React.FC<CustomNodeWidgetProps> = props => {\n  const [editNode, setEditNode] = useState(false);\n  const [tableName, setTableName] = useState('');\n  const [hover, setHover] = useState('');\n  const [ports, setPorts] = useState<{ [s: string]: PortModel }>({});\n\n  useEffect(() => {\n    setTableName(props.node.getOptions().extras);\n    setPorts(props.node.getPorts());\n  }, []);\n  const addPort = () => {\n    props.node.addCustomPort('new_col', '', '');\n    props.engine.repaintCanvas();\n  };\n  const confirm = () => {\n    Modal.confirm({\n      title: 'Confirm',\n      icon: <ExclamationCircleOutlined />,\n      content: 'Confirm delete table',\n      okText: 'Yes',\n      cancelText: 'No',\n      onOk() {\n        props.node.remove();\n        props.engine.repaintCanvas();\n      },\n    });\n  };\n  const confirmDeletePort = (port: PortModel) => {\n    Modal.confirm({\n      title: 'Confirm',\n      icon: <ExclamationCircleOutlined />,\n      content: 'Confirm delete port',\n      okText: 'Yes',\n      cancelText: 'No',\n      onOk() {\n        props.node.removePort(port);\n        props.engine.repaintCanvas();\n      },\n    });\n  };\n  const openEdit = () => {\n    setEditNode(true);\n  };\n  const closeEdit = () => {\n    setEditNode(false);\n  };\n  const handelChangeName = (e: any) => {\n    setTableName(e.target.value);\n    props.node.setName(e.target.value);\n  };\n  const handleChangePort = e => {\n    const { id, name, value } = e.target;\n\n    ports[name].getOptions().extras[id] = value;\n    setPorts({ ...ports });\n    props.node.setPorts(ports);\n  };\n  const content = (\n    <Row>\n      <Button\n        type=\"ghost\"\n        icon={<PlusOutlined style={{ color: 'green' }} />}\n        onClick={() => addPort()}\n      />\n      <Button\n        type=\"ghost\"\n        icon={<EditOutlined style={{ color: 'cyan' }} />}\n        onClick={() => openEdit()}\n      />\n      <Button\n        type=\"ghost\"\n        icon={<DeleteOutlined style={{ color: 'red' }} />}\n        onClick={() => confirm()}\n      />\n    </Row>\n  );\n  return (\n    <div>\n      <Modal visible={editNode} onCancel={() => closeEdit()} centered={true} footer={false}>\n        <div style={{ marginBottom: 5, fontWeight: 700 }}>Table:</div>\n        <Input value={tableName} onChange={handelChangeName} />\n        <div style={{ marginTop: 5, fontWeight: 700 }}>Columns:</div>\n        {Object.entries(ports).map(([key, value], index: any) => (\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginTop: 5,\n            }}\n          >\n            <Input\n              id=\"name\"\n              value={value.getOptions().extras.name}\n              name={key}\n              key={index}\n              onChange={handleChangePort}\n            />\n\n            <AutoComplete\n              style={{ width: 250 }}\n              options={TYPE}\n              filterOption={(inputValue, option) =>\n                option.value.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1\n              }\n              value={value.getOptions().extras.type}\n              onChange={type => {\n                value.getOptions().extras.type = type;\n                setPorts({ ...ports });\n              }}\n              onSelect={type => {\n                value.getOptions().extras.type = type;\n              }}\n            ></AutoComplete>\n\n            <Select\n              defaultValue={value.getOptions().extras.key}\n              style={{ width: 120 }}\n              onChange={key => {\n                value.getOptions().extras.key = key;\n                setPorts({ ...ports });\n              }}\n            >\n              <Select.Option value=\"PK\">PK</Select.Option>\n              <Select.Option value=\"null\">Null</Select.Option>\n            </Select>\n            <DeleteRowOutlined\n              onClick={() => confirmDeletePort(value)}\n              style={{ fontSize: 20, cursor: 'pointer', color: 'red' }}\n            />\n          </div>\n        ))}\n      </Modal>\n      <div\n        style={{\n          minWidth: props.size * 2,\n          height: 'auto',\n        }}\n      >\n        <div style={{ position: 'absolute', top: '0', right: '0' }}>\n          <Popover placement=\"rightBottom\" content={content} trigger=\"focus\">\n            <Button\n              type=\"ghost\"\n              style={{ border: 'none' }}\n              icon={\n                <MoreOutlined style={{ color: 'white', fontSize: '20px', paddingTop: '5px' }} />\n              }\n            />\n          </Popover>\n        </div>\n        <div style={styles.tableHeader}>\n          <div style={styles.tableHeadText}>{tableName}</div>\n        </div>\n        {Object.entries(props.node.getPorts()).map(([key, value], index: any) => (\n          <div style={styles.tableRow} key={index}>\n            <PortWidget port={value} engine={props.engine} style={styles.leftPort}>\n              <Port />\n            </PortWidget>\n            <PortWidget port={value} engine={props.engine} style={styles.rightPort}>\n              <Port />\n            </PortWidget>\n            <div\n              style={{\n                paddingLeft: 30,\n                fontWeight: value.getOptions().extras.key === 'PK' ? 700 : 500,\n                color: value.getOptions().extras.key === 'PK' ? '#000' : '#999',\n              }}\n            >\n              {value.getOptions().extras.name}\n            </div>\n            <div style={{ flex: '1 0 100px' }}></div>\n            <div\n              style={{\n                paddingRight: 30,\n                color: '#999',\n                fontWeight: value.getOptions().extras.key === 'PK' ? 700 : 500,\n              }}\n            >\n              {value.getOptions().extras.type}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}