{"ast":null,"code":"import _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\nimport \"antd/lib/menu/style\";\nimport _Menu from \"antd/lib/menu\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\n\nvar _jsxFileName = \"/Users/nguyenthanhbinh/Work/vnshop/admin/src/layouts/AdminLayout.js\",\n    _dec,\n    _class,\n    _descriptor,\n    _temp;\n\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Icon as LegacyIcon } from '@ant-design/compatible';\nimport { LockOutlined, LogoutOutlined, UserOutlined, MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\nimport DocumentTitle from 'react-document-title'; // import { connect } from 'dva';\n\nimport WithDva from '../utils/store';\nimport { withRouter } from 'next/router'; // import { useRouter } from 'next/router'\n// eslint-disable-next-line import/no-extraneous-dependencies\n\nimport { Link } from 'next/link';\nimport { ContainerQuery } from 'react-container-query';\nimport classNames from 'classnames';\nimport Debounce from 'lodash-decorators/debounce';\nimport GlobalFooter from '@/components/GlobalFooter';\nimport CopyRight from '@/components/CopyRight';\nimport UpdatePasswordDialog from '@/components/UpdatePasswordDialog';\nimport context from '@/utils/context';\nimport './AdminLayout.less';\nimport logo from '../assets/logo.svg';\nvar Header = _Layout.Header,\n    Sider = _Layout.Sider,\n    Content = _Layout.Content;\nvar SubMenu = _Menu.SubMenu;\nvar query = {\n  'screen-xs': {\n    maxWidth: 575\n  },\n  'screen-sm': {\n    minWidth: 576,\n    maxWidth: 767\n  },\n  'screen-md': {\n    minWidth: 768,\n    maxWidth: 991\n  },\n  'screen-lg': {\n    minWidth: 992,\n    maxWidth: 1199\n  },\n  'screen-xl': {\n    minWidth: 1200\n  }\n}; // @connect(state => ({\n//   title: state.global.title,\n//   copyRight: state.global.copyRight,\n//   collapsed: state.global.collapsed,\n//   openKeys: state.global.openKeys,\n//   selectedKeys: state.global.selectedKeys,\n//   user: state.global.user,\n//   menuPaths: state.global.menuPaths,\n//   menuMap: state.global.menuMap,\n//   menus: state.global.menus,\n//   global: state.global,\n// }))\n\nvar AdminLayout = (_dec = Debounce(600), (_class = (_temp = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(AdminLayout, _React$PureComponent);\n\n  var _super = _createSuper(AdminLayout);\n\n  function AdminLayout() {\n    var _this;\n\n    _classCallCheck(this, AdminLayout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      updatePwdVisible: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"dispatch\", function (action) {\n      var dispatch = _this.props.dispatch;\n      dispatch(action);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCollapse\", function () {\n      var collapsed = _this.props.collapsed;\n\n      _this.dispatch({\n        type: 'global/changeLayoutCollapsed',\n        payload: !collapsed\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMenuClick\", function (_ref) {\n      var key = _ref.key;\n\n      if (key === 'logout') {\n        _this.dispatch({\n          type: 'login/logout'\n        });\n      } else if (key === 'updatepwd') {\n        _this.setState({\n          updatePwdVisible: true\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMenuOpenChange\", function (openKeys) {\n      var menuMap = _this.props.menuMap;\n\n      if (openKeys.length > 1) {\n        var lastKey = openKeys[openKeys.length - 1];\n        var lastItem = menuMap[lastKey];\n\n        if (!lastItem) {\n          _this.dispatch({\n            type: 'global/changeOpenKeys',\n            payload: []\n          });\n\n          return;\n        }\n\n        var isParent = false;\n\n        for (var i = 0; i < openKeys.length - 1; i += 1) {\n          var item = menuMap[openKeys[i]] || {};\n          var path = item.id;\n\n          if (item.parent_path !== '') {\n            path = \"\".concat(item.parent_path, \"/\").concat(path);\n          }\n\n          if (lastItem.parent_path === path) {\n            isParent = true;\n            break;\n          }\n        }\n\n        if (!isParent) {\n          _this.dispatch({\n            type: 'global/changeOpenKeys',\n            payload: [lastKey]\n          });\n\n          return;\n        }\n      }\n\n      _this.dispatch({\n        type: 'global/changeOpenKeys',\n        payload: _toConsumableArray(openKeys)\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleClick\", function () {\n      var collapsed = _this.props.collapsed;\n\n      _this.dispatch({\n        type: 'global/changeLayoutCollapsed',\n        payload: !collapsed\n      });\n\n      _this.onTriggerResizeEvent();\n    });\n\n    _initializerDefineProperty(_assertThisInitialized(_this), \"onTriggerResizeEvent\", _descriptor, _assertThisInitialized(_this));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleUpdatePwdCancel\", function () {\n      _this.setState({\n        updatePwdVisible: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(AdminLayout, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"componentDidMount: \", this.props);\n      var pathname = this.props.router.pathname;\n      this.dispatch({\n        type: 'global/fetchUser'\n      });\n      this.dispatch({\n        type: 'global/fetchMenuTree',\n        pathname: pathname\n      });\n    }\n  }, {\n    key: \"renderNavMenuItems\",\n    value: function renderNavMenuItems(menusData) {\n      var _this2 = this;\n\n      if (!menusData) {\n        return [];\n      }\n\n      return menusData.map(function (item) {\n        if (!item.name || item.show_status !== 1) {\n          return null;\n        }\n\n        if (item.children && item.children.some(function (child) {\n          return child.name && child.show_status === 1;\n        })) {\n          return __jsx(SubMenu, {\n            title: item.icon ? __jsx(\"span\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }\n            }, __jsx(LegacyIcon, {\n              type: item.icon,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }\n            }), __jsx(\"span\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }\n            }, item.name)) : item.name,\n            key: item.id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 11\n            }\n          }, _this2.renderNavMenuItems(item.children));\n        }\n\n        var router = item.router;\n\n        var icon = item.icon && __jsx(LegacyIcon, {\n          type: item.icon,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 33\n          }\n        });\n\n        console.log(\"renderNavMenuItems: \", _this2.props);\n        var pathname = _this2.props.router.pathname;\n        return __jsx(_Menu.Item, {\n          key: item.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 9\n          }\n        }, router.startsWith('http') ? __jsx(\"a\", {\n          href: router,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }\n        }, icon, __jsx(\"span\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }\n        }, item.name)) : __jsx(Link, {\n          href: router,\n          replace: router === pathname,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }\n        }, icon, __jsx(\"span\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }\n        }, item.name)));\n      });\n    }\n  }, {\n    key: \"renderPageTitle\",\n    value: function renderPageTitle() {\n      var _this$props = this.props,\n          pathname = _this$props.router.pathname,\n          menuPaths = _this$props.menuPaths,\n          title = _this$props.title;\n      console.log(\"renderPageTitle: pathname\", pathname);\n      var ptitle = title;\n      var item = menuPaths[pathname];\n\n      if (item) {\n        ptitle = \"\".concat(item.name, \" - \").concat(title);\n      }\n\n      return ptitle;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          user = _this$props2.user,\n          collapsed = _this$props2.collapsed,\n          menus = _this$props2.menus,\n          copyRight = _this$props2.copyRight,\n          openKeys = _this$props2.openKeys,\n          title = _this$props2.title,\n          selectedKeys = _this$props2.selectedKeys,\n          global = _this$props2.global;\n      var updatePwdVisible = this.state.updatePwdVisible;\n\n      var menu = __jsx(_Menu, {\n        className: \"menu\",\n        selectedKeys: [],\n        onClick: this.onMenuClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 7\n        }\n      }, __jsx(_Menu.Item, {\n        key: \"updatepwd\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 9\n        }\n      }, __jsx(LockOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }\n      }), \"Change Password\"), __jsx(_Menu.Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 9\n        }\n      }), __jsx(_Menu.Item, {\n        key: \"logout\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 9\n        }\n      }, __jsx(LogoutOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }\n      }), \"Sign out\")); // Don't show popup menu when it is been collapsed\n\n\n      var menuProps = collapsed ? {} : {\n        openKeys: openKeys\n      };\n      var siderWidth = 256; // const layout = (\n      //   <Layout>\n      //     <Sider\n      //       trigger={null}\n      //       collapsible\n      //       collapsed={collapsed}\n      //       breakpoint=\"lg\"\n      //       onCollapse={this.onCollapse}\n      //       width={siderWidth}\n      //       className=\"sider\"\n      //     >\n      //       <div className=\"logo\">\n      //         <Link href=\"/\">\n      //           <img src={logo} alt=\"logo\" />\n      //           <h1>{title}</h1>\n      //         </Link>\n      //       </div>\n      //       <Menu\n      //         theme=\"dark\"\n      //         mode=\"inline\"\n      //         {...menuProps}\n      //         onOpenChange={this.onMenuOpenChange}\n      //         selectedKeys={selectedKeys}\n      //         style={{ margin: '16px 0', width: '100%' }}\n      //       >\n      //         {this.renderNavMenuItems(menus)}\n      //       </Menu>\n      //     </Sider>\n      //     <Layout>\n      //       <Header\n      //         className={classNames('header')}\n      //         style={{\n      //           paddingLeft: 12,\n      //           paddingRight: 12,\n      //         }}\n      //       >\n      //         <div className={classNames('foldout')} onClick={() => this.onCollapse()}>\n      //           {collapsed ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\n      //         </div>\n      //         <div className={classNames('right')}>\n      //           {user.user_name ? (\n      //             <Dropdown overlay={menu}>\n      //               <span className={classNames(['action', 'account'])}>\n      //                 <Avatar size=\"small\" className={classNames('avatar')} icon={<UserOutlined />} />\n      //                 {user.real_name !== ''\n      //                   ? `${user.user_name}(${user.real_name})`\n      //                   : user.user_name}\n      //               </span>\n      //             </Dropdown>\n      //           ) : (\n      //               <Spin size=\"small\" style={{ marginLeft: 8 }} />\n      //             )}\n      //         </div>\n      //       </Header>\n      //       <Content className={classNames('content')}>\n      //         <div style={{ minHeight: 'calc(100vh - 150px)' }}>\n      //           <context.GlobalContext.Provider value={global}>\n      //             {children}\n      //           </context.GlobalContext.Provider>\n      //         </div>\n      //         <GlobalFooter copyright={<CopyRight title={copyRight} />} />\n      //       </Content>\n      //     </Layout>\n      //     <UpdatePasswordDialog visible={updatePwdVisible} onCancel={this.handleUpdatePwdCancel} />\n      //   </Layout>\n      // );\n\n      return __jsx(DocumentTitle, {\n        title: this.renderPageTitle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return AdminLayout;\n}(React.PureComponent), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"onTriggerResizeEvent\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return function () {\n      var event = document.createEvent('HTMLEvents');\n      event.initEvent('resize', true, false);\n      window.dispatchEvent(event);\n    };\n  }\n})), _class)); // export default AdminLayout;\n\nexport default WithDva(function (state) {\n  return {\n    title: state.global.title,\n    copyRight: state.global.copyRight,\n    collapsed: state.global.collapsed,\n    openKeys: state.global.openKeys,\n    selectedKeys: state.global.selectedKeys,\n    user: state.global.user,\n    menuPaths: state.global.menuPaths,\n    menuMap: state.global.menuMap,\n    menus: state.global.menus,\n    global: state.global\n  };\n})(withRouter(AdminLayout));","map":{"version":3,"sources":["/Users/nguyenthanhbinh/Work/vnshop/admin/src/layouts/AdminLayout.js"],"names":["React","Icon","LegacyIcon","LockOutlined","LogoutOutlined","UserOutlined","MenuFoldOutlined","MenuUnfoldOutlined","DocumentTitle","WithDva","withRouter","Link","ContainerQuery","classNames","Debounce","GlobalFooter","CopyRight","UpdatePasswordDialog","context","logo","Header","Sider","Content","SubMenu","query","maxWidth","minWidth","AdminLayout","updatePwdVisible","action","dispatch","props","collapsed","type","payload","key","setState","openKeys","menuMap","length","lastKey","lastItem","isParent","i","item","path","id","parent_path","onTriggerResizeEvent","console","log","pathname","router","menusData","map","name","show_status","children","some","child","icon","renderNavMenuItems","startsWith","menuPaths","title","ptitle","user","menus","copyRight","selectedKeys","global","state","menu","onMenuClick","menuProps","siderWidth","renderPageTitle","PureComponent","event","document","createEvent","initEvent","window","dispatchEvent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAI,IAAIC,UAAjB,QAAmC,wBAAnC;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,YAHF,EAIEC,gBAJF,EAKEC,kBALF,QAMO,mBANP;AAQA,OAAOC,aAAP,MAA0B,sBAA1B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,UAAT,QAA2B,aAA3B,C,CACA;AAGA;;AAEA,SAASC,IAAT,QAAqB,WAArB;AAEA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,OAAOC,oBAAP,MAAiC,mCAAjC;AAEA,OAAOC,OAAP,MAAoB,iBAApB;AAEA,OAAO,oBAAP;AACA,OAAOC,IAAP,MAAiB,oBAAjB;IAEQC,M,WAAAA,M;IAAQC,K,WAAAA,K;IAAOC,O,WAAAA,O;IACfC,O,SAAAA,O;AAER,IAAMC,KAAK,GAAG;AACZ,eAAa;AACXC,IAAAA,QAAQ,EAAE;AADC,GADD;AAIZ,eAAa;AACXC,IAAAA,QAAQ,EAAE,GADC;AAEXD,IAAAA,QAAQ,EAAE;AAFC,GAJD;AAQZ,eAAa;AACXC,IAAAA,QAAQ,EAAE,GADC;AAEXD,IAAAA,QAAQ,EAAE;AAFC,GARD;AAYZ,eAAa;AACXC,IAAAA,QAAQ,EAAE,GADC;AAEXD,IAAAA,QAAQ,EAAE;AAFC,GAZD;AAgBZ,eAAa;AACXC,IAAAA,QAAQ,EAAE;AADC;AAhBD,CAAd,C,CAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,W,WA+FHb,QAAQ,CAAC,GAAD,C;;;;;;;;;;;;;;;;4DA9FD;AACNc,MAAAA,gBAAgB,EAAE;AADZ,K;;+DAqBG,UAAAC,MAAM,EAAI;AAAA,UACXC,QADW,GACE,MAAKC,KADP,CACXD,QADW;AAEnBA,MAAAA,QAAQ,CAACD,MAAD,CAAR;AACD,K;;iEAEY,YAAM;AAAA,UACTG,SADS,GACK,MAAKD,KADV,CACTC,SADS;;AAEjB,YAAKF,QAAL,CAAc;AACZG,QAAAA,IAAI,EAAE,8BADM;AAEZC,QAAAA,OAAO,EAAE,CAACF;AAFE,OAAd;AAID,K;;kEAEa,gBAAa;AAAA,UAAVG,GAAU,QAAVA,GAAU;;AACzB,UAAIA,GAAG,KAAK,QAAZ,EAAsB;AACpB,cAAKL,QAAL,CAAc;AACZG,UAAAA,IAAI,EAAE;AADM,SAAd;AAGD,OAJD,MAIO,IAAIE,GAAG,KAAK,WAAZ,EAAyB;AAC9B,cAAKC,QAAL,CAAc;AAAER,UAAAA,gBAAgB,EAAE;AAApB,SAAd;AACD;AACF,K;;uEAEkB,UAAAS,QAAQ,EAAI;AAAA,UACrBC,OADqB,GACT,MAAKP,KADI,CACrBO,OADqB;;AAE7B,UAAID,QAAQ,CAACE,MAAT,GAAkB,CAAtB,EAAyB;AACvB,YAAMC,OAAO,GAAGH,QAAQ,CAACA,QAAQ,CAACE,MAAT,GAAkB,CAAnB,CAAxB;AACA,YAAME,QAAQ,GAAGH,OAAO,CAACE,OAAD,CAAxB;;AACA,YAAI,CAACC,QAAL,EAAe;AACb,gBAAKX,QAAL,CAAc;AACZG,YAAAA,IAAI,EAAE,uBADM;AAEZC,YAAAA,OAAO,EAAE;AAFG,WAAd;;AAIA;AACD;;AAED,YAAIQ,QAAQ,GAAG,KAAf;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,QAAQ,CAACE,MAAT,GAAkB,CAAtC,EAAyCI,CAAC,IAAI,CAA9C,EAAiD;AAC/C,cAAMC,IAAI,GAAGN,OAAO,CAACD,QAAQ,CAACM,CAAD,CAAT,CAAP,IAAwB,EAArC;AACA,cAAIE,IAAI,GAAGD,IAAI,CAACE,EAAhB;;AACA,cAAIF,IAAI,CAACG,WAAL,KAAqB,EAAzB,EAA6B;AAC3BF,YAAAA,IAAI,aAAMD,IAAI,CAACG,WAAX,cAA0BF,IAA1B,CAAJ;AACD;;AACD,cAAIJ,QAAQ,CAACM,WAAT,KAAyBF,IAA7B,EAAmC;AACjCH,YAAAA,QAAQ,GAAG,IAAX;AACA;AACD;AACF;;AAED,YAAI,CAACA,QAAL,EAAe;AACb,gBAAKZ,QAAL,CAAc;AACZG,YAAAA,IAAI,EAAE,uBADM;AAEZC,YAAAA,OAAO,EAAE,CAACM,OAAD;AAFG,WAAd;;AAIA;AACD;AACF;;AAED,YAAKV,QAAL,CAAc;AACZG,QAAAA,IAAI,EAAE,uBADM;AAEZC,QAAAA,OAAO,qBAAMG,QAAN;AAFK,OAAd;AAID,K;;oEAEe,YAAM;AAAA,UACZL,SADY,GACE,MAAKD,KADP,CACZC,SADY;;AAEpB,YAAKF,QAAL,CAAc;AACZG,QAAAA,IAAI,EAAE,8BADM;AAEZC,QAAAA,OAAO,EAAE,CAACF;AAFE,OAAd;;AAIA,YAAKgB,oBAAL;AACD,K;;;;4EASuB,YAAM;AAC5B,YAAKZ,QAAL,CAAc;AAAER,QAAAA,gBAAgB,EAAE;AAApB,OAAd;AACD,K;;;;;;;wCAnGmB;AAClBqB,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,KAAKnB,KAAxC;AADkB,UAINoB,QAJM,GAKd,KAAKpB,KALS,CAIhBqB,MAJgB,CAIND,QAJM;AAOlB,WAAKrB,QAAL,CAAc;AACZG,QAAAA,IAAI,EAAE;AADM,OAAd;AAIA,WAAKH,QAAL,CAAc;AACZG,QAAAA,IAAI,EAAE,sBADM;AAEZkB,QAAAA,QAAQ,EAARA;AAFY,OAAd;AAID;;;uCAsFkBE,S,EAAW;AAAA;;AAC5B,UAAI,CAACA,SAAL,EAAgB;AACd,eAAO,EAAP;AACD;;AAED,aAAOA,SAAS,CAACC,GAAV,CAAc,UAAAV,IAAI,EAAI;AAC3B,YAAI,CAACA,IAAI,CAACW,IAAN,IAAcX,IAAI,CAACY,WAAL,KAAqB,CAAvC,EAA0C;AACxC,iBAAO,IAAP;AACD;;AAED,YAAIZ,IAAI,CAACa,QAAL,IAAiBb,IAAI,CAACa,QAAL,CAAcC,IAAd,CAAmB,UAAAC,KAAK;AAAA,iBAAIA,KAAK,CAACJ,IAAN,IAAcI,KAAK,CAACH,WAAN,KAAsB,CAAxC;AAAA,SAAxB,CAArB,EAAyF;AACvF,iBACE,MAAC,OAAD;AACE,YAAA,KAAK,EACHZ,IAAI,CAACgB,IAAL,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,MAAC,UAAD;AAAY,cAAA,IAAI,EAAEhB,IAAI,CAACgB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAOhB,IAAI,CAACW,IAAZ,CAFF,CADF,GAMIX,IAAI,CAACW,IARb;AAWE,YAAA,GAAG,EAAEX,IAAI,CAACE,EAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAaG,MAAI,CAACe,kBAAL,CAAwBjB,IAAI,CAACa,QAA7B,CAbH,CADF;AAiBD;;AAvB0B,YAyBnBL,MAzBmB,GAyBRR,IAzBQ,CAyBnBQ,MAzBmB;;AA0B3B,YAAMQ,IAAI,GAAGhB,IAAI,CAACgB,IAAL,IAAa,MAAC,UAAD;AAAY,UAAA,IAAI,EAAEhB,IAAI,CAACgB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA1B;;AAEAX,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC,MAAI,CAACnB,KAAzC;AA5B2B,YA8BfoB,QA9Be,GA+BvB,MAAI,CAACpB,KA/BkB,CA8BzBqB,MA9ByB,CA8BfD,QA9Be;AAiC3B,eACE,YAAM,IAAN;AAAW,UAAA,GAAG,EAAEP,IAAI,CAACE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGM,MAAM,CAACU,UAAP,CAAkB,MAAlB,IACC;AAAG,UAAA,IAAI,EAAEV,MAAT;AAAiB,UAAA,MAAM,EAAC,QAAxB;AAAiC,UAAA,GAAG,EAAC,qBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGQ,IADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOhB,IAAI,CAACW,IAAZ,CAFF,CADD,GAMG,MAAC,IAAD;AAAM,UAAA,IAAI,EAAEH,MAAZ;AAAoB,UAAA,OAAO,EAAEA,MAAM,KAAKD,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGS,IADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOhB,IAAI,CAACW,IAAZ,CAFF,CAPN,CADF;AAeD,OAhDM,CAAP;AAiDD;;;sCAEiB;AAAA,wBAMZ,KAAKxB,KANO;AAAA,UAGJoB,QAHI,eAGdC,MAHc,CAGJD,QAHI;AAAA,UAIdY,SAJc,eAIdA,SAJc;AAAA,UAKdC,KALc,eAKdA,KALc;AAQhBf,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCC,QAAzC;AAEA,UAAIc,MAAM,GAAGD,KAAb;AACA,UAAMpB,IAAI,GAAGmB,SAAS,CAACZ,QAAD,CAAtB;;AACA,UAAIP,IAAJ,EAAU;AACRqB,QAAAA,MAAM,aAAMrB,IAAI,CAACW,IAAX,gBAAqBS,KAArB,CAAN;AACD;;AACD,aAAOC,MAAP;AACD;;;6BAEQ;AAAA,yBAWH,KAAKlC,KAXF;AAAA,UAEL0B,QAFK,gBAELA,QAFK;AAAA,UAGLS,IAHK,gBAGLA,IAHK;AAAA,UAILlC,SAJK,gBAILA,SAJK;AAAA,UAKLmC,KALK,gBAKLA,KALK;AAAA,UAMLC,SANK,gBAMLA,SANK;AAAA,UAOL/B,QAPK,gBAOLA,QAPK;AAAA,UAQL2B,KARK,gBAQLA,KARK;AAAA,UASLK,YATK,gBASLA,YATK;AAAA,UAULC,MAVK,gBAULA,MAVK;AAAA,UAaC1C,gBAbD,GAasB,KAAK2C,KAb3B,CAaC3C,gBAbD;;AAeP,UAAM4C,IAAI,GACR;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,YAAY,EAAE,EAArC;AAAyC,QAAA,OAAO,EAAE,KAAKC,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,YAAM,IAAN;AAAW,QAAA,GAAG,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,oBADF,EAKE,YAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME,YAAM,IAAN;AAAW,QAAA,GAAG,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,aANF,CADF,CAfO,CA6BP;;;AACA,UAAMC,SAAS,GAAG1C,SAAS,GAAG,EAAH,GAAQ;AAAEK,QAAAA,QAAQ,EAARA;AAAF,OAAnC;AACA,UAAMsC,UAAU,GAAG,GAAnB,CA/BO,CAiCP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aACE,MAAC,aAAD;AAAe,QAAA,KAAK,EAAE,KAAKC,eAAL,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD;;;;EA/RuB5E,KAAK,CAAC6E,a;;;;;WAgGP,YAAM;AAC3B,UAAMC,KAAK,GAAGC,QAAQ,CAACC,WAAT,CAAqB,YAArB,CAAd;AACAF,MAAAA,KAAK,CAACG,SAAN,CAAgB,QAAhB,EAA0B,IAA1B,EAAgC,KAAhC;AACAC,MAAAA,MAAM,CAACC,aAAP,CAAqBL,KAArB;AACD,K;;eA8LH;;AACA,eAAerE,OAAO,CAAC,UAAA8D,KAAK;AAAA,SAAK;AAC/BP,IAAAA,KAAK,EAAEO,KAAK,CAACD,MAAN,CAAaN,KADW;AAE/BI,IAAAA,SAAS,EAAEG,KAAK,CAACD,MAAN,CAAaF,SAFO;AAG/BpC,IAAAA,SAAS,EAAEuC,KAAK,CAACD,MAAN,CAAatC,SAHO;AAI/BK,IAAAA,QAAQ,EAAEkC,KAAK,CAACD,MAAN,CAAajC,QAJQ;AAK/BgC,IAAAA,YAAY,EAAEE,KAAK,CAACD,MAAN,CAAaD,YALI;AAM/BH,IAAAA,IAAI,EAAEK,KAAK,CAACD,MAAN,CAAaJ,IANY;AAO/BH,IAAAA,SAAS,EAAEQ,KAAK,CAACD,MAAN,CAAaP,SAPO;AAQ/BzB,IAAAA,OAAO,EAAEiC,KAAK,CAACD,MAAN,CAAahC,OARS;AAS/B6B,IAAAA,KAAK,EAAEI,KAAK,CAACD,MAAN,CAAaH,KATW;AAU/BG,IAAAA,MAAM,EAAEC,KAAK,CAACD;AAViB,GAAL;AAAA,CAAN,CAAP,CAWX5D,UAAU,CAACiB,WAAD,CAXC,CAAf","sourcesContent":["import React from 'react';\r\nimport { Icon as LegacyIcon } from '@ant-design/compatible';\r\nimport {\r\n  LockOutlined,\r\n  LogoutOutlined,\r\n  UserOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n} from '@ant-design/icons';\r\nimport { Layout, Menu, Avatar, Dropdown, Spin } from 'antd';\r\nimport DocumentTitle from 'react-document-title';\r\n// import { connect } from 'dva';\r\nimport WithDva from '../utils/store';\r\nimport { withRouter } from 'next/router'\r\n// import { useRouter } from 'next/router'\r\n\r\n\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\n\r\nimport { Link } from 'next/link';\r\n\r\nimport { ContainerQuery } from 'react-container-query';\r\nimport classNames from 'classnames';\r\nimport Debounce from 'lodash-decorators/debounce';\r\nimport GlobalFooter from '@/components/GlobalFooter';\r\nimport CopyRight from '@/components/CopyRight';\r\n\r\nimport UpdatePasswordDialog from '@/components/UpdatePasswordDialog';\r\n\r\nimport context from '@/utils/context';\r\n\r\nimport './AdminLayout.less';\r\nimport logo from '../assets/logo.svg';\r\n\r\nconst { Header, Sider, Content } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst query = {\r\n  'screen-xs': {\r\n    maxWidth: 575,\r\n  },\r\n  'screen-sm': {\r\n    minWidth: 576,\r\n    maxWidth: 767,\r\n  },\r\n  'screen-md': {\r\n    minWidth: 768,\r\n    maxWidth: 991,\r\n  },\r\n  'screen-lg': {\r\n    minWidth: 992,\r\n    maxWidth: 1199,\r\n  },\r\n  'screen-xl': {\r\n    minWidth: 1200,\r\n  },\r\n};\r\n\r\n// @connect(state => ({\r\n//   title: state.global.title,\r\n//   copyRight: state.global.copyRight,\r\n//   collapsed: state.global.collapsed,\r\n//   openKeys: state.global.openKeys,\r\n//   selectedKeys: state.global.selectedKeys,\r\n//   user: state.global.user,\r\n//   menuPaths: state.global.menuPaths,\r\n//   menuMap: state.global.menuMap,\r\n//   menus: state.global.menus,\r\n//   global: state.global,\r\n// }))\r\nclass AdminLayout extends React.PureComponent {\r\n  state = {\r\n    updatePwdVisible: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount: \", this.props);\r\n\r\n    const {\r\n      router: { pathname },\r\n    } = this.props;\r\n\r\n    this.dispatch({\r\n      type: 'global/fetchUser',\r\n    });\r\n\r\n    this.dispatch({\r\n      type: 'global/fetchMenuTree',\r\n      pathname,\r\n    });\r\n  }\r\n\r\n  dispatch = action => {\r\n    const { dispatch } = this.props;\r\n    dispatch(action);\r\n  };\r\n\r\n  onCollapse = () => {\r\n    const { collapsed } = this.props;\r\n    this.dispatch({\r\n      type: 'global/changeLayoutCollapsed',\r\n      payload: !collapsed,\r\n    });\r\n  };\r\n\r\n  onMenuClick = ({ key }) => {\r\n    if (key === 'logout') {\r\n      this.dispatch({\r\n        type: 'login/logout',\r\n      });\r\n    } else if (key === 'updatepwd') {\r\n      this.setState({ updatePwdVisible: true });\r\n    }\r\n  };\r\n\r\n  onMenuOpenChange = openKeys => {\r\n    const { menuMap } = this.props;\r\n    if (openKeys.length > 1) {\r\n      const lastKey = openKeys[openKeys.length - 1];\r\n      const lastItem = menuMap[lastKey];\r\n      if (!lastItem) {\r\n        this.dispatch({\r\n          type: 'global/changeOpenKeys',\r\n          payload: [],\r\n        });\r\n        return;\r\n      }\r\n\r\n      let isParent = false;\r\n      for (let i = 0; i < openKeys.length - 1; i += 1) {\r\n        const item = menuMap[openKeys[i]] || {};\r\n        let path = item.id;\r\n        if (item.parent_path !== '') {\r\n          path = `${item.parent_path}/${path}`;\r\n        }\r\n        if (lastItem.parent_path === path) {\r\n          isParent = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!isParent) {\r\n        this.dispatch({\r\n          type: 'global/changeOpenKeys',\r\n          payload: [lastKey],\r\n        });\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.dispatch({\r\n      type: 'global/changeOpenKeys',\r\n      payload: [...openKeys],\r\n    });\r\n  };\r\n\r\n  onToggleClick = () => {\r\n    const { collapsed } = this.props;\r\n    this.dispatch({\r\n      type: 'global/changeLayoutCollapsed',\r\n      payload: !collapsed,\r\n    });\r\n    this.onTriggerResizeEvent();\r\n  };\r\n\r\n  @Debounce(600)\r\n  onTriggerResizeEvent = () => {\r\n    const event = document.createEvent('HTMLEvents');\r\n    event.initEvent('resize', true, false);\r\n    window.dispatchEvent(event);\r\n  };\r\n\r\n  handleUpdatePwdCancel = () => {\r\n    this.setState({ updatePwdVisible: false });\r\n  };\r\n\r\n  renderNavMenuItems(menusData) {\r\n    if (!menusData) {\r\n      return [];\r\n    }\r\n\r\n    return menusData.map(item => {\r\n      if (!item.name || item.show_status !== 1) {\r\n        return null;\r\n      }\r\n\r\n      if (item.children && item.children.some(child => child.name && child.show_status === 1)) {\r\n        return (\r\n          <SubMenu\r\n            title={\r\n              item.icon ? (\r\n                <span>\r\n                  <LegacyIcon type={item.icon} />\r\n                  <span>{item.name}</span>\r\n                </span>\r\n              ) : (\r\n                  item.name\r\n                )\r\n            }\r\n            key={item.id}\r\n          >\r\n            {this.renderNavMenuItems(item.children)}\r\n          </SubMenu>\r\n        );\r\n      }\r\n\r\n      const { router } = item;\r\n      const icon = item.icon && <LegacyIcon type={item.icon} />;\r\n\r\n      console.log(\"renderNavMenuItems: \", this.props);\r\n      const {\r\n        router: { pathname },\r\n      } = this.props;\r\n\r\n      return (\r\n        <Menu.Item key={item.id}>\r\n          {router.startsWith('http') ? (\r\n            <a href={router} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {icon}\r\n              <span>{item.name}</span>\r\n            </a>\r\n          ) : (\r\n              <Link href={router} replace={router === pathname}>\r\n                {icon}\r\n                <span>{item.name}</span>\r\n              </Link>\r\n            )}\r\n        </Menu.Item>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderPageTitle() {\r\n\r\n    const {\r\n      router: { pathname },\r\n      menuPaths,\r\n      title,\r\n    } = this.props;\r\n\r\n    console.log(\"renderPageTitle: pathname\", pathname);\r\n\r\n    let ptitle = title;\r\n    const item = menuPaths[pathname];\r\n    if (item) {\r\n      ptitle = `${item.name} - ${title}`;\r\n    }\r\n    return ptitle;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children,\r\n      user,\r\n      collapsed,\r\n      menus,\r\n      copyRight,\r\n      openKeys,\r\n      title,\r\n      selectedKeys,\r\n      global,\r\n    } = this.props;\r\n\r\n    const { updatePwdVisible } = this.state;\r\n\r\n    const menu = (\r\n      <Menu className=\"menu\" selectedKeys={[]} onClick={this.onMenuClick}>\r\n        <Menu.Item key=\"updatepwd\">\r\n          <LockOutlined />\r\n          Change Password\r\n        </Menu.Item>\r\n        <Menu.Divider />\r\n        <Menu.Item key=\"logout\">\r\n          <LogoutOutlined />\r\n          Sign out\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n\r\n    // Don't show popup menu when it is been collapsed\r\n    const menuProps = collapsed ? {} : { openKeys };\r\n    const siderWidth = 256;\r\n\r\n    // const layout = (\r\n    //   <Layout>\r\n    //     <Sider\r\n    //       trigger={null}\r\n    //       collapsible\r\n    //       collapsed={collapsed}\r\n    //       breakpoint=\"lg\"\r\n    //       onCollapse={this.onCollapse}\r\n    //       width={siderWidth}\r\n    //       className=\"sider\"\r\n    //     >\r\n    //       <div className=\"logo\">\r\n    //         <Link href=\"/\">\r\n    //           <img src={logo} alt=\"logo\" />\r\n    //           <h1>{title}</h1>\r\n    //         </Link>\r\n    //       </div>\r\n    //       <Menu\r\n    //         theme=\"dark\"\r\n    //         mode=\"inline\"\r\n    //         {...menuProps}\r\n    //         onOpenChange={this.onMenuOpenChange}\r\n    //         selectedKeys={selectedKeys}\r\n    //         style={{ margin: '16px 0', width: '100%' }}\r\n    //       >\r\n    //         {this.renderNavMenuItems(menus)}\r\n    //       </Menu>\r\n    //     </Sider>\r\n    //     <Layout>\r\n    //       <Header\r\n    //         className={classNames('header')}\r\n    //         style={{\r\n    //           paddingLeft: 12,\r\n    //           paddingRight: 12,\r\n    //         }}\r\n    //       >\r\n    //         <div className={classNames('foldout')} onClick={() => this.onCollapse()}>\r\n    //           {collapsed ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\r\n    //         </div>\r\n    //         <div className={classNames('right')}>\r\n    //           {user.user_name ? (\r\n    //             <Dropdown overlay={menu}>\r\n    //               <span className={classNames(['action', 'account'])}>\r\n    //                 <Avatar size=\"small\" className={classNames('avatar')} icon={<UserOutlined />} />\r\n    //                 {user.real_name !== ''\r\n    //                   ? `${user.user_name}(${user.real_name})`\r\n    //                   : user.user_name}\r\n    //               </span>\r\n    //             </Dropdown>\r\n    //           ) : (\r\n    //               <Spin size=\"small\" style={{ marginLeft: 8 }} />\r\n    //             )}\r\n    //         </div>\r\n    //       </Header>\r\n    //       <Content className={classNames('content')}>\r\n    //         <div style={{ minHeight: 'calc(100vh - 150px)' }}>\r\n    //           <context.GlobalContext.Provider value={global}>\r\n    //             {children}\r\n    //           </context.GlobalContext.Provider>\r\n    //         </div>\r\n    //         <GlobalFooter copyright={<CopyRight title={copyRight} />} />\r\n    //       </Content>\r\n    //     </Layout>\r\n    //     <UpdatePasswordDialog visible={updatePwdVisible} onCancel={this.handleUpdatePwdCancel} />\r\n    //   </Layout>\r\n    // );\r\n\r\n    return (\r\n      <DocumentTitle title={this.renderPageTitle()}>\r\n        {/* <ContainerQuery query={query}>\r\n          {params => <div className={classNames(params)}>{layout}</div>}\r\n        </ContainerQuery> */}\r\n      </DocumentTitle>\r\n    );\r\n  }\r\n}\r\n\r\n// export default AdminLayout;\r\nexport default WithDva(state => ({\r\n  title: state.global.title,\r\n  copyRight: state.global.copyRight,\r\n  collapsed: state.global.collapsed,\r\n  openKeys: state.global.openKeys,\r\n  selectedKeys: state.global.selectedKeys,\r\n  user: state.global.user,\r\n  menuPaths: state.global.menuPaths,\r\n  menuMap: state.global.menuMap,\r\n  menus: state.global.menus,\r\n  global: state.global,\r\n}))(withRouter(AdminLayout));"]},"metadata":{},"sourceType":"module"}