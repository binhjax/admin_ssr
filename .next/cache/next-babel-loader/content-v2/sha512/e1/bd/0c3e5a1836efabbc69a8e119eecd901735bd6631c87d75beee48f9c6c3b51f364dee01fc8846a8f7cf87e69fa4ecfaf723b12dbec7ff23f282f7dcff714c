{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/tuanquang/admin_ssr/src/components/Test/CustomNodeWidget.tsx\";\nimport * as React from 'react';\nimport { PortModelAlignment, PortWidget } from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\nconst styles = {\n  tableHeader: {\n    color: 'white',\n    border: ' 0 solid #e2e8f0',\n    fontWeight: 400,\n    fontSize: '20px',\n    padding: '5px 20px',\n    background: '#316896',\n    marginBottom: '-2px'\n  },\n  rightPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '380px'\n  },\n  leftPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '0'\n  },\n  tableRow: {\n    fontWeight: 700,\n    fontSize: '20px'\n  }\n};\nexport const Port = styled.div`\n  width: '100%';\n  height: 20px;\n  background: #f6f6f6;\n  cursor: pointer;\n  margin-top: 5px;\n\n  &:hover {\n    background: #deecf3;\n  }\n`;\nexport class CustomNodeWidget extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minWidth: this.props.size * 2,\n        minHeight: this.props.size,\n        width: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.tableHeader,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.tableRow,\n        children: [/*#__PURE__*/_jsxDEV(PortWidget, {\n          port: this.props.node.getPort(PortModelAlignment.LEFT),\n          engine: this.props.engine,\n          style: styles.leftPort,\n          children: /*#__PURE__*/_jsxDEV(Port, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PortWidget, {\n          port: this.props.node.getPort(PortModelAlignment.RIGHT),\n          engine: this.props.engine,\n          style: styles.rightPort,\n          children: /*#__PURE__*/_jsxDEV(Port, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#dbdd4d'\n          },\n          children: \"String\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"PK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Test/CustomNodeWidget.tsx"],"names":["React","PortModelAlignment","PortWidget","styled","styles","tableHeader","color","border","fontWeight","fontSize","padding","background","marginBottom","rightPort","width","height","position","left","leftPort","tableRow","Port","div","CustomNodeWidget","Component","constructor","props","render","minWidth","size","minHeight","node","getPort","LEFT","engine","RIGHT"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DiamondNodeModel } from './DiamondNodeModel';\nimport { DiagramEngine, PortModelAlignment, PortWidget } from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\n\nexport interface CustomNodeWidgetProps {\n  node: DiamondNodeModel;\n  engine: DiagramEngine;\n  size?: number;\n}\n\nconst styles = {\n  tableHeader: {\n    color: 'white',\n    border: ' 0 solid #e2e8f0',\n    fontWeight: 400,\n    fontSize: '20px',\n    padding: '5px 20px',\n    background: '#316896',\n    marginBottom: '-2px',\n  },\n  rightPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '380px',\n  },\n\n  leftPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '0',\n  },\n  tableRow: {\n    fontWeight: 700,\n    fontSize: '20px',\n  },\n};\nexport const Port = styled.div`\n  width: '100%';\n  height: 20px;\n  background: #f6f6f6;\n  cursor: pointer;\n  margin-top: 5px;\n\n  &:hover {\n    background: #deecf3;\n  }\n`;\nexport class CustomNodeWidget extends React.Component<CustomNodeWidgetProps> {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div style={{ minWidth: this.props.size * 2, minHeight: this.props.size,width:'auto' }}>\n        <div style={styles.tableHeader}>\n          <p>Test</p>\n        </div>\n        <div style={styles.tableRow}>\n          <PortWidget\n            port={this.props.node.getPort(PortModelAlignment.LEFT)}\n            engine={this.props.engine}\n            style={styles.leftPort}\n          >\n            <Port />\n          </PortWidget>\n          <PortWidget\n            port={this.props.node.getPort(PortModelAlignment.RIGHT)}\n            engine={this.props.engine}\n            style={styles.rightPort}\n          >\n            <Port />\n          </PortWidget>\n          <p>Student</p>\n          <p style={{ color: '#dbdd4d' }}>String</p>\n          <p>PK</p>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}