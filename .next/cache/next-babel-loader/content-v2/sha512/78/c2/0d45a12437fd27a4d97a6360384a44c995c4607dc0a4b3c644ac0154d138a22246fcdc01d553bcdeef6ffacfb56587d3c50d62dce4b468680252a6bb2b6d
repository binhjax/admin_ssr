{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _taggedTemplateLiteral from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/tuanquang/admin_ssr/src/components/Test/CustomNodeWidget.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: '100%';\\n  height: 20px;\\n  background: #f6f6f6;\\n  cursor: pointer;\\n  margin-top: 5px;\\n\\n  &:hover {\\n    background: #deecf3;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport { PortModelAlignment, PortWidget } from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\nvar styles = {\n  cardHeader: {\n    color: 'white',\n    border: ' 0 solid #e2e8f0',\n    fontWeight: 400,\n    fontSize: '20px',\n    padding: '5px 20px',\n    height: '40px',\n    background: '#316896',\n    marginBottom: '-2px'\n  },\n  rightPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '380px'\n  },\n  leftPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '0'\n  }\n};\nexport var Port = styled.div(_templateObject());\n_c = Port;\nexport var CustomNodeWidget = /*#__PURE__*/function (_React$Component) {\n  _inherits(CustomNodeWidget, _React$Component);\n\n  var _super = _createSuper(CustomNodeWidget);\n\n  function CustomNodeWidget(props) {\n    _classCallCheck(this, CustomNodeWidget);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(CustomNodeWidget, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          minWidth: this.props.size * 2,\n          minHeight: this.props.size\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.cardHeader,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: 'bold',\n              fontSize: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(PortWidget, {\n              port: this.props.node.getPort(PortModelAlignment.LEFT),\n              engine: this.props.engine,\n              style: styles.leftPort,\n              children: /*#__PURE__*/_jsxDEV(Port, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 8\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(PortWidget, {\n              port: this.props.node.getPort(PortModelAlignment.RIGHT),\n              engine: this.props.engine,\n              style: styles.rightPort,\n              children: /*#__PURE__*/_jsxDEV(Port, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 8\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: '#dbdd4d'\n              },\n              children: \"String\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"PK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 4\n      }, this);\n    }\n  }]);\n\n  return CustomNodeWidget;\n}(React.Component);\n\nvar _c;\n\n$RefreshReg$(_c, \"Port\");","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Test/CustomNodeWidget.tsx"],"names":["React","PortModelAlignment","PortWidget","styled","styles","cardHeader","color","border","fontWeight","fontSize","padding","height","background","marginBottom","rightPort","width","position","left","leftPort","Port","div","CustomNodeWidget","props","minWidth","size","minHeight","node","getPort","LEFT","engine","RIGHT","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAAwBC,kBAAxB,EAA4CC,UAA5C,QAA8D,8BAA9D;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAQA,IAAMC,MAAM,GAAG;AACdC,EAAAA,UAAU,EAAE;AACXC,IAAAA,KAAK,EAAE,OADI;AAEXC,IAAAA,MAAM,EAAE,kBAFG;AAGXC,IAAAA,UAAU,EAAE,GAHD;AAIXC,IAAAA,QAAQ,EAAE,MAJC;AAKXC,IAAAA,OAAO,EAAE,UALE;AAMXC,IAAAA,MAAM,EAAE,MANG;AAOXC,IAAAA,UAAU,EAAE,SAPD;AAQXC,IAAAA,YAAY,EAAE;AARH,GADE;AAWdC,EAAAA,SAAS,EAAE;AACVC,IAAAA,KAAK,EAAE,MADG;AAEVJ,IAAAA,MAAM,EAAE,MAFE;AAGVK,IAAAA,QAAQ,EAAE,UAHA;AAIVC,IAAAA,IAAI,EAAE;AAJI,GAXG;AAkBZC,EAAAA,QAAQ,EAAE;AACXH,IAAAA,KAAK,EAAE,MADI;AAEXJ,IAAAA,MAAM,EAAE,MAFG;AAGXK,IAAAA,QAAQ,EAAE,UAHC;AAIXC,IAAAA,IAAI,EAAE;AAJK;AAlBE,CAAf;AAyBA,OAAO,IAAME,IAAI,GAAGhB,MAAM,CAACiB,GAAV,mBAAV;KAAMD,I;AAWb,WAAaE,gBAAb;AAAA;;AAAA;;AACC,4BAAYC,KAAZ,EAAkB;AAAA;;AAAA,6BACXA,KADW;AAGjB;;AAJF;AAAA;AAAA,6BAKU;AACR,0BACC;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,IAAX,GAAgB,CAA3B;AAA8BC,UAAAA,SAAS,EAAC,KAAKH,KAAL,CAAWE;AAAnD,SAAZ;AAAA,+BACC;AAAK,UAAA,KAAK,EAAEpB,MAAM,CAACC,UAAnB;AAAA,kCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AACC,YAAA,KAAK,EAAE;AACPG,cAAAA,UAAU,EAAE,MADL;AAEPC,cAAAA,QAAQ,EAAE;AAFH,aADR;AAAA,oCAMC,QAAC,UAAD;AAAY,cAAA,IAAI,EAAE,KAAKa,KAAL,CAAWI,IAAX,CAAgBC,OAAhB,CAAwB1B,kBAAkB,CAAC2B,IAA3C,CAAlB;AAAoE,cAAA,MAAM,EAAE,KAAKN,KAAL,CAAWO,MAAvF;AAA+F,cAAA,KAAK,EAAEzB,MAAM,CAACc,QAA7G;AAAA,qCACC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,oBAND,eASC,QAAC,UAAD;AAAY,cAAA,IAAI,EAAE,KAAKI,KAAL,CAAWI,IAAX,CAAgBC,OAAhB,CAAwB1B,kBAAkB,CAAC6B,KAA3C,CAAlB;AAAqE,cAAA,MAAM,EAAE,KAAKR,KAAL,CAAWO,MAAxF;AAAgG,cAAA,KAAK,EAAEzB,MAAM,CAACU,SAA9G;AAAA,qCACC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,oBATD,eAYC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZD,eAaC;AAAG,cAAA,KAAK,EAAE;AAAER,gBAAAA,KAAK,EAAE;AAAT,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbD,eAcC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD;AAuBA;AA7BF;;AAAA;AAAA,EAAsCN,KAAK,CAAC+B,SAA5C","sourcesContent":["import * as React from 'react';\nimport { DiamondNodeModel } from './DiamondNodeModel';\nimport { DiagramEngine, PortModelAlignment, PortWidget } from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\n\nexport interface CustomNodeWidgetProps {\n\tnode: DiamondNodeModel;\n\tengine: DiagramEngine;\n\tsize?: number;\n}\n\nconst styles = {\n\tcardHeader: {\n\t\tcolor: 'white',\n\t\tborder: ' 0 solid #e2e8f0',\n\t\tfontWeight: 400,\n\t\tfontSize: '20px',\n\t\tpadding: '5px 20px',\n\t\theight: '40px',\n\t\tbackground: '#316896',\n\t\tmarginBottom: '-2px',\n\t},\n\trightPort: {\n\t\twidth: '20px',\n\t\theight: '20px',\n\t\tposition: 'absolute',\n\t\tleft: '380px',\n\t  },\n\t  \n\t  leftPort: {\n\t\twidth: '20px',\n\t\theight: '20px',\n\t\tposition: 'absolute',\n\t\tleft: '0',\n\t  },\n}\nexport const Port = styled.div`\n  width: '100%';\n  height: 20px;\n  background: #f6f6f6;\n  cursor: pointer;\n  margin-top: 5px;\n\n  &:hover {\n    background: #deecf3;\n  }\n`;\nexport class CustomNodeWidget extends React.Component<CustomNodeWidgetProps> {\n\tconstructor(props){\n\t\tsuper(props);\n\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div style={{minWidth: this.props.size*2, minHeight:this.props.size}}>\n\t\t\t\t<div style={styles.cardHeader} >\n\t\t\t\t\t<p>Test</p>\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\tfontWeight: 'bold',\n\t\t\t\t\t\tfontSize: '20px',\n\t\t\t\t\t\t}}\n              \t\t>\n\t\t\t\t\t\t<PortWidget port={this.props.node.getPort(PortModelAlignment.LEFT)} engine={this.props.engine} style={styles.leftPort}>\n\t\t\t\t\t\t\t<Port />\n\t\t\t\t\t\t</PortWidget>\n\t\t\t\t\t\t<PortWidget port={this.props.node.getPort(PortModelAlignment.RIGHT)} engine={this.props.engine} style={styles.rightPort}>\n\t\t\t\t\t\t\t<Port />\n\t\t\t\t\t\t</PortWidget>\n\t\t\t\t\t\t<p>Student</p>\n\t\t\t\t\t\t<p style={{ color: '#dbdd4d' }}>String</p>\n\t\t\t\t\t\t<p>PK</p>\n              \t\t</div>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}