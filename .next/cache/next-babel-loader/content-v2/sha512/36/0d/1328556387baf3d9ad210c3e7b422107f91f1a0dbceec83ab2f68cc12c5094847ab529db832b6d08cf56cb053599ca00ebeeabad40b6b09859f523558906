{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { DefaultLinkModel } from '@projectstorm/react-diagrams-defaults';\nimport { RightAngleLinkFactory } from './RightAngleLinkFactory';\nexport class RightAngleLinkModel extends DefaultLinkModel {\n  constructor(options = {}) {\n    super(_objectSpread({\n      type: RightAngleLinkFactory.NAME\n    }, options));\n\n    _defineProperty(this, \"lastHoverIndexOfPath\", void 0);\n\n    _defineProperty(this, \"_lastPathXdirection\", void 0);\n\n    _defineProperty(this, \"_firstPathXdirection\", void 0);\n\n    this.lastHoverIndexOfPath = 0;\n    this._lastPathXdirection = false;\n    this._firstPathXdirection = false;\n  }\n\n  setFirstAndLastPathsDirection() {\n    let points = this.getPoints();\n\n    for (let i = 1; i < points.length; i += points.length - 2) {\n      let dx = Math.abs(points[i].getX() - points[i - 1].getX());\n      let dy = Math.abs(points[i].getY() - points[i - 1].getY());\n\n      if (i - 1 === 0) {\n        this._firstPathXdirection = dx > dy;\n      } else {\n        this._lastPathXdirection = dx > dy;\n      }\n    }\n  } // @ts-ignore\n\n\n  addPoint(pointModel, index = 1) {\n    // @ts-ignore\n    super.addPoint(pointModel, index);\n    this.setFirstAndLastPathsDirection();\n    return pointModel;\n  }\n\n  deserialize(event) {\n    super.deserialize(event);\n    this.setFirstAndLastPathsDirection();\n  }\n\n  setManuallyFirstAndLastPathsDirection(first, last) {\n    this._firstPathXdirection = first;\n    this._lastPathXdirection = last;\n  }\n\n  getLastPathXdirection() {\n    return this._lastPathXdirection;\n  }\n\n  getFirstPathXdirection() {\n    return this._firstPathXdirection;\n  }\n\n  setWidth(width) {\n    this.options.width = width;\n    this.fireEvent({\n      width\n    }, 'widthChanged');\n  }\n\n  setColor(color) {\n    this.options.color = color;\n    this.fireEvent({\n      color\n    }, 'colorChanged');\n  }\n\n}","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Test/CustomLinkModel.ts"],"names":["DefaultLinkModel","RightAngleLinkFactory","RightAngleLinkModel","constructor","options","type","NAME","lastHoverIndexOfPath","_lastPathXdirection","_firstPathXdirection","setFirstAndLastPathsDirection","points","getPoints","i","length","dx","Math","abs","getX","dy","getY","addPoint","pointModel","index","deserialize","event","setManuallyFirstAndLastPathsDirection","first","last","getLastPathXdirection","getFirstPathXdirection","setWidth","width","fireEvent","setColor","color"],"mappings":";;;;;;AAAA,SAASA,gBAAT,QAA0D,uCAA1D;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AAIA,OAAO,MAAMC,mBAAN,SAAkCF,gBAAlC,CAAmD;AAIzDG,EAAAA,WAAW,CAACC,OAAgC,GAAG,EAApC,EAAwC;AAClD;AACCC,MAAAA,IAAI,EAAEJ,qBAAqB,CAACK;AAD7B,OAEIF,OAFJ;;AADkD;;AAAA;;AAAA;;AAKlD,SAAKG,oBAAL,GAA4B,CAA5B;AACA,SAAKC,mBAAL,GAA2B,KAA3B;AACA,SAAKC,oBAAL,GAA4B,KAA5B;AACA;;AAEDC,EAAAA,6BAA6B,GAAG;AAC/B,QAAIC,MAAM,GAAG,KAAKC,SAAL,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAA3B,EAAmCD,CAAC,IAAIF,MAAM,CAACG,MAAP,GAAgB,CAAxD,EAA2D;AAC1D,UAAIC,EAAE,GAAGC,IAAI,CAACC,GAAL,CAASN,MAAM,CAACE,CAAD,CAAN,CAAUK,IAAV,KAAmBP,MAAM,CAACE,CAAC,GAAG,CAAL,CAAN,CAAcK,IAAd,EAA5B,CAAT;AACA,UAAIC,EAAE,GAAGH,IAAI,CAACC,GAAL,CAASN,MAAM,CAACE,CAAD,CAAN,CAAUO,IAAV,KAAmBT,MAAM,CAACE,CAAC,GAAG,CAAL,CAAN,CAAcO,IAAd,EAA5B,CAAT;;AACA,UAAIP,CAAC,GAAG,CAAJ,KAAU,CAAd,EAAiB;AAChB,aAAKJ,oBAAL,GAA4BM,EAAE,GAAGI,EAAjC;AACA,OAFD,MAEO;AACN,aAAKX,mBAAL,GAA2BO,EAAE,GAAGI,EAAhC;AACA;AACD;AACD,GAzBwD,CA2BzD;;;AACAE,EAAAA,QAAQ,CAAuBC,UAAvB,EAAsCC,KAAa,GAAG,CAAtD,EAA4D;AACnE;AACA,UAAMF,QAAN,CAAeC,UAAf,EAA2BC,KAA3B;AACA,SAAKb,6BAAL;AACA,WAAOY,UAAP;AACA;;AAEDE,EAAAA,WAAW,CAACC,KAAD,EAAgC;AAC1C,UAAMD,WAAN,CAAkBC,KAAlB;AACA,SAAKf,6BAAL;AACA;;AAEDgB,EAAAA,qCAAqC,CAACC,KAAD,EAAQC,IAAR,EAAc;AAClD,SAAKnB,oBAAL,GAA4BkB,KAA5B;AACA,SAAKnB,mBAAL,GAA2BoB,IAA3B;AACA;;AAEDC,EAAAA,qBAAqB,GAAY;AAChC,WAAO,KAAKrB,mBAAZ;AACA;;AACDsB,EAAAA,sBAAsB,GAAY;AACjC,WAAO,KAAKrB,oBAAZ;AACA;;AAEDsB,EAAAA,QAAQ,CAACC,KAAD,EAAgB;AACvB,SAAK5B,OAAL,CAAa4B,KAAb,GAAqBA,KAArB;AACA,SAAKC,SAAL,CAAe;AAAED,MAAAA;AAAF,KAAf,EAA0B,cAA1B;AACA;;AAEDE,EAAAA,QAAQ,CAACC,KAAD,EAAgB;AACvB,SAAK/B,OAAL,CAAa+B,KAAb,GAAqBA,KAArB;AACA,SAAKF,SAAL,CAAe;AAAEE,MAAAA;AAAF,KAAf,EAA0B,cAA1B;AACA;;AA5DwD","sourcesContent":["import { DefaultLinkModel, DefaultLinkModelOptions } from '@projectstorm/react-diagrams-defaults';\nimport { RightAngleLinkFactory } from './RightAngleLinkFactory';\nimport { PointModel } from '@projectstorm/react-diagrams-core';\nimport { DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport class RightAngleLinkModel extends DefaultLinkModel {\n\tlastHoverIndexOfPath: number;\n\tprivate _lastPathXdirection: boolean;\n\tprivate _firstPathXdirection: boolean;\n\tconstructor(options: DefaultLinkModelOptions = {}) {\n\t\tsuper({\n\t\t\ttype: RightAngleLinkFactory.NAME,\n\t\t\t...options\n\t\t});\n\t\tthis.lastHoverIndexOfPath = 0;\n\t\tthis._lastPathXdirection = false;\n\t\tthis._firstPathXdirection = false;\n\t}\n\n\tsetFirstAndLastPathsDirection() {\n\t\tlet points = this.getPoints();\n\t\tfor (let i = 1; i < points.length; i += points.length - 2) {\n\t\t\tlet dx = Math.abs(points[i].getX() - points[i - 1].getX());\n\t\t\tlet dy = Math.abs(points[i].getY() - points[i - 1].getY());\n\t\t\tif (i - 1 === 0) {\n\t\t\t\tthis._firstPathXdirection = dx > dy;\n\t\t\t} else {\n\t\t\t\tthis._lastPathXdirection = dx > dy;\n\t\t\t}\n\t\t}\n\t}\n\n\t// @ts-ignore\n\taddPoint<P extends PointModel>(pointModel: P, index: number = 1): P {\n\t\t// @ts-ignore\n\t\tsuper.addPoint(pointModel, index);\n\t\tthis.setFirstAndLastPathsDirection();\n\t\treturn pointModel;\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.setFirstAndLastPathsDirection();\n\t}\n\n\tsetManuallyFirstAndLastPathsDirection(first, last) {\n\t\tthis._firstPathXdirection = first;\n\t\tthis._lastPathXdirection = last;\n\t}\n\n\tgetLastPathXdirection(): boolean {\n\t\treturn this._lastPathXdirection;\n\t}\n\tgetFirstPathXdirection(): boolean {\n\t\treturn this._firstPathXdirection;\n\t}\n\n\tsetWidth(width: number) {\n\t\tthis.options.width = width;\n\t\tthis.fireEvent({ width }, 'widthChanged');\n\t}\n\n\tsetColor(color: string) {\n\t\tthis.options.color = color;\n\t\tthis.fireEvent({ color }, 'colorChanged');\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}