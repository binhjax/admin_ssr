{"ast":null,"code":"import _classCallCheck from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { DefaultLinkModel } from '@projectstorm/react-diagrams-defaults';\nimport { CustomLinkFactory } from './CustomLinkFactory';\nexport var CustomLinkModel = /*#__PURE__*/function (_DefaultLinkModel) {\n  _inherits(CustomLinkModel, _DefaultLinkModel);\n\n  var _super = _createSuper(CustomLinkModel);\n\n  function CustomLinkModel() {\n    var _this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CustomLinkModel);\n\n    _this = _super.call(this, _objectSpread(_objectSpread({\n      type: CustomLinkFactory.NAME\n    }, options), {}, {\n      width: 1\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"lastHoverIndexOfPath\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_lastPathXdirection\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_firstPathXdirection\", void 0);\n\n    _this.lastHoverIndexOfPath = 0;\n    _this._lastPathXdirection = false;\n    _this._firstPathXdirection = false;\n    return _this;\n  }\n\n  _createClass(CustomLinkModel, [{\n    key: \"setFirstAndLastPathsDirection\",\n    value: function setFirstAndLastPathsDirection() {\n      var points = this.getPoints();\n\n      for (var i = 1; i < points.length; i += points.length - 2) {\n        var dx = Math.abs(points[i].getX() - points[i - 1].getX());\n        var dy = Math.abs(points[i].getY() - points[i - 1].getY());\n\n        if (i - 1 === 0) {\n          this._firstPathXdirection = dx > dy;\n        } else {\n          this._lastPathXdirection = dx > dy;\n        }\n      }\n    } // @ts-ignore\n\n  }, {\n    key: \"addPoint\",\n    value: function addPoint(pointModel) {\n      var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      // @ts-ignore\n      _get(_getPrototypeOf(CustomLinkModel.prototype), \"addPoint\", this).call(this, pointModel, index);\n\n      this.setFirstAndLastPathsDirection();\n      return pointModel;\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(event) {\n      _get(_getPrototypeOf(CustomLinkModel.prototype), \"deserialize\", this).call(this, event);\n\n      this.setFirstAndLastPathsDirection();\n    }\n  }, {\n    key: \"setManuallyFirstAndLastPathsDirection\",\n    value: function setManuallyFirstAndLastPathsDirection(first, last) {\n      this._firstPathXdirection = first;\n      this._lastPathXdirection = last;\n    }\n  }, {\n    key: \"getLastPathXdirection\",\n    value: function getLastPathXdirection() {\n      return this._lastPathXdirection;\n    }\n  }, {\n    key: \"getFirstPathXdirection\",\n    value: function getFirstPathXdirection() {\n      return this._firstPathXdirection;\n    }\n  }, {\n    key: \"setWidth\",\n    value: function setWidth(width) {\n      this.options.width = width;\n      this.fireEvent({\n        width: width\n      }, 'widthChanged');\n    }\n  }, {\n    key: \"setColor\",\n    value: function setColor(color) {\n      this.options.color = color;\n      this.fireEvent({\n        color: color\n      }, 'colorChanged');\n    }\n  }]);\n\n  return CustomLinkModel;\n}(DefaultLinkModel);","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Test/CustomLinkModel.ts"],"names":["DefaultLinkModel","CustomLinkFactory","CustomLinkModel","options","type","NAME","width","lastHoverIndexOfPath","_lastPathXdirection","_firstPathXdirection","points","getPoints","i","length","dx","Math","abs","getX","dy","getY","pointModel","index","setFirstAndLastPathsDirection","event","first","last","fireEvent","color"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,gBAAT,QAA0D,uCAA1D;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAIA,WAAaC,eAAb;AAAA;;AAAA;;AAIE,6BAAmD;AAAA;;AAAA,QAAvCC,OAAuC,uEAAJ,EAAI;;AAAA;;AACjD;AACEC,MAAAA,IAAI,EAAEH,iBAAiB,CAACI;AAD1B,OAEKF,OAFL;AAGEG,MAAAA,KAAK,EAAC;AAHR;;AADiD;;AAAA;;AAAA;;AAMjD,UAAKC,oBAAL,GAA4B,CAA5B;AACA,UAAKC,mBAAL,GAA2B,KAA3B;AACA,UAAKC,oBAAL,GAA4B,KAA5B;AARiD;AASlD;;AAbH;AAAA;AAAA,oDAekC;AAC9B,UAAIC,MAAM,GAAG,KAAKC,SAAL,EAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAA3B,EAAmCD,CAAC,IAAIF,MAAM,CAACG,MAAP,GAAgB,CAAxD,EAA2D;AACzD,YAAIC,EAAE,GAAGC,IAAI,CAACC,GAAL,CAASN,MAAM,CAACE,CAAD,CAAN,CAAUK,IAAV,KAAmBP,MAAM,CAACE,CAAC,GAAG,CAAL,CAAN,CAAcK,IAAd,EAA5B,CAAT;AACA,YAAIC,EAAE,GAAGH,IAAI,CAACC,GAAL,CAASN,MAAM,CAACE,CAAD,CAAN,CAAUO,IAAV,KAAmBT,MAAM,CAACE,CAAC,GAAG,CAAL,CAAN,CAAcO,IAAd,EAA5B,CAAT;;AACA,YAAIP,CAAC,GAAG,CAAJ,KAAU,CAAd,EAAiB;AACf,eAAKH,oBAAL,GAA4BK,EAAE,GAAGI,EAAjC;AACD,SAFD,MAEO;AACL,eAAKV,mBAAL,GAA2BM,EAAE,GAAGI,EAAhC;AACD;AACF;AACF,KA1BH,CA4BE;;AA5BF;AAAA;AAAA,6BA6BiCE,UA7BjC,EA6BsE;AAAA,UAAtBC,KAAsB,uEAAN,CAAM;;AAClE;AACA,oFAAeD,UAAf,EAA2BC,KAA3B;;AACA,WAAKC,6BAAL;AACA,aAAOF,UAAP;AACD;AAlCH;AAAA;AAAA,gCAoCcG,KApCd,EAoC6C;AACzC,uFAAkBA,KAAlB;;AACA,WAAKD,6BAAL;AACD;AAvCH;AAAA;AAAA,0DAyCwCE,KAzCxC,EAyC+CC,IAzC/C,EAyCqD;AACjD,WAAKhB,oBAAL,GAA4Be,KAA5B;AACA,WAAKhB,mBAAL,GAA2BiB,IAA3B;AACD;AA5CH;AAAA;AAAA,4CA8CmC;AAC/B,aAAO,KAAKjB,mBAAZ;AACD;AAhDH;AAAA;AAAA,6CAiDoC;AAChC,aAAO,KAAKC,oBAAZ;AACD;AAnDH;AAAA;AAAA,6BAqDWH,KArDX,EAqD0B;AACtB,WAAKH,OAAL,CAAaG,KAAb,GAAqBA,KAArB;AACA,WAAKoB,SAAL,CAAe;AAAEpB,QAAAA,KAAK,EAALA;AAAF,OAAf,EAA0B,cAA1B;AACD;AAxDH;AAAA;AAAA,6BA0DWqB,KA1DX,EA0D0B;AACtB,WAAKxB,OAAL,CAAawB,KAAb,GAAqBA,KAArB;AACA,WAAKD,SAAL,CAAe;AAAEC,QAAAA,KAAK,EAALA;AAAF,OAAf,EAA0B,cAA1B;AACD;AA7DH;;AAAA;AAAA,EAAqC3B,gBAArC","sourcesContent":["import { DefaultLinkModel, DefaultLinkModelOptions } from '@projectstorm/react-diagrams-defaults';\nimport { CustomLinkFactory } from './CustomLinkFactory';\nimport { PointModel } from '@projectstorm/react-diagrams-core';\nimport { DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport class CustomLinkModel extends DefaultLinkModel {\n  lastHoverIndexOfPath: number;\n  private _lastPathXdirection: boolean;\n  private _firstPathXdirection: boolean;\n  constructor(options: DefaultLinkModelOptions = {}) {\n    super({\n      type: CustomLinkFactory.NAME,\n      ...options,\n      width:1\n    });\n    this.lastHoverIndexOfPath = 0;\n    this._lastPathXdirection = false;\n    this._firstPathXdirection = false;\n  }\n\n  setFirstAndLastPathsDirection() {\n    let points = this.getPoints();\n    for (let i = 1; i < points.length; i += points.length - 2) {\n      let dx = Math.abs(points[i].getX() - points[i - 1].getX());\n      let dy = Math.abs(points[i].getY() - points[i - 1].getY());\n      if (i - 1 === 0) {\n        this._firstPathXdirection = dx > dy;\n      } else {\n        this._lastPathXdirection = dx > dy;\n      }\n    }\n  }\n\n  // @ts-ignore\n  addPoint<P extends PointModel>(pointModel: P, index: number = 1): P {\n    // @ts-ignore\n    super.addPoint(pointModel, index);\n    this.setFirstAndLastPathsDirection();\n    return pointModel;\n  }\n\n  deserialize(event: DeserializeEvent<this>) {\n    super.deserialize(event);\n    this.setFirstAndLastPathsDirection();\n  }\n\n  setManuallyFirstAndLastPathsDirection(first, last) {\n    this._firstPathXdirection = first;\n    this._lastPathXdirection = last;\n  }\n\n  getLastPathXdirection(): boolean {\n    return this._lastPathXdirection;\n  }\n  getFirstPathXdirection(): boolean {\n    return this._firstPathXdirection;\n  }\n\n  setWidth(width: number) {\n    this.options.width = width;\n    this.fireEvent({ width }, 'widthChanged');\n  }\n\n  setColor(color: string) {\n    this.options.color = color;\n    this.fireEvent({ color }, 'colorChanged');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}