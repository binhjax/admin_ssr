{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/input-number/style\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport \"antd/lib/tooltip/style\";\nimport _Tooltip from \"antd/lib/tooltip\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/tree-select/style\";\nimport _TreeSelect from \"antd/lib/tree-select\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\n\nvar _jsxFileName = \"/Users/nguyenthanhbinh/Work/vnshop/admin/src/pages/menu/MenuCard.js\",\n    _dec,\n    _class,\n    _temp;\n\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react'; // import { connect } from '@/pages/dashboard/node_modules/dva';\n\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport { Form } from '@ant-design/compatible';\nimport '@ant-design/compatible/assets/index.css';\nimport MenuAction from './MenuAction';\nimport WithDva from '../../utils/store'; // @connect(({ menu }) => ({\n//   menu,\n// }))\n\nlet MenuCard = (_dec = Form.create(), _dec(_class = (_temp = class MenuCard extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onOKClick\", () => {\n      const {\n        form,\n        onSubmit\n      } = this.props;\n      form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          const formData = _objectSpread({}, values);\n\n          formData.show_status = parseInt(formData.show_status, 10);\n          formData.status = parseInt(formData.status, 10);\n          formData.sequence = parseInt(formData.sequence, 10);\n          onSubmit(formData);\n        }\n      });\n    });\n\n    _defineProperty(this, \"dispatch\", action => {\n      const {\n        dispatch\n      } = this.props;\n      dispatch(action);\n    });\n\n    _defineProperty(this, \"toTreeSelect\", data => {\n      if (!data) {\n        return [];\n      }\n\n      const newData = [];\n\n      for (let i = 0; i < data.length; i += 1) {\n        const item = _objectSpread(_objectSpread({}, data[i]), {}, {\n          title: data[i].name,\n          value: data[i].id\n        });\n\n        if (item.children && item.children.length > 0) {\n          item.children = this.toTreeSelect(item.children);\n        }\n\n        newData.push(item);\n      }\n\n      return newData;\n    });\n  }\n\n  render() {\n    const {\n      menu: {\n        formVisible,\n        formTitle,\n        formData,\n        submitting,\n        treeData\n      },\n      form: {\n        getFieldDecorator\n      },\n      onCancel\n    } = this.props;\n    const formItemLayout = {\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 18\n      }\n    };\n    return __jsx(_Modal, {\n      title: formTitle,\n      width: 1000,\n      visible: formVisible,\n      maskClosable: false,\n      confirmLoading: submitting,\n      destroyOnClose: true,\n      onOk: this.onOKClick,\n      onCancel: onCancel,\n      style: {\n        top: 20\n      },\n      bodyStyle: {\n        maxHeight: 'calc( 100vh - 158px )',\n        overflowY: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, __jsx(_Card, {\n      bordered: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, __jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, __jsx(_Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, __jsx(_Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"\\u83DC\\u5355\\u540D\\u79F0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), getFieldDecorator('name', {\n      initialValue: formData.name,\n      rules: [{\n        required: true,\n        message: '请输入菜单名称'\n      }]\n    })(__jsx(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 22\n      }\n    })))), __jsx(_Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"\\u4E0A\\u7EA7\\u83DC\\u5355\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }), getFieldDecorator('parent_id', {\n      initialValue: formData.parent_id\n    })(__jsx(_TreeSelect, {\n      showSearch: true,\n      treeNodeFilterProp: \"title\",\n      style: {\n        width: '100%'\n      },\n      dropdownStyle: {\n        maxHeight: 400,\n        overflow: 'auto'\n      },\n      treeData: this.toTreeSelect(treeData),\n      placeholder: \"\\u8BF7\\u9009\\u62E9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }))))), __jsx(_Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, __jsx(_Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"\\u8BBF\\u95EE\\u8DEF\\u5F84\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }), getFieldDecorator('router', {\n      initialValue: formData.router\n    })(__jsx(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 22\n      }\n    })))), __jsx(_Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"\\u83DC\\u5355\\u56FE\\u6807\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }), __jsx(_Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    }, __jsx(_Col, {\n      span: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, getFieldDecorator('icon', {\n      initialValue: formData.icon\n    })(__jsx(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 26\n      }\n    }))), __jsx(_Col, {\n      span: 4,\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, __jsx(_Tooltip, {\n      title: \"\\u56FE\\u6807\\u4EC5\\u652F\\u6301\\u5B98\\u65B9Icon\\u56FE\\u6807(V3\\u7248\\u672C)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 23\n      }\n    }, __jsx(QuestionCircleOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }))))))), __jsx(_Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, __jsx(_Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"\\u662F\\u5426\\u663E\\u793A\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }), getFieldDecorator('show_status', {\n      initialValue: formData.show_status ? formData.show_status.toString() : '1'\n    })(__jsx(_Radio.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, __jsx(_Radio, {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 23\n      }\n    }, \"\\u663E\\u793A\"), __jsx(_Radio, {\n      value: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 23\n      }\n    }, \"\\u9690\\u85CF\"))))), __jsx(_Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"\\u72B6\\u6001\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }), getFieldDecorator('status', {\n      initialValue: formData.status ? formData.status.toString() : '1'\n    })(__jsx(_Radio.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, __jsx(_Radio, {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 23\n      }\n    }, \"\\u542F\\u7528\"), __jsx(_Radio, {\n      value: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 23\n      }\n    }, \"\\u7981\\u7528\")))))), __jsx(_Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, __jsx(_Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"\\u6392\\u5E8F\\u503C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }), getFieldDecorator('sequence', {\n      initialValue: formData.sequence ? formData.sequence.toString() : '1000000',\n      rules: [{\n        required: true,\n        message: '请输入排序值'\n      }]\n    })(__jsx(_InputNumber, {\n      min: 1,\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 22\n      }\n    })))), __jsx(_Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"\\u5907\\u6CE8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }), getFieldDecorator('memo', {\n      initialValue: formData.memo\n    })(__jsx(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 22\n      }\n    }))))), __jsx(_Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, __jsx(_Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }\n    }, __jsx(_Card, {\n      title: \"\\u52A8\\u4F5C(\\u6309\\u94AE)\\u7BA1\\u7406\",\n      bordered: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, getFieldDecorator('actions', {\n      initialValue: formData.actions\n    })(__jsx(MenuAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 22\n      }\n    }))))))));\n  }\n\n}, _temp)) || _class);\nexport default WithDva(({\n  menu\n}) => ({\n  menu\n}))(MenuCard); // export default MenuCard;","map":{"version":3,"sources":["/Users/nguyenthanhbinh/Work/vnshop/admin/src/pages/menu/MenuCard.js"],"names":["React","PureComponent","QuestionCircleOutlined","Form","MenuAction","WithDva","MenuCard","create","form","onSubmit","props","validateFieldsAndScroll","err","values","formData","show_status","parseInt","status","sequence","action","dispatch","data","newData","i","length","item","title","name","value","id","children","toTreeSelect","push","render","menu","formVisible","formTitle","submitting","treeData","getFieldDecorator","onCancel","formItemLayout","labelCol","span","wrapperCol","onOKClick","top","maxHeight","overflowY","initialValue","rules","required","message","parent_id","width","overflow","router","icon","textAlign","toString","memo","actions"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\n// import { connect } from '@/pages/dashboard/node_modules/dva';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { Form } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\nimport { Input, Card, Radio, Modal, TreeSelect, Tooltip, InputNumber, Row, Col } from 'antd';\r\nimport MenuAction from './MenuAction';\r\n\r\nimport WithDva from '../../utils/store';\r\n\r\n\r\n// @connect(({ menu }) => ({\r\n//   menu,\r\n// }))\r\n@Form.create()\r\nclass MenuCard extends PureComponent {\r\n  onOKClick = () => {\r\n    const { form, onSubmit } = this.props;\r\n    form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        const formData = { ...values };\r\n        formData.show_status = parseInt(formData.show_status, 10);\r\n        formData.status = parseInt(formData.status, 10);\r\n        formData.sequence = parseInt(formData.sequence, 10);\r\n        onSubmit(formData);\r\n      }\r\n    });\r\n  };\r\n\r\n  dispatch = action => {\r\n    const { dispatch } = this.props;\r\n    dispatch(action);\r\n  };\r\n\r\n  toTreeSelect = data => {\r\n    if (!data) {\r\n      return [];\r\n    }\r\n    const newData = [];\r\n    for (let i = 0; i < data.length; i += 1) {\r\n      const item = { ...data[i], title: data[i].name, value: data[i].id };\r\n      if (item.children && item.children.length > 0) {\r\n        item.children = this.toTreeSelect(item.children);\r\n      }\r\n      newData.push(item);\r\n    }\r\n    return newData;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      menu: { formVisible, formTitle, formData, submitting, treeData },\r\n      form: { getFieldDecorator },\r\n      onCancel,\r\n    } = this.props;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        span: 6,\r\n      },\r\n      wrapperCol: {\r\n        span: 18,\r\n      },\r\n    };\r\n\r\n    return (\r\n      <Modal\r\n        title={formTitle}\r\n        width={1000}\r\n        visible={formVisible}\r\n        maskClosable={false}\r\n        confirmLoading={submitting}\r\n        destroyOnClose\r\n        onOk={this.onOKClick}\r\n        onCancel={onCancel}\r\n        style={{ top: 20 }}\r\n        bodyStyle={{ maxHeight: 'calc( 100vh - 158px )', overflowY: 'auto' }}\r\n      >\r\n        <Card bordered={false}>\r\n          <Form>\r\n            <Row>\r\n              <Col span={12}>\r\n                <Form.Item {...formItemLayout} label=\"菜单名称\">\r\n                  {getFieldDecorator('name', {\r\n                    initialValue: formData.name,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: '请输入菜单名称',\r\n                      },\r\n                    ],\r\n                  })(<Input placeholder=\"请输入\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item {...formItemLayout} label=\"上级菜单\">\r\n                  {getFieldDecorator('parent_id', {\r\n                    initialValue: formData.parent_id,\r\n                  })(\r\n                    <TreeSelect\r\n                      showSearch\r\n                      treeNodeFilterProp=\"title\"\r\n                      style={{ width: '100%' }}\r\n                      dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\r\n                      treeData={this.toTreeSelect(treeData)}\r\n                      placeholder=\"请选择\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={12}>\r\n                <Form.Item {...formItemLayout} label=\"访问路径\">\r\n                  {getFieldDecorator('router', {\r\n                    initialValue: formData.router,\r\n                  })(<Input placeholder=\"请输入\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item {...formItemLayout} label=\"菜单图标\">\r\n                  <Row>\r\n                    <Col span={20}>\r\n                      {getFieldDecorator('icon', {\r\n                        initialValue: formData.icon,\r\n                      })(<Input placeholder=\"请输入\" />)}\r\n                    </Col>\r\n                    <Col span={4} style={{ textAlign: 'center' }}>\r\n                      <Tooltip title=\"图标仅支持官方Icon图标(V3版本)\">\r\n                        <QuestionCircleOutlined />\r\n                      </Tooltip>\r\n                    </Col>\r\n                  </Row>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={12}>\r\n                <Form.Item {...formItemLayout} label=\"是否显示\">\r\n                  {getFieldDecorator('show_status', {\r\n                    initialValue: formData.show_status ? formData.show_status.toString() : '1',\r\n                  })(\r\n                    <Radio.Group>\r\n                      <Radio value=\"1\">显示</Radio>\r\n                      <Radio value=\"2\">隐藏</Radio>\r\n                    </Radio.Group>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item {...formItemLayout} label=\"状态\">\r\n                  {getFieldDecorator('status', {\r\n                    initialValue: formData.status ? formData.status.toString() : '1',\r\n                  })(\r\n                    <Radio.Group>\r\n                      <Radio value=\"1\">启用</Radio>\r\n                      <Radio value=\"2\">禁用</Radio>\r\n                    </Radio.Group>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={12}>\r\n                <Form.Item {...formItemLayout} label=\"排序值\">\r\n                  {getFieldDecorator('sequence', {\r\n                    initialValue: formData.sequence ? formData.sequence.toString() : '1000000',\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: '请输入排序值',\r\n                      },\r\n                    ],\r\n                  })(<InputNumber min={1} style={{ width: '100%' }} />)}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item {...formItemLayout} label=\"备注\">\r\n                  {getFieldDecorator('memo', {\r\n                    initialValue: formData.memo,\r\n                  })(<Input placeholder=\"请输入\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Card title=\"动作(按钮)管理\" bordered={false}>\r\n                  {getFieldDecorator('actions', {\r\n                    initialValue: formData.actions,\r\n                  })(<MenuAction />)}\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Card>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\nexport default WithDva(({ menu }) => ({\r\n  menu,\r\n}))(MenuCard);\r\n// export default MenuCard;\r\n"]},"metadata":{},"sourceType":"module"}