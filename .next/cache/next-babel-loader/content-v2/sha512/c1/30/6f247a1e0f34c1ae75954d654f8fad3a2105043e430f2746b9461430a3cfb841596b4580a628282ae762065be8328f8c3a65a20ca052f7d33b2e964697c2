{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\n\nvar _jsxFileName = \"/Volumes/ExternalData/Work/vnshop/admin/src/components/User/UserCard.js\",\n    _dec,\n    _class,\n    _temp;\n\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { Form } from '@ant-design/compatible';\nimport '@ant-design/compatible/assets/index.css';\nimport { md5Hash } from '../../utils/utils';\nimport RoleSelect from './RoleSelect';\nimport WithDva from '../../utils/store'; // @connect(state => ({\n//   user: state.user,\n// }))\n\nlet UserCard = (_dec = Form.create(), _dec(_class = (_temp = class UserCard extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onOKClick\", () => {\n      const {\n        form,\n        onSubmit\n      } = this.props;\n      form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          const formData = _objectSpread({}, values);\n\n          formData.status = parseInt(formData.status, 10);\n\n          if (formData.password && formData.password !== '') {\n            formData.password = md5Hash(formData.password);\n          }\n\n          onSubmit(formData);\n        }\n      });\n    });\n\n    _defineProperty(this, \"dispatch\", action => {\n      const {\n        dispatch\n      } = this.props;\n      dispatch(action);\n    });\n  }\n\n  render() {\n    const {\n      onCancel,\n      user: {\n        formType,\n        formTitle,\n        formVisible,\n        formData,\n        submitting\n      },\n      form: {\n        getFieldDecorator\n      }\n    } = this.props;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 6\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    return __jsx(_Modal, {\n      title: formTitle,\n      width: 600,\n      visible: formVisible,\n      maskClosable: false,\n      confirmLoading: submitting,\n      destroyOnClose: true,\n      onOk: this.onOKClick,\n      onCancel: onCancel,\n      style: {\n        top: 20\n      },\n      bodyStyle: {\n        maxHeight: 'calc( 100vh - 158px )',\n        overflowY: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, __jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }), getFieldDecorator('user_name', {\n      initialValue: formData.user_name,\n      rules: [{\n        required: true,\n        message: 'please enter username'\n      }]\n    })(__jsx(_Input, {\n      placeholder: \"please enter username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 16\n      }\n    }))), __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"login password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }), getFieldDecorator('password', {\n      initialValue: formData.password,\n      rules: [{\n        required: formType === 'A',\n        message: 'Please enter your password'\n      }]\n    })(__jsx(_Input, {\n      type: \"password\",\n      placeholder: formType === 'A' ? 'Please enter your password' : 'Leave blank to not modify the login password',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }))), __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"Actual Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }), getFieldDecorator('real_name', {\n      initialValue: formData.real_name,\n      rules: [{\n        required: true,\n        message: 'Please enter your name'\n      }]\n    })(__jsx(_Input, {\n      placeholder: \"enter your name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 16\n      }\n    }))), __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"User Role\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }), getFieldDecorator('user_roles', {\n      initialValue: formData.user_roles,\n      rules: [{\n        required: true,\n        message: 'Please select the role'\n      }]\n    })(__jsx(RoleSelect, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 16\n      }\n    }))), __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"User Status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }), getFieldDecorator('status', {\n      initialValue: formData.status ? formData.status.toString() : '1'\n    })(__jsx(_Radio.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, __jsx(_Radio, {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, \"Normal\"), __jsx(_Radio, {\n      value: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, \"Deactivate\")))), __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"Mailbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }), getFieldDecorator('email', {\n      initialValue: formData.email\n    })(__jsx(_Input, {\n      placeholder: \"Please input your email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 16\n      }\n    }))), __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"Phone Number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }), getFieldDecorator('phone', {\n      initialValue: formData.phone\n    })(__jsx(_Input, {\n      placeholder: \"Please enter phone number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 16\n      }\n    })))));\n  }\n\n}, _temp)) || _class);\nexport default WithDva(state => ({\n  user: state.user\n}))(UserCard); // export default UserCard;","map":{"version":3,"sources":["/Volumes/ExternalData/Work/vnshop/admin/src/components/User/UserCard.js"],"names":["React","PureComponent","Form","md5Hash","RoleSelect","WithDva","UserCard","create","form","onSubmit","props","validateFieldsAndScroll","err","values","formData","status","parseInt","password","action","dispatch","render","onCancel","user","formType","formTitle","formVisible","submitting","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","onOKClick","top","maxHeight","overflowY","initialValue","user_name","rules","required","message","real_name","user_roles","toString","email","phone","state"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\n\nimport { Form } from '@ant-design/compatible';\nimport '@ant-design/compatible/assets/index.css';\nimport { Input, Modal, Radio } from 'antd';\nimport { md5Hash } from '../../utils/utils';\nimport RoleSelect from './RoleSelect';\nimport WithDva from '../../utils/store';\n\n// @connect(state => ({\n//   user: state.user,\n// }))\n@Form.create()\nclass UserCard extends PureComponent {\n  onOKClick = () => {\n    const { form, onSubmit } = this.props;\n\n    form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        const formData = { ...values };\n        formData.status = parseInt(formData.status, 10);\n        if (formData.password && formData.password !== '') {\n          formData.password = md5Hash(formData.password);\n        }\n        onSubmit(formData);\n      }\n    });\n  };\n\n  dispatch = action => {\n    const { dispatch } = this.props;\n    dispatch(action);\n  };\n\n  render() {\n    const {\n      onCancel,\n      user: { formType, formTitle, formVisible, formData, submitting },\n      form: { getFieldDecorator },\n    } = this.props;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n\n    return (\n      <Modal\n        title={formTitle}\n        width={600}\n        visible={formVisible}\n        maskClosable={false}\n        confirmLoading={submitting}\n        destroyOnClose\n        onOk={this.onOKClick}\n        onCancel={onCancel}\n        style={{ top: 20 }}\n        bodyStyle={{ maxHeight: 'calc( 100vh - 158px )', overflowY: 'auto' }}\n      >\n        <Form>\n          <Form.Item {...formItemLayout} label=\"Username\">\n            {getFieldDecorator('user_name', {\n              initialValue: formData.user_name,\n              rules: [\n                {\n                  required: true,\n                  message: 'please enter username',\n                },\n              ],\n            })(<Input placeholder=\"please enter username\" />)}\n          </Form.Item>\n          <Form.Item {...formItemLayout} label=\"login password\">\n            {getFieldDecorator('password', {\n              initialValue: formData.password,\n              rules: [\n                {\n                  required: formType === 'A',\n                  message: 'Please enter your password',\n                },\n              ],\n            })(\n              <Input\n                type=\"password\"\n                placeholder={\n                  formType === 'A'\n                    ? 'Please enter your password'\n                    : 'Leave blank to not modify the login password'\n                }\n              />\n            )}\n          </Form.Item>\n          <Form.Item {...formItemLayout} label=\"Actual Name\">\n            {getFieldDecorator('real_name', {\n              initialValue: formData.real_name,\n              rules: [\n                {\n                  required: true,\n                  message: 'Please enter your name',\n                },\n              ],\n            })(<Input placeholder=\"enter your name\" />)}\n          </Form.Item>\n          <Form.Item {...formItemLayout} label=\"User Role\">\n            {getFieldDecorator('user_roles', {\n              initialValue: formData.user_roles,\n              rules: [\n                {\n                  required: true,\n                  message: 'Please select the role',\n                },\n              ],\n            })(<RoleSelect />)}\n          </Form.Item>\n          <Form.Item {...formItemLayout} label=\"User Status\">\n            {getFieldDecorator('status', {\n              initialValue: formData.status ? formData.status.toString() : '1',\n            })(\n              <Radio.Group>\n                <Radio value=\"1\">Normal</Radio>\n                <Radio value=\"2\">Deactivate</Radio>\n              </Radio.Group>\n            )}\n          </Form.Item>\n          <Form.Item {...formItemLayout} label=\"Mailbox\">\n            {getFieldDecorator('email', {\n              initialValue: formData.email,\n            })(<Input placeholder=\"Please input your email\" />)}\n          </Form.Item>\n          <Form.Item {...formItemLayout} label=\"Phone Number\">\n            {getFieldDecorator('phone', {\n              initialValue: formData.phone,\n            })(<Input placeholder=\"Please enter phone number\" />)}\n          </Form.Item>\n        </Form>\n      </Modal>\n    );\n  }\n}\nexport default WithDva(state => ({\n  user: state.user,\n}))(UserCard);\n// export default UserCard;\n"]},"metadata":{},"sourceType":"module"}