{"ast":null,"code":"import \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as menuService from '@/services/menu';\nexport default {\n  namespace: 'menu',\n  state: {\n    search: {},\n    pagination: {},\n    data: {\n      list: [],\n      pagination: {}\n    },\n    submitting: false,\n    formType: '',\n    formTitle: '',\n    formID: '',\n    formVisible: false,\n    formData: {},\n    treeData: [],\n    expandedKeys: []\n  },\n  effects: {\n    *fetch({\n      search,\n      pagination\n    }, {\n      call,\n      put,\n      select\n    }) {\n      let params = {\n        parentID: ''\n      };\n\n      if (search) {\n        params = _objectSpread(_objectSpread({}, params), search);\n        yield put({\n          type: 'saveSearch',\n          payload: search\n        });\n      } else {\n        const s = yield select(state => state.menu.search);\n\n        if (s) {\n          params = _objectSpread(_objectSpread({}, params), s);\n        }\n      }\n\n      if (pagination) {\n        params = _objectSpread(_objectSpread({}, params), pagination);\n        yield put({\n          type: 'savePagination',\n          payload: pagination\n        });\n      } else {\n        const p = yield select(state => state.menu.pagination);\n\n        if (p) {\n          params = _objectSpread(_objectSpread({}, params), p);\n        }\n      }\n\n      const response = yield call(menuService.query, params);\n      yield put({\n        type: 'saveData',\n        payload: response\n      });\n    },\n\n    *loadForm({\n      payload\n    }, {\n      put,\n      select\n    }) {\n      yield put({\n        type: 'changeFormVisible',\n        payload: true\n      });\n      yield [put({\n        type: 'saveFormType',\n        payload: payload.type\n      }), put({\n        type: 'saveFormTitle',\n        payload: 'New menu'\n      }), put({\n        type: 'saveFormID',\n        payload: ''\n      }), put({\n        type: 'saveFormData',\n        payload: {}\n      }), put({\n        type: 'fetchTree'\n      })];\n\n      if (payload.type === 'E') {\n        yield [put({\n          type: 'saveFormTitle',\n          payload: 'Edit menu'\n        }), put({\n          type: 'saveFormID',\n          payload: payload.id\n        }), put({\n          type: 'fetchForm',\n          payload: {\n            id: payload.id\n          }\n        })];\n      } else {\n        const search = yield select(state => state.menu.search);\n        yield put({\n          type: 'saveFormData',\n          payload: {\n            parent_id: search.parentID ? search.parentID : ''\n          }\n        });\n      }\n    },\n\n    *fetchForm({\n      payload\n    }, {\n      call,\n      put\n    }) {\n      const response = yield call(menuService.get, payload.id);\n      yield put({\n        type: 'saveFormData',\n        payload: response\n      });\n    },\n\n    *submit({\n      payload\n    }, {\n      call,\n      put,\n      select\n    }) {\n      yield put({\n        type: 'changeSubmitting',\n        payload: true\n      });\n\n      const params = _objectSpread({}, payload);\n\n      const formType = yield select(state => state.menu.formType);\n      let success = false;\n\n      if (formType === 'E') {\n        const id = yield select(state => state.menu.formID);\n        const response = yield call(menuService.update, id, params);\n\n        if (response.status === 'OK') {\n          success = true;\n        }\n      } else {\n        const response = yield call(menuService.create, params);\n\n        if (response.id && response.id !== '') {\n          success = true;\n        }\n      }\n\n      yield put({\n        type: 'changeSubmitting',\n        payload: false\n      });\n\n      if (success) {\n        _message.success('Saved successfully');\n\n        yield put({\n          type: 'changeFormVisible',\n          payload: false\n        });\n        yield put({\n          type: 'fetchTree'\n        });\n        yield put({\n          type: 'fetch'\n        });\n      }\n    },\n\n    *del({\n      payload\n    }, {\n      call,\n      put\n    }) {\n      const response = yield call(menuService.del, payload.id);\n\n      if (response.status === 'OK') {\n        _message.success('successfully deleted');\n\n        yield put({\n          type: 'fetchTree'\n        });\n        yield put({\n          type: 'fetch'\n        });\n      }\n    },\n\n    *fetchTree({\n      payload\n    }, {\n      call,\n      put\n    }) {\n      let params = {};\n\n      if (payload) {\n        params = _objectSpread(_objectSpread({}, params), payload);\n      }\n\n      const response = yield call(menuService.queryTree, params);\n      yield put({\n        type: 'saveTreeData',\n        payload: response.list || []\n      });\n    },\n\n    *changeStatus({\n      payload\n    }, {\n      call,\n      put,\n      select\n    }) {\n      let response;\n\n      if (payload.status === 1) {\n        response = yield call(menuService.enable, payload.id);\n      } else {\n        response = yield call(menuService.disable, payload.id);\n      }\n\n      if (response.status === 'OK') {\n        let msg = 'Successfully activated';\n\n        if (payload.status === 2) {\n          msg = 'Deactivated successfully';\n        }\n\n        _message.success(msg);\n\n        const data = yield select(state => state.menu.data);\n        const newData = {\n          list: [],\n          pagination: data.pagination\n        };\n\n        for (let i = 0; i < data.list.length; i += 1) {\n          const item = data.list[i];\n\n          if (item.id === payload.id) {\n            item.status = payload.status;\n          }\n\n          newData.list.push(item);\n        }\n\n        yield put({\n          type: 'saveData',\n          payload: newData\n        });\n      }\n    }\n\n  },\n  reducers: {\n    saveData(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: payload\n      });\n    },\n\n    saveSearch(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        search: payload\n      });\n    },\n\n    savePagination(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pagination: payload\n      });\n    },\n\n    changeFormVisible(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formVisible: payload\n      });\n    },\n\n    saveFormType(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formType: payload\n      });\n    },\n\n    saveFormTitle(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formTitle: payload\n      });\n    },\n\n    saveFormID(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formID: payload\n      });\n    },\n\n    saveFormData(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formData: payload\n      });\n    },\n\n    changeSubmitting(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        submitting: payload\n      });\n    },\n\n    saveTreeData(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        treeData: payload\n      });\n    },\n\n    saveExpandedKeys(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        expandedKeys: payload\n      });\n    }\n\n  }\n};","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/models/menu.js"],"names":["menuService","namespace","state","search","pagination","data","list","submitting","formType","formTitle","formID","formVisible","formData","treeData","expandedKeys","effects","fetch","call","put","select","params","parentID","type","payload","s","menu","p","response","query","loadForm","id","parent_id","fetchForm","get","submit","success","update","status","create","del","fetchTree","queryTree","changeStatus","enable","disable","msg","newData","i","length","item","push","reducers","saveData","saveSearch","savePagination","changeFormVisible","saveFormType","saveFormTitle","saveFormID","saveFormData","changeSubmitting","saveTreeData","saveExpandedKeys"],"mappings":";;;;;;;;;AACA,OAAO,KAAKA,WAAZ,MAA6B,iBAA7B;AAEA,eAAe;AACbC,EAAAA,SAAS,EAAE,MADE;AAEbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,UAAU,EAAE,EAFP;AAGLC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJF,MAAAA,UAAU,EAAE;AAFR,KAHD;AAOLG,IAAAA,UAAU,EAAE,KAPP;AAQLC,IAAAA,QAAQ,EAAE,EARL;AASLC,IAAAA,SAAS,EAAE,EATN;AAULC,IAAAA,MAAM,EAAE,EAVH;AAWLC,IAAAA,WAAW,EAAE,KAXR;AAYLC,IAAAA,QAAQ,EAAE,EAZL;AAaLC,IAAAA,QAAQ,EAAE,EAbL;AAcLC,IAAAA,YAAY,EAAE;AAdT,GAFM;AAkBbC,EAAAA,OAAO,EAAE;AACP,KAACC,KAAD,CAAO;AAAEb,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAP,EAA+B;AAAEa,MAAAA,IAAF;AAAQC,MAAAA,GAAR;AAAaC,MAAAA;AAAb,KAA/B,EAAsD;AACpD,UAAIC,MAAM,GAAG;AACXC,QAAAA,QAAQ,EAAE;AADC,OAAb;;AAIA,UAAIlB,MAAJ,EAAY;AACViB,QAAAA,MAAM,mCAAQA,MAAR,GAAmBjB,MAAnB,CAAN;AACA,cAAMe,GAAG,CAAC;AACRI,UAAAA,IAAI,EAAE,YADE;AAERC,UAAAA,OAAO,EAAEpB;AAFD,SAAD,CAAT;AAID,OAND,MAMO;AACL,cAAMqB,CAAC,GAAG,MAAML,MAAM,CAACjB,KAAK,IAAIA,KAAK,CAACuB,IAAN,CAAWtB,MAArB,CAAtB;;AACA,YAAIqB,CAAJ,EAAO;AACLJ,UAAAA,MAAM,mCAAQA,MAAR,GAAmBI,CAAnB,CAAN;AACD;AACF;;AAED,UAAIpB,UAAJ,EAAgB;AACdgB,QAAAA,MAAM,mCAAQA,MAAR,GAAmBhB,UAAnB,CAAN;AACA,cAAMc,GAAG,CAAC;AACRI,UAAAA,IAAI,EAAE,gBADE;AAERC,UAAAA,OAAO,EAAEnB;AAFD,SAAD,CAAT;AAID,OAND,MAMO;AACL,cAAMsB,CAAC,GAAG,MAAMP,MAAM,CAACjB,KAAK,IAAIA,KAAK,CAACuB,IAAN,CAAWrB,UAArB,CAAtB;;AACA,YAAIsB,CAAJ,EAAO;AACLN,UAAAA,MAAM,mCAAQA,MAAR,GAAmBM,CAAnB,CAAN;AACD;AACF;;AAED,YAAMC,QAAQ,GAAG,MAAMV,IAAI,CAACjB,WAAW,CAAC4B,KAAb,EAAoBR,MAApB,CAA3B;AACA,YAAMF,GAAG,CAAC;AACRI,QAAAA,IAAI,EAAE,UADE;AAERC,QAAAA,OAAO,EAAEI;AAFD,OAAD,CAAT;AAID,KArCM;;AAsCP,KAACE,QAAD,CAAU;AAAEN,MAAAA;AAAF,KAAV,EAAuB;AAAEL,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAAvB,EAAwC;AACtC,YAAMD,GAAG,CAAC;AACRI,QAAAA,IAAI,EAAE,mBADE;AAERC,QAAAA,OAAO,EAAE;AAFD,OAAD,CAAT;AAKA,YAAM,CACJL,GAAG,CAAC;AACFI,QAAAA,IAAI,EAAE,cADJ;AAEFC,QAAAA,OAAO,EAAEA,OAAO,CAACD;AAFf,OAAD,CADC,EAKJJ,GAAG,CAAC;AACFI,QAAAA,IAAI,EAAE,eADJ;AAEFC,QAAAA,OAAO,EAAE;AAFP,OAAD,CALC,EASJL,GAAG,CAAC;AACFI,QAAAA,IAAI,EAAE,YADJ;AAEFC,QAAAA,OAAO,EAAE;AAFP,OAAD,CATC,EAaJL,GAAG,CAAC;AACFI,QAAAA,IAAI,EAAE,cADJ;AAEFC,QAAAA,OAAO,EAAE;AAFP,OAAD,CAbC,EAiBJL,GAAG,CAAC;AAAEI,QAAAA,IAAI,EAAE;AAAR,OAAD,CAjBC,CAAN;;AAoBA,UAAIC,OAAO,CAACD,IAAR,KAAiB,GAArB,EAA0B;AACxB,cAAM,CACJJ,GAAG,CAAC;AACFI,UAAAA,IAAI,EAAE,eADJ;AAEFC,UAAAA,OAAO,EAAE;AAFP,SAAD,CADC,EAKJL,GAAG,CAAC;AACFI,UAAAA,IAAI,EAAE,YADJ;AAEFC,UAAAA,OAAO,EAAEA,OAAO,CAACO;AAFf,SAAD,CALC,EASJZ,GAAG,CAAC;AACFI,UAAAA,IAAI,EAAE,WADJ;AAEFC,UAAAA,OAAO,EAAE;AAAEO,YAAAA,EAAE,EAAEP,OAAO,CAACO;AAAd;AAFP,SAAD,CATC,CAAN;AAcD,OAfD,MAeO;AACL,cAAM3B,MAAM,GAAG,MAAMgB,MAAM,CAACjB,KAAK,IAAIA,KAAK,CAACuB,IAAN,CAAWtB,MAArB,CAA3B;AACA,cAAMe,GAAG,CAAC;AACRI,UAAAA,IAAI,EAAE,cADE;AAERC,UAAAA,OAAO,EAAE;AAAEQ,YAAAA,SAAS,EAAE5B,MAAM,CAACkB,QAAP,GAAkBlB,MAAM,CAACkB,QAAzB,GAAoC;AAAjD;AAFD,SAAD,CAAT;AAID;AACF,KAtFM;;AAuFP,KAACW,SAAD,CAAW;AAAET,MAAAA;AAAF,KAAX,EAAwB;AAAEN,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAxB,EAAuC;AACrC,YAAMS,QAAQ,GAAG,MAAMV,IAAI,CAACjB,WAAW,CAACiC,GAAb,EAAkBV,OAAO,CAACO,EAA1B,CAA3B;AACA,YAAMZ,GAAG,CAAC;AACRI,QAAAA,IAAI,EAAE,cADE;AAERC,QAAAA,OAAO,EAAEI;AAFD,OAAD,CAAT;AAID,KA7FM;;AA8FP,KAACO,MAAD,CAAQ;AAAEX,MAAAA;AAAF,KAAR,EAAqB;AAAEN,MAAAA,IAAF;AAAQC,MAAAA,GAAR;AAAaC,MAAAA;AAAb,KAArB,EAA4C;AAC1C,YAAMD,GAAG,CAAC;AACRI,QAAAA,IAAI,EAAE,kBADE;AAERC,QAAAA,OAAO,EAAE;AAFD,OAAD,CAAT;;AAKA,YAAMH,MAAM,qBAAQG,OAAR,CAAZ;;AACA,YAAMf,QAAQ,GAAG,MAAMW,MAAM,CAACjB,KAAK,IAAIA,KAAK,CAACuB,IAAN,CAAWjB,QAArB,CAA7B;AACA,UAAI2B,OAAO,GAAG,KAAd;;AACA,UAAI3B,QAAQ,KAAK,GAAjB,EAAsB;AACpB,cAAMsB,EAAE,GAAG,MAAMX,MAAM,CAACjB,KAAK,IAAIA,KAAK,CAACuB,IAAN,CAAWf,MAArB,CAAvB;AACA,cAAMiB,QAAQ,GAAG,MAAMV,IAAI,CAACjB,WAAW,CAACoC,MAAb,EAAqBN,EAArB,EAAyBV,MAAzB,CAA3B;;AACA,YAAIO,QAAQ,CAACU,MAAT,KAAoB,IAAxB,EAA8B;AAC5BF,UAAAA,OAAO,GAAG,IAAV;AACD;AACF,OAND,MAMO;AACL,cAAMR,QAAQ,GAAG,MAAMV,IAAI,CAACjB,WAAW,CAACsC,MAAb,EAAqBlB,MAArB,CAA3B;;AACA,YAAIO,QAAQ,CAACG,EAAT,IAAeH,QAAQ,CAACG,EAAT,KAAgB,EAAnC,EAAuC;AACrCK,UAAAA,OAAO,GAAG,IAAV;AACD;AACF;;AAED,YAAMjB,GAAG,CAAC;AACRI,QAAAA,IAAI,EAAE,kBADE;AAERC,QAAAA,OAAO,EAAE;AAFD,OAAD,CAAT;;AAKA,UAAIY,OAAJ,EAAa;AACX,iBAAQA,OAAR,CAAgB,oBAAhB;;AACA,cAAMjB,GAAG,CAAC;AACRI,UAAAA,IAAI,EAAE,mBADE;AAERC,UAAAA,OAAO,EAAE;AAFD,SAAD,CAAT;AAKA,cAAML,GAAG,CAAC;AAAEI,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAT;AACA,cAAMJ,GAAG,CAAC;AAAEI,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAT;AACD;AACF,KAnIM;;AAoIP,KAACiB,GAAD,CAAK;AAAEhB,MAAAA;AAAF,KAAL,EAAkB;AAAEN,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAlB,EAAiC;AAC/B,YAAMS,QAAQ,GAAG,MAAMV,IAAI,CAACjB,WAAW,CAACuC,GAAb,EAAkBhB,OAAO,CAACO,EAA1B,CAA3B;;AACA,UAAIH,QAAQ,CAACU,MAAT,KAAoB,IAAxB,EAA8B;AAC5B,iBAAQF,OAAR,CAAgB,sBAAhB;;AACA,cAAMjB,GAAG,CAAC;AAAEI,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAT;AACA,cAAMJ,GAAG,CAAC;AAAEI,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAT;AACD;AACF,KA3IM;;AA4IP,KAACkB,SAAD,CAAW;AAAEjB,MAAAA;AAAF,KAAX,EAAwB;AAAEN,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAxB,EAAuC;AACrC,UAAIE,MAAM,GAAG,EAAb;;AACA,UAAIG,OAAJ,EAAa;AACXH,QAAAA,MAAM,mCAAQA,MAAR,GAAmBG,OAAnB,CAAN;AACD;;AACD,YAAMI,QAAQ,GAAG,MAAMV,IAAI,CAACjB,WAAW,CAACyC,SAAb,EAAwBrB,MAAxB,CAA3B;AACA,YAAMF,GAAG,CAAC;AACRI,QAAAA,IAAI,EAAE,cADE;AAERC,QAAAA,OAAO,EAAEI,QAAQ,CAACrB,IAAT,IAAiB;AAFlB,OAAD,CAAT;AAID,KAtJM;;AAuJP,KAACoC,YAAD,CAAc;AAAEnB,MAAAA;AAAF,KAAd,EAA2B;AAAEN,MAAAA,IAAF;AAAQC,MAAAA,GAAR;AAAaC,MAAAA;AAAb,KAA3B,EAAkD;AAChD,UAAIQ,QAAJ;;AACA,UAAIJ,OAAO,CAACc,MAAR,KAAmB,CAAvB,EAA0B;AACxBV,QAAAA,QAAQ,GAAG,MAAMV,IAAI,CAACjB,WAAW,CAAC2C,MAAb,EAAqBpB,OAAO,CAACO,EAA7B,CAArB;AACD,OAFD,MAEO;AACLH,QAAAA,QAAQ,GAAG,MAAMV,IAAI,CAACjB,WAAW,CAAC4C,OAAb,EAAsBrB,OAAO,CAACO,EAA9B,CAArB;AACD;;AAED,UAAIH,QAAQ,CAACU,MAAT,KAAoB,IAAxB,EAA8B;AAC5B,YAAIQ,GAAG,GAAG,wBAAV;;AACA,YAAItB,OAAO,CAACc,MAAR,KAAmB,CAAvB,EAA0B;AACxBQ,UAAAA,GAAG,GAAG,0BAAN;AACD;;AACD,iBAAQV,OAAR,CAAgBU,GAAhB;;AACA,cAAMxC,IAAI,GAAG,MAAMc,MAAM,CAACjB,KAAK,IAAIA,KAAK,CAACuB,IAAN,CAAWpB,IAArB,CAAzB;AACA,cAAMyC,OAAO,GAAG;AAAExC,UAAAA,IAAI,EAAE,EAAR;AAAYF,UAAAA,UAAU,EAAEC,IAAI,CAACD;AAA7B,SAAhB;;AAEA,aAAK,IAAI2C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG1C,IAAI,CAACC,IAAL,CAAU0C,MAA9B,EAAsCD,CAAC,IAAI,CAA3C,EAA8C;AAC5C,gBAAME,IAAI,GAAG5C,IAAI,CAACC,IAAL,CAAUyC,CAAV,CAAb;;AACA,cAAIE,IAAI,CAACnB,EAAL,KAAYP,OAAO,CAACO,EAAxB,EAA4B;AAC1BmB,YAAAA,IAAI,CAACZ,MAAL,GAAcd,OAAO,CAACc,MAAtB;AACD;;AACDS,UAAAA,OAAO,CAACxC,IAAR,CAAa4C,IAAb,CAAkBD,IAAlB;AACD;;AAED,cAAM/B,GAAG,CAAC;AACRI,UAAAA,IAAI,EAAE,UADE;AAERC,UAAAA,OAAO,EAAEuB;AAFD,SAAD,CAAT;AAID;AACF;;AArLM,GAlBI;AAyMbK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,CAAClD,KAAD,EAAQ;AAAEqB,MAAAA;AAAF,KAAR,EAAqB;AAC3B,6CAAYrB,KAAZ;AAAmBG,QAAAA,IAAI,EAAEkB;AAAzB;AACD,KAHO;;AAIR8B,IAAAA,UAAU,CAACnD,KAAD,EAAQ;AAAEqB,MAAAA;AAAF,KAAR,EAAqB;AAC7B,6CAAYrB,KAAZ;AAAmBC,QAAAA,MAAM,EAAEoB;AAA3B;AACD,KANO;;AAOR+B,IAAAA,cAAc,CAACpD,KAAD,EAAQ;AAAEqB,MAAAA;AAAF,KAAR,EAAqB;AACjC,6CAAYrB,KAAZ;AAAmBE,QAAAA,UAAU,EAAEmB;AAA/B;AACD,KATO;;AAURgC,IAAAA,iBAAiB,CAACrD,KAAD,EAAQ;AAAEqB,MAAAA;AAAF,KAAR,EAAqB;AACpC,6CAAYrB,KAAZ;AAAmBS,QAAAA,WAAW,EAAEY;AAAhC;AACD,KAZO;;AAaRiC,IAAAA,YAAY,CAACtD,KAAD,EAAQ;AAAEqB,MAAAA;AAAF,KAAR,EAAqB;AAC/B,6CAAYrB,KAAZ;AAAmBM,QAAAA,QAAQ,EAAEe;AAA7B;AACD,KAfO;;AAgBRkC,IAAAA,aAAa,CAACvD,KAAD,EAAQ;AAAEqB,MAAAA;AAAF,KAAR,EAAqB;AAChC,6CAAYrB,KAAZ;AAAmBO,QAAAA,SAAS,EAAEc;AAA9B;AACD,KAlBO;;AAmBRmC,IAAAA,UAAU,CAACxD,KAAD,EAAQ;AAAEqB,MAAAA;AAAF,KAAR,EAAqB;AAC7B,6CAAYrB,KAAZ;AAAmBQ,QAAAA,MAAM,EAAEa;AAA3B;AACD,KArBO;;AAsBRoC,IAAAA,YAAY,CAACzD,KAAD,EAAQ;AAAEqB,MAAAA;AAAF,KAAR,EAAqB;AAC/B,6CAAYrB,KAAZ;AAAmBU,QAAAA,QAAQ,EAAEW;AAA7B;AACD,KAxBO;;AAyBRqC,IAAAA,gBAAgB,CAAC1D,KAAD,EAAQ;AAAEqB,MAAAA;AAAF,KAAR,EAAqB;AACnC,6CAAYrB,KAAZ;AAAmBK,QAAAA,UAAU,EAAEgB;AAA/B;AACD,KA3BO;;AA4BRsC,IAAAA,YAAY,CAAC3D,KAAD,EAAQ;AAAEqB,MAAAA;AAAF,KAAR,EAAqB;AAC/B,6CAAYrB,KAAZ;AAAmBW,QAAAA,QAAQ,EAAEU;AAA7B;AACD,KA9BO;;AA+BRuC,IAAAA,gBAAgB,CAAC5D,KAAD,EAAQ;AAAEqB,MAAAA;AAAF,KAAR,EAAqB;AACnC,6CAAYrB,KAAZ;AAAmBY,QAAAA,YAAY,EAAES;AAAjC;AACD;;AAjCO;AAzMG,CAAf","sourcesContent":["import { message } from 'antd';\nimport * as menuService from '@/services/menu';\n\nexport default {\n  namespace: 'menu',\n  state: {\n    search: {},\n    pagination: {},\n    data: {\n      list: [],\n      pagination: {},\n    },\n    submitting: false,\n    formType: '',\n    formTitle: '',\n    formID: '',\n    formVisible: false,\n    formData: {},\n    treeData: [],\n    expandedKeys: [],\n  },\n  effects: {\n    *fetch({ search, pagination }, { call, put, select }) {\n      let params = {\n        parentID: '',\n      };\n\n      if (search) {\n        params = { ...params, ...search };\n        yield put({\n          type: 'saveSearch',\n          payload: search,\n        });\n      } else {\n        const s = yield select(state => state.menu.search);\n        if (s) {\n          params = { ...params, ...s };\n        }\n      }\n\n      if (pagination) {\n        params = { ...params, ...pagination };\n        yield put({\n          type: 'savePagination',\n          payload: pagination,\n        });\n      } else {\n        const p = yield select(state => state.menu.pagination);\n        if (p) {\n          params = { ...params, ...p };\n        }\n      }\n\n      const response = yield call(menuService.query, params);\n      yield put({\n        type: 'saveData',\n        payload: response,\n      });\n    },\n    *loadForm({ payload }, { put, select }) {\n      yield put({\n        type: 'changeFormVisible',\n        payload: true,\n      });\n\n      yield [\n        put({\n          type: 'saveFormType',\n          payload: payload.type,\n        }),\n        put({\n          type: 'saveFormTitle',\n          payload: 'New menu',\n        }),\n        put({\n          type: 'saveFormID',\n          payload: '',\n        }),\n        put({\n          type: 'saveFormData',\n          payload: {},\n        }),\n        put({ type: 'fetchTree' }),\n      ];\n\n      if (payload.type === 'E') {\n        yield [\n          put({\n            type: 'saveFormTitle',\n            payload: 'Edit menu',\n          }),\n          put({\n            type: 'saveFormID',\n            payload: payload.id,\n          }),\n          put({\n            type: 'fetchForm',\n            payload: { id: payload.id },\n          }),\n        ];\n      } else {\n        const search = yield select(state => state.menu.search);\n        yield put({\n          type: 'saveFormData',\n          payload: { parent_id: search.parentID ? search.parentID : '' },\n        });\n      }\n    },\n    *fetchForm({ payload }, { call, put }) {\n      const response = yield call(menuService.get, payload.id);\n      yield put({\n        type: 'saveFormData',\n        payload: response,\n      });\n    },\n    *submit({ payload }, { call, put, select }) {\n      yield put({\n        type: 'changeSubmitting',\n        payload: true,\n      });\n\n      const params = { ...payload };\n      const formType = yield select(state => state.menu.formType);\n      let success = false;\n      if (formType === 'E') {\n        const id = yield select(state => state.menu.formID);\n        const response = yield call(menuService.update, id, params);\n        if (response.status === 'OK') {\n          success = true;\n        }\n      } else {\n        const response = yield call(menuService.create, params);\n        if (response.id && response.id !== '') {\n          success = true;\n        }\n      }\n\n      yield put({\n        type: 'changeSubmitting',\n        payload: false,\n      });\n\n      if (success) {\n        message.success('Saved successfully');\n        yield put({\n          type: 'changeFormVisible',\n          payload: false,\n        });\n\n        yield put({ type: 'fetchTree' });\n        yield put({ type: 'fetch' });\n      }\n    },\n    *del({ payload }, { call, put }) {\n      const response = yield call(menuService.del, payload.id);\n      if (response.status === 'OK') {\n        message.success('successfully deleted');\n        yield put({ type: 'fetchTree' });\n        yield put({ type: 'fetch' });\n      }\n    },\n    *fetchTree({ payload }, { call, put }) {\n      let params = {};\n      if (payload) {\n        params = { ...params, ...payload };\n      }\n      const response = yield call(menuService.queryTree, params);\n      yield put({\n        type: 'saveTreeData',\n        payload: response.list || [],\n      });\n    },\n    *changeStatus({ payload }, { call, put, select }) {\n      let response;\n      if (payload.status === 1) {\n        response = yield call(menuService.enable, payload.id);\n      } else {\n        response = yield call(menuService.disable, payload.id);\n      }\n\n      if (response.status === 'OK') {\n        let msg = 'Successfully activated';\n        if (payload.status === 2) {\n          msg = 'Deactivated successfully';\n        }\n        message.success(msg);\n        const data = yield select(state => state.menu.data);\n        const newData = { list: [], pagination: data.pagination };\n\n        for (let i = 0; i < data.list.length; i += 1) {\n          const item = data.list[i];\n          if (item.id === payload.id) {\n            item.status = payload.status;\n          }\n          newData.list.push(item);\n        }\n\n        yield put({\n          type: 'saveData',\n          payload: newData,\n        });\n      }\n    },\n  },\n  reducers: {\n    saveData(state, { payload }) {\n      return { ...state, data: payload };\n    },\n    saveSearch(state, { payload }) {\n      return { ...state, search: payload };\n    },\n    savePagination(state, { payload }) {\n      return { ...state, pagination: payload };\n    },\n    changeFormVisible(state, { payload }) {\n      return { ...state, formVisible: payload };\n    },\n    saveFormType(state, { payload }) {\n      return { ...state, formType: payload };\n    },\n    saveFormTitle(state, { payload }) {\n      return { ...state, formTitle: payload };\n    },\n    saveFormID(state, { payload }) {\n      return { ...state, formID: payload };\n    },\n    saveFormData(state, { payload }) {\n      return { ...state, formData: payload };\n    },\n    changeSubmitting(state, { payload }) {\n      return { ...state, submitting: payload };\n    },\n    saveTreeData(state, { payload }) {\n      return { ...state, treeData: payload };\n    },\n    saveExpandedKeys(state, { payload }) {\n      return { ...state, expandedKeys: payload };\n    },\n  },\n};\n"]},"metadata":{},"sourceType":"module"}