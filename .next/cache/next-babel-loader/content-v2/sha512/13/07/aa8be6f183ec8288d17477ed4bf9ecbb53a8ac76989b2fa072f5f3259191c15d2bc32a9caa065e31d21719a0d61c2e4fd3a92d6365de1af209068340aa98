{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/alert/style\";\nimport _Alert from \"antd/lib/alert\";\n\nvar _jsxFileName = \"/Users/nguyenthanhbinh/Work/vnshop/admin/src/pages/login/index.js\",\n    _dec,\n    _class,\n    _temp;\n\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { CodeOutlined, LockOutlined, UserOutlined } from '@ant-design/icons';\nimport { Form } from '@ant-design/compatible';\nimport '@ant-design/compatible/assets/index.css';\nimport { md5Hash } from '../../utils/utils';\nimport styles from './index.less';\nimport WithDva from '../../utils/store'; // @connect(({ login }) => ({\n//   login,\n// }))\n\nlet Login = (_dec = Form.create(), _dec(_class = (_temp = class Login extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"reloadCaptcha\", () => {\n      this.dispatch({\n        type: 'login/reloadCaptcha'\n      });\n    });\n\n    _defineProperty(this, \"handleSubmit\", e => {\n      e.preventDefault();\n      const {\n        form,\n        dispatch,\n        login\n      } = this.props;\n      form.validateFields({\n        force: true\n      }, (err, values) => {\n        if (!err) {\n          dispatch({\n            type: 'login/submit',\n            payload: {\n              user_name: values.user_name,\n              captcha_code: values.captcha_code,\n              captcha_id: login.captchaID,\n              password: md5Hash(values.password)\n            }\n          });\n        }\n      });\n    });\n\n    _defineProperty(this, \"dispatch\", action => {\n      const {\n        dispatch\n      } = this.props;\n      dispatch(action);\n    });\n\n    _defineProperty(this, \"renderMessage\", (type, message) => __jsx(_Alert, {\n      style: {\n        marginBottom: 24\n      },\n      message: message,\n      type: type,\n      closable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }\n    }));\n  }\n\n  componentDidMount() {\n    this.dispatch({\n      type: 'login/loadCaptcha'\n    });\n  }\n\n  render() {\n    const {\n      form: {\n        getFieldDecorator\n      },\n      login\n    } = this.props;\n    return __jsx(\"div\", {\n      className: styles.main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, __jsx(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, login.status === 'FAIL' && login.submitting === false && this.renderMessage('warning', login.tip), login.status === 'ERROR' && login.submitting === false && this.renderMessage('error', login.tip), __jsx(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, getFieldDecorator('user_name', {\n      rules: [{\n        required: true,\n        message: '请输入用户名！'\n      }]\n    })(__jsx(_Input, {\n      size: \"large\",\n      prefix: __jsx(UserOutlined, {\n        className: styles.prefixIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      }),\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u540D\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }))), __jsx(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: '请输入密码！'\n      }]\n    })(__jsx(_Input, {\n      size: \"large\",\n      prefix: __jsx(LockOutlined, {\n        className: styles.prefixIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }\n      }),\n      type: \"password\",\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }))), __jsx(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, __jsx(_Input.Group, {\n      compact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, getFieldDecorator('captcha_code', {\n      rules: [{\n        required: true,\n        message: '请输入验证码！'\n      }]\n    })(__jsx(_Input, {\n      style: {\n        width: '60%',\n        marginRight: 10\n      },\n      size: \"large\",\n      prefix: __jsx(CodeOutlined, {\n        className: styles.prefixIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 27\n        }\n      }),\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u9A8C\\u8BC1\\u7801\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      style: {\n        width: 120,\n        height: 40\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, __jsx(\"img\", {\n      style: {\n        maxWidth: '100%',\n        maxHeight: '100%'\n      },\n      src: login.captcha,\n      alt: \"\\u9A8C\\u8BC1\\u7801\",\n      onClick: () => {\n        this.reloadCaptcha();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    })))), __jsx(Form.Item, {\n      className: styles.additional,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, __jsx(_Button, {\n      size: \"large\",\n      loading: login.submitting,\n      className: styles.submit,\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, \"\\u767B\\u5F55\"))));\n  }\n\n}, _temp)) || _class);\nexport default WithDva(({\n  login\n}) => ({\n  login\n}))(Login); // export default Login;","map":{"version":3,"sources":["/Users/nguyenthanhbinh/Work/vnshop/admin/src/pages/login/index.js"],"names":["React","PureComponent","CodeOutlined","LockOutlined","UserOutlined","Form","md5Hash","styles","WithDva","Login","create","dispatch","type","e","preventDefault","form","login","props","validateFields","force","err","values","payload","user_name","captcha_code","captcha_id","captchaID","password","action","message","marginBottom","componentDidMount","render","getFieldDecorator","main","handleSubmit","status","submitting","renderMessage","tip","rules","required","prefixIcon","width","marginRight","height","maxWidth","maxHeight","captcha","reloadCaptcha","additional","submit"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\n\r\nimport { CodeOutlined, LockOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { Form } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\nimport { Input, Button, Alert } from 'antd';\r\nimport { md5Hash } from '../../utils/utils';\r\n\r\nimport styles from './index.less';\r\n\r\nimport WithDva from '../../utils/store';\r\n\r\n\r\n// @connect(({ login }) => ({\r\n//   login,\r\n// }))\r\n\r\n\r\n@Form.create()\r\nclass Login extends PureComponent {\r\n  componentDidMount() {\r\n    this.dispatch({\r\n      type: 'login/loadCaptcha',\r\n    });\r\n  }\r\n\r\n  reloadCaptcha = () => {\r\n    this.dispatch({\r\n      type: 'login/reloadCaptcha',\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { form, dispatch, login } = this.props;\r\n    form.validateFields({ force: true }, (err, values) => {\r\n      if (!err) {\r\n        dispatch({\r\n          type: 'login/submit',\r\n          payload: {\r\n            user_name: values.user_name,\r\n            captcha_code: values.captcha_code,\r\n            captcha_id: login.captchaID,\r\n            password: md5Hash(values.password),\r\n          },\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  dispatch = action => {\r\n    const { dispatch } = this.props;\r\n    dispatch(action);\r\n  };\r\n\r\n  renderMessage = (type, message) => (\r\n    <Alert style={{ marginBottom: 24 }} message={message} type={type} closable />\r\n  );\r\n\r\n  render() {\r\n    const {\r\n      form: { getFieldDecorator },\r\n      login,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className={styles.main}>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          {login.status === 'FAIL' &&\r\n            login.submitting === false &&\r\n            this.renderMessage('warning', login.tip)}\r\n\r\n          {login.status === 'ERROR' &&\r\n            login.submitting === false &&\r\n            this.renderMessage('error', login.tip)}\r\n\r\n          <Form.Item>\r\n            {getFieldDecorator('user_name', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: '请输入用户名！',\r\n                },\r\n              ],\r\n            })(\r\n              <Input\r\n                size=\"large\"\r\n                prefix={<UserOutlined className={styles.prefixIcon} />}\r\n                placeholder=\"请输入用户名\"\r\n              />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator('password', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: '请输入密码！',\r\n                },\r\n              ],\r\n            })(\r\n              <Input\r\n                size=\"large\"\r\n                prefix={<LockOutlined className={styles.prefixIcon} />}\r\n                type=\"password\"\r\n                placeholder=\"请输入密码\"\r\n              />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Input.Group compact>\r\n              {getFieldDecorator('captcha_code', {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: '请输入验证码！',\r\n                  },\r\n                ],\r\n              })(\r\n                <Input\r\n                  style={{ width: '60%', marginRight: 10 }}\r\n                  size=\"large\"\r\n                  prefix={<CodeOutlined className={styles.prefixIcon} />}\r\n                  placeholder=\"请输入验证码\"\r\n                />\r\n              )}\r\n              <div\r\n                style={{\r\n                  width: 120,\r\n                  height: 40,\r\n                }}\r\n              >\r\n                <img\r\n                  style={{ maxWidth: '100%', maxHeight: '100%' }}\r\n                  src={login.captcha}\r\n                  alt=\"验证码\"\r\n                  onClick={() => {\r\n                    this.reloadCaptcha();\r\n                  }}\r\n                />\r\n              </div>\r\n            </Input.Group>\r\n          </Form.Item>\r\n          <Form.Item className={styles.additional}>\r\n            <Button\r\n              size=\"large\"\r\n              loading={login.submitting}\r\n              className={styles.submit}\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n            >\r\n              登录\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WithDva(({ login }) => ({\r\n  login,\r\n}))(Login);\r\n\r\n// export default Login;\r\n"]},"metadata":{},"sourceType":"module"}