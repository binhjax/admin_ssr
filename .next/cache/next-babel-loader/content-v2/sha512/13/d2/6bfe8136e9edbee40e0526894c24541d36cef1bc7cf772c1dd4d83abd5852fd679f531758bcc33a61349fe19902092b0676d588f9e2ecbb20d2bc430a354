{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/tooltip/style\";\nimport _Tooltip from \"antd/lib/tooltip\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\n\nvar _dec, _class, _temp;\n\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport { Form } from '@ant-design/compatible';\nimport '@ant-design/compatible/assets/index.css';\nlet TplDialog = (_dec = Form.create(), _dec(_class = (_temp = class TplDialog extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleCancel\", () => {\n      const {\n        onCancel\n      } = this.props;\n\n      if (onCancel) {\n        onCancel();\n      }\n    });\n\n    _defineProperty(this, \"handleOKClick\", () => {\n      const {\n        form,\n        onSubmit\n      } = this.props;\n      form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          onSubmit(_objectSpread({}, values));\n        }\n      });\n    });\n  }\n\n  render() {\n    const {\n      visible,\n      form\n    } = this.props;\n    const {\n      getFieldDecorator\n    } = form;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 6\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    return __jsx(_Modal, {\n      title: \"\\u5FEB\\u901F\\u521B\\u5EFA\\u6A21\\u677F\",\n      width: 450,\n      visible: visible,\n      maskClosable: false,\n      destroyOnClose: true,\n      onOk: this.handleOKClick,\n      onCancel: this.handleCancel,\n      style: {\n        top: 20\n      },\n      bodyStyle: {\n        maxHeight: 'calc( 100vh - 158px )',\n        overflowY: 'auto'\n      }\n    }, __jsx(Form, null, __jsx(Form.Item, _extends({\n      label: \"\\u63A5\\u53E3\\u8DEF\\u5F84\"\n    }, formItemLayout), __jsx(_Row, null, __jsx(_Col, {\n      span: 20\n    }, getFieldDecorator('path', {\n      initialValue: '/api/v1/',\n      rules: [{\n        required: true,\n        message: '请输入接口路径'\n      }]\n    })(__jsx(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\"\n    }))), __jsx(_Col, {\n      span: 4,\n      style: {\n        textAlign: 'center'\n      }\n    }, __jsx(_Tooltip, {\n      title: \"\\u4F8B\\uFF1A/api/v1/demos\"\n    }, __jsx(QuestionCircleOutlined, null)))))));\n  }\n\n}, _temp)) || _class);\nexport default TplDialog;","map":null,"metadata":{},"sourceType":"module"}