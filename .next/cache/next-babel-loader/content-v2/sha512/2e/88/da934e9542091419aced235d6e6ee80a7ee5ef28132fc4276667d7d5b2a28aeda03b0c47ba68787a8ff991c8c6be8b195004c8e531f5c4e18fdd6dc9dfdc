{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/input-number/style\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\n\nvar _dec, _class, _temp;\n\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { Form } from '@ant-design/compatible';\nimport '@ant-design/compatible/assets/index.css';\nimport RoleMenu from './RoleMenu';\nimport WithDva from '../../utils/store'; // @connect(state => ({\n//   role: state.role,\n// }))\n\nlet RoleCard = (_dec = Form.create(), _dec(_class = (_temp = class RoleCard extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onOKClick\", () => {\n      const {\n        form,\n        onSubmit\n      } = this.props;\n      form.validateFieldsAndScroll((err, values) => {\n        if (err) {\n          return;\n        }\n\n        const formData = _objectSpread({}, values);\n\n        formData.sequence = parseInt(formData.sequence, 10);\n        formData.status = 1;\n\n        if (!formData.role_menus || formData.role_menus.length === 0) {\n          _message.warning('请选择菜单权限！');\n\n          return;\n        }\n\n        const roleMenus = [];\n        formData.role_menus.forEach(item => {\n          if (item.actions && item.actions.length > 0) {\n            item.actions.forEach(v => {\n              roleMenus.push({\n                menu_id: item.menu_id,\n                action_id: v\n              });\n            });\n          } else {\n            roleMenus.push({\n              menu_id: item.menu_id\n            });\n          }\n        });\n        formData.role_menus = roleMenus;\n        onSubmit(formData);\n      });\n    });\n\n    _defineProperty(this, \"dispatch\", action => {\n      const {\n        dispatch\n      } = this.props;\n      dispatch(action);\n    });\n  }\n\n  render() {\n    const {\n      role: {\n        formTitle,\n        formVisible,\n        formData,\n        submitting\n      },\n      form: {\n        getFieldDecorator\n      },\n      onCancel\n    } = this.props;\n    const formItemLayout = {\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 18\n      }\n    };\n    const formItemLayout2 = {\n      labelCol: {\n        span: 3\n      },\n      wrapperCol: {\n        span: 21\n      }\n    };\n    return __jsx(_Modal, {\n      title: formTitle,\n      width: 800,\n      visible: formVisible,\n      maskClosable: false,\n      confirmLoading: submitting,\n      destroyOnClose: true,\n      onOk: this.onOKClick,\n      onCancel: onCancel,\n      style: {\n        top: 20\n      },\n      bodyStyle: {\n        maxHeight: 'calc( 100vh - 158px )',\n        overflowY: 'auto'\n      }\n    }, __jsx(Form, null, __jsx(_Row, null, __jsx(_Col, {\n      span: 12\n    }, __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"\\u89D2\\u8272\\u540D\\u79F0\"\n    }), getFieldDecorator('name', {\n      initialValue: formData.name,\n      rules: [{\n        required: true,\n        message: '请输入角色名称'\n      }]\n    })(__jsx(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u89D2\\u8272\\u540D\\u79F0\"\n    })))), __jsx(_Col, {\n      span: 12\n    }, __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"\\u6392\\u5E8F\\u503C\"\n    }), getFieldDecorator('sequence', {\n      initialValue: formData.sequence ? formData.sequence.toString() : '1000000',\n      rules: [{\n        required: true,\n        message: '请输入排序值'\n      }]\n    })(__jsx(_InputNumber, {\n      min: 1,\n      style: {\n        width: '100%'\n      }\n    }))))), __jsx(Form.Item, _extends({}, formItemLayout2, {\n      label: \"\\u5907\\u6CE8\"\n    }), getFieldDecorator('memo', {\n      initialValue: formData.memo\n    })(__jsx(_Input.TextArea, {\n      rows: 2,\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5907\\u6CE8\"\n    }))), __jsx(Form.Item, null, __jsx(_Card, {\n      title: \"\\u9009\\u62E9\\u83DC\\u5355\\u6743\\u9650\",\n      bordered: false\n    }, getFieldDecorator('role_menus', {\n      initialValue: formData.role_menus\n    })(__jsx(RoleMenu, null))))));\n  }\n\n}, _temp)) || _class);\nexport default WithDva(state => ({\n  role: state.role\n}))(RoleCard); // export default RoleCard;","map":null,"metadata":{},"sourceType":"module"}