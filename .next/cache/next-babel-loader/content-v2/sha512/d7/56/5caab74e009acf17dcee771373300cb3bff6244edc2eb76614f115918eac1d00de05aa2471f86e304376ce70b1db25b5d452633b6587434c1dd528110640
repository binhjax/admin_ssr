{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/popconfirm/style\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nvar _jsxFileName = \"/Users/nguyenthanhbinh/Work/vnshop/admin/src/pages/menu/MenuResource/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { newUUID } from '@/utils/utils';\nimport { EditableCell, EditableFormRow } from './EditableCell';\nimport styles from './index.less';\n\nfunction fillKey(data) {\n  if (!data) {\n    return [];\n  }\n\n  return data.map(item => {\n    const nitem = _objectSpread({}, item);\n\n    if (!nitem.key) {\n      nitem.key = newUUID();\n    }\n\n    return nitem;\n  });\n}\n\nexport default class MenuAction extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleAddCancel\", () => {\n      this.setState({\n        addVisible: false\n      });\n    });\n\n    _defineProperty(this, \"handleDelete\", key => {\n      const {\n        dataSource\n      } = this.state;\n      const data = dataSource.filter(item => item.key !== key);\n      this.setState({\n        dataSource: data\n      }, () => {\n        this.triggerChange(data);\n      });\n    });\n\n    _defineProperty(this, \"handleAdd\", () => {\n      const {\n        dataSource\n      } = this.state;\n      const item = {\n        key: newUUID(),\n        method: '',\n        path: ''\n      };\n      const data = [...dataSource, item];\n      this.setState({\n        dataSource: data\n      }, () => {\n        this.triggerChange(data);\n      });\n    });\n\n    _defineProperty(this, \"handleSave\", row => {\n      const {\n        dataSource\n      } = this.state;\n      const data = [...dataSource];\n      const index = data.findIndex(item => row.key === item.key);\n      const item = data[index];\n      data.splice(index, 1, _objectSpread(_objectSpread({}, item), row));\n      this.setState({\n        dataSource: data\n      }, () => {\n        this.triggerChange(data);\n      });\n    });\n\n    _defineProperty(this, \"triggerChange\", data => {\n      const {\n        onChange\n      } = this.props;\n\n      if (onChange) {\n        onChange(data);\n      }\n    });\n\n    this.columns = [{\n      title: '请求方式',\n      dataIndex: 'method',\n      editable: true,\n      width: '30%'\n    }, {\n      title: '请求路径',\n      dataIndex: 'path',\n      editable: true,\n      width: '45%'\n    }, {\n      title: '操作',\n      dataIndex: 'key',\n      width: '25%',\n      render: (_, record) => {\n        const {\n          dataSource\n        } = this.state;\n\n        if (dataSource.length === 0) {\n          return null;\n        }\n\n        return __jsx(_Popconfirm, {\n          title: \"\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u8BE5\\u6570\\u636E\\u5417?\",\n          onConfirm: () => this.handleDelete(record.key),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }\n        }, __jsx(\"a\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }\n        }, \"\\u5220\\u9664\"));\n      }\n    }];\n    this.state = {\n      dataSource: fillKey(props.value),\n      addVisible: false\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, state) {\n    if ('value' in nextProps) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        dataSource: fillKey(nextProps.value)\n      });\n    }\n\n    return state;\n  }\n\n  render() {\n    const {\n      dataSource\n    } = this.state;\n    const components = {\n      body: {\n        row: EditableFormRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return _objectSpread(_objectSpread({}, col), {}, {\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      });\n    });\n    return __jsx(\"div\", {\n      className: styles.tableList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: styles.tableListOperator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, __jsx(_Button, {\n      onClick: this.handleAdd,\n      size: \"small\",\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, \"\\u65B0\\u589E\")), __jsx(_Table, {\n      rowKey: record => record.key,\n      components: components,\n      bordered: true,\n      dataSource: dataSource,\n      columns: columns,\n      pagination: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/nguyenthanhbinh/Work/vnshop/admin/src/pages/menu/MenuResource/index.js"],"names":["React","PureComponent","newUUID","EditableCell","EditableFormRow","styles","fillKey","data","map","item","nitem","key","MenuAction","constructor","props","setState","addVisible","dataSource","state","filter","triggerChange","method","path","row","index","findIndex","splice","onChange","columns","title","dataIndex","editable","width","render","_","record","length","handleDelete","value","getDerivedStateFromProps","nextProps","components","body","cell","col","onCell","handleSave","tableList","tableListOperator","handleAdd"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { Table, Button, Popconfirm } from 'antd';\r\nimport { newUUID } from '@/utils/utils';\r\nimport { EditableCell, EditableFormRow } from './EditableCell';\r\n\r\nimport styles from './index.less';\r\n\r\nfunction fillKey(data) {\r\n  if (!data) {\r\n    return [];\r\n  }\r\n  return data.map(item => {\r\n    const nitem = { ...item };\r\n    if (!nitem.key) {\r\n      nitem.key = newUUID();\r\n    }\r\n    return nitem;\r\n  });\r\n}\r\n\r\nexport default class MenuAction extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.columns = [\r\n      {\r\n        title: '请求方式',\r\n        dataIndex: 'method',\r\n        editable: true,\r\n        width: '30%',\r\n      },\r\n      {\r\n        title: '请求路径',\r\n        dataIndex: 'path',\r\n        editable: true,\r\n        width: '45%',\r\n      },\r\n      {\r\n        title: '操作',\r\n        dataIndex: 'key',\r\n        width: '25%',\r\n        render: (_, record) => {\r\n          const { dataSource } = this.state;\r\n          if (dataSource.length === 0) {\r\n            return null;\r\n          }\r\n          return (\r\n            <Popconfirm title=\"确定要删除该数据吗?\" onConfirm={() => this.handleDelete(record.key)}>\r\n              <a>删除</a>\r\n            </Popconfirm>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n\r\n    this.state = {\r\n      dataSource: fillKey(props.value),\r\n      addVisible: false,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, state) {\r\n    if ('value' in nextProps) {\r\n      return { ...state, dataSource: fillKey(nextProps.value) };\r\n    }\r\n    return state;\r\n  }\r\n\r\n  handleAddCancel = () => {\r\n    this.setState({ addVisible: false });\r\n  };\r\n\r\n  handleDelete = key => {\r\n    const { dataSource } = this.state;\r\n    const data = dataSource.filter(item => item.key !== key);\r\n    this.setState({ dataSource: data }, () => {\r\n      this.triggerChange(data);\r\n    });\r\n  };\r\n\r\n  handleAdd = () => {\r\n    const { dataSource } = this.state;\r\n    const item = {\r\n      key: newUUID(),\r\n      method: '',\r\n      path: '',\r\n    };\r\n\r\n    const data = [...dataSource, item];\r\n    this.setState(\r\n      {\r\n        dataSource: data,\r\n      },\r\n      () => {\r\n        this.triggerChange(data);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleSave = row => {\r\n    const { dataSource } = this.state;\r\n    const data = [...dataSource];\r\n    const index = data.findIndex(item => row.key === item.key);\r\n    const item = data[index];\r\n    data.splice(index, 1, {\r\n      ...item,\r\n      ...row,\r\n    });\r\n    this.setState({ dataSource: data }, () => {\r\n      this.triggerChange(data);\r\n    });\r\n  };\r\n\r\n  triggerChange = data => {\r\n    const { onChange } = this.props;\r\n    if (onChange) {\r\n      onChange(data);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableFormRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          handleSave: this.handleSave,\r\n        }),\r\n      };\r\n    });\r\n    return (\r\n      <div className={styles.tableList}>\r\n        <div className={styles.tableListOperator}>\r\n          <Button onClick={this.handleAdd} size=\"small\" type=\"primary\">\r\n            新增\r\n          </Button>\r\n        </div>\r\n        <Table\r\n          rowKey={record => record.key}\r\n          components={components}\r\n          bordered\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          pagination={false}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}