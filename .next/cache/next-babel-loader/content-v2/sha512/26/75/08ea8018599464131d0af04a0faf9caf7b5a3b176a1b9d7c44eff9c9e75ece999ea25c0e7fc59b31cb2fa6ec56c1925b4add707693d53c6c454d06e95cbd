{"ast":null,"code":"import \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/alert/style\";\nimport _Alert from \"antd/lib/alert\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Volumes/ExternalData/Work/vnshop/admin/src/pages/login/index.js\",\n    _dec,\n    _class,\n    _temp;\n\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport { CodeOutlined, LockOutlined, UserOutlined } from '@ant-design/icons';\nimport { Form } from '@ant-design/compatible';\nimport '@ant-design/compatible/assets/index.css';\nimport { md5Hash } from '../../utils/utils';\nimport styles from './index.less';\nimport WithDva from '../../utils/store'; // @connect(({ login }) => ({\n//   login,\n// }))\n\nvar Login = (_dec = Form.create(), _dec(_class = (_temp = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Login, _PureComponent);\n\n  var _super = _createSuper(Login);\n\n  function Login() {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"reloadCaptcha\", function () {\n      _this.dispatch({\n        type: 'login/reloadCaptcha'\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n      var _this$props = _this.props,\n          form = _this$props.form,\n          dispatch = _this$props.dispatch,\n          login = _this$props.login;\n      form.validateFields({\n        force: true\n      }, function (err, values) {\n        if (!err) {\n          dispatch({\n            type: 'login/submit',\n            payload: {\n              user_name: values.user_name,\n              captcha_code: values.captcha_code,\n              captcha_id: login.captchaID,\n              password: md5Hash(values.password)\n            }\n          });\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      console.log(\"Login by google \");\n      window.open('http://localhost:10088', 'Popup', 'location,status,scrollbars,resizable,width=600, height=600');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"dispatch\", function (action) {\n      var dispatch = _this.props.dispatch;\n      dispatch(action);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderMessage\", function (type, message) {\n      return __jsx(_Alert, {\n        style: {\n          marginBottom: 24\n        },\n        message: message,\n        type: type,\n        closable: true,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 5\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.dispatch({\n        type: 'login/loadCaptcha'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          getFieldDecorator = _this$props2.form.getFieldDecorator,\n          login = _this$props2.login;\n      return __jsx(_Row, {\n        type: \"flex\",\n        justify: \"center\",\n        align: \"middle\",\n        style: {\n          minHeight: '100vh'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }, __jsx(_Col, {\n        span: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: styles.main,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }, __jsx(Form, {\n        onSubmit: this.handleSubmit,\n        className: \"login-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, login.status === 'FAIL' && login.submitting === false && this.renderMessage('warning', login.tip), login.status === 'ERROR' && login.submitting === false && this.renderMessage('error', login.tip), __jsx(Form.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }, getFieldDecorator('user_name', {\n        rules: [{\n          required: true,\n          message: 'Please enter username'\n        }]\n      })(__jsx(_Input, {\n        size: \"large\",\n        prefix: __jsx(UserOutlined, {\n          className: styles.prefixIcon,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }\n        }),\n        placeholder: \"Please enter username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 19\n        }\n      }))), __jsx(Form.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please enter password'\n        }]\n      })(__jsx(_Input, {\n        size: \"large\",\n        prefix: __jsx(LockOutlined, {\n          className: styles.prefixIcon,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }\n        }),\n        type: \"password\",\n        placeholder: \"Please enter password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 19\n        }\n      }))), __jsx(Form.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }\n      }, __jsx(_Input.Group, {\n        compact: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, getFieldDecorator('captcha_code', {\n        rules: [{\n          required: true,\n          message: 'Please enter verification code!'\n        }]\n      })(__jsx(_Input, {\n        style: {\n          width: '50%',\n          marginRight: 10\n        },\n        size: \"large\",\n        prefix: __jsx(CodeOutlined, {\n          className: styles.prefixIcon,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 35\n          }\n        }),\n        placeholder: \"Please enter verification code!\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }\n      })), __jsx(\"div\", {\n        style: {\n          width: 120,\n          height: 40\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 19\n        }\n      }, __jsx(\"img\", {\n        style: {\n          maxWidth: '100%',\n          maxHeight: '100%'\n        },\n        src: login.captcha,\n        alt: \"Verification Code\",\n        onClick: function onClick() {\n          _this2.reloadCaptcha();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }\n      })))), __jsx(Form.Item, {\n        wrapperCol: {\n          span: 12,\n          offset: 6\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }\n      }, __jsx(_Button, {\n        size: \"large\",\n        loading: login.submitting,\n        className: styles.submit,\n        type: \"primary\",\n        htmlType: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }\n      }, \"Login\"), __jsx(_Button, {\n        size: \"large\",\n        loading: login.submitting,\n        className: styles.submit,\n        type: \"primary\",\n        htmlType: \"button\",\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }\n      }, \"Google\"))))), \" \");\n    }\n  }]);\n\n  return Login;\n}(PureComponent), _temp)) || _class);\nexport default WithDva(function (_ref) {\n  var login = _ref.login;\n  return {\n    login: login\n  };\n})(Login); // export default Login;","map":{"version":3,"sources":["/Volumes/ExternalData/Work/vnshop/admin/src/pages/login/index.js"],"names":["React","PureComponent","CodeOutlined","LockOutlined","UserOutlined","Form","md5Hash","styles","WithDva","Login","create","dispatch","type","e","preventDefault","props","form","login","validateFields","force","err","values","payload","user_name","captcha_code","captcha_id","captchaID","password","console","log","window","open","action","message","marginBottom","getFieldDecorator","minHeight","main","handleSubmit","status","submitting","renderMessage","tip","rules","required","prefixIcon","width","marginRight","height","maxWidth","maxHeight","captcha","reloadCaptcha","span","offset","submit","handleClick"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Row, Col } from 'antd';\n\nimport { CodeOutlined, LockOutlined, UserOutlined } from '@ant-design/icons';\n\nimport { Form } from '@ant-design/compatible';\n\nimport '@ant-design/compatible/assets/index.css';\nimport { Input, Button, Alert } from 'antd';\nimport { md5Hash } from '../../utils/utils';\n\nimport styles from './index.less';\n\nimport WithDva from '../../utils/store';\n\n// @connect(({ login }) => ({\n//   login,\n// }))\n\n@Form.create()\nclass Login extends PureComponent {\n  componentDidMount() {\n    this.dispatch({\n      type: 'login/loadCaptcha',\n    });\n  }\n\n  reloadCaptcha = () => {\n    this.dispatch({\n      type: 'login/reloadCaptcha',\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { form, dispatch, login } = this.props;\n    form.validateFields({ force: true }, (err, values) => {\n      if (!err) {\n        dispatch({\n          type: 'login/submit',\n          payload: {\n            user_name: values.user_name,\n            captcha_code: values.captcha_code,\n            captcha_id: login.captchaID,\n            password: md5Hash(values.password),\n          },\n        });\n      }\n    });\n  };\n  handleClick = (e) => {\n    console.log(\"Login by google \")\n    window.open('http://localhost:10088',\n      'Popup',\n      'location,status,scrollbars,resizable,width=600, height=600')\n\n  }\n  dispatch = action => {\n    const { dispatch } = this.props;\n    dispatch(action);\n  };\n\n  renderMessage = (type, message) => (\n    <Alert style={{ marginBottom: 24 }} message={message} type={type} closable />\n  );\n\n  render() {\n    const {\n      form: { getFieldDecorator },\n      login,\n    } = this.props;\n\n    return (\n      <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ minHeight: '100vh' }} >\n        <Col span={6}  >\n          <div className={styles.main}>\n\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n              {login.status === 'FAIL' &&\n                login.submitting === false &&\n                this.renderMessage('warning', login.tip)}\n\n              {login.status === 'ERROR' &&\n                login.submitting === false &&\n                this.renderMessage('error', login.tip)}\n\n\n              <Form.Item>\n                {getFieldDecorator('user_name', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Please enter username',\n                    },\n                  ],\n                })(\n                  <Input\n                    size=\"large\"\n                    prefix={<UserOutlined className={styles.prefixIcon} />}\n                    placeholder=\"Please enter username\"\n                  />\n                )}\n              </Form.Item>\n\n              <Form.Item>\n                {getFieldDecorator('password', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Please enter password',\n                    },\n                  ],\n                })(\n                  <Input\n                    size=\"large\"\n                    prefix={<LockOutlined className={styles.prefixIcon} />}\n                    type=\"password\"\n                    placeholder=\"Please enter password\"\n                  />\n                )}\n              </Form.Item>\n\n              <Form.Item>\n                <Input.Group compact>\n                  {\n                    getFieldDecorator('captcha_code', {\n                      rules: [\n                        {\n                          required: true,\n                          message: 'Please enter verification code!',\n                        },\n                      ],\n                    })\n                      (\n                        <Input\n                          style={{ width: '50%', marginRight: 10 }}\n                          size=\"large\"\n                          prefix={<CodeOutlined className={styles.prefixIcon} />}\n                          placeholder=\"Please enter verification code!\"\n                        />\n                      )\n                  }\n                  <div\n                    style={{\n                      width: 120,\n                      height: 40,\n                    }}\n                  >\n                    <img\n                      style={{ maxWidth: '100%', maxHeight: '100%' }}\n                      src={login.captcha}\n                      alt=\"Verification Code\"\n                      onClick={() => {\n                        this.reloadCaptcha();\n                      }}\n                    />\n                  </div>\n                </Input.Group>\n              </Form.Item>\n              <Form.Item wrapperCol={{ span: 12, offset: 6 }} >\n                <Button\n                  size=\"large\"\n                  loading={login.submitting}\n                  className={styles.submit}\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                >\n                  Login\n              </Button>\n                <Button\n                  size=\"large\"\n                  loading={login.submitting}\n                  className={styles.submit}\n                  type=\"primary\"\n                  htmlType=\"button\"\n                  onClick={this.handleClick}>\n                  Google\n              </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        </Col> </Row >\n    );\n  }\n}\n\nexport default WithDva(({ login }) => ({\n  login,\n}))(Login);\n\n// export default Login;\n"]},"metadata":{},"sourceType":"module"}