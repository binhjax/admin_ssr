{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/popconfirm/style\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nvar _jsxFileName = \"/Volumes/ExternalData/Work/vnshop/admin/src/components/Menu/MenuResource/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { newUUID } from '@/utils/utils';\nimport { EditableCell, EditableFormRow } from './EditableCell';\nimport styles from './index.less';\n\nfunction fillKey(data) {\n  if (!data) {\n    return [];\n  }\n\n  return data.map(item => {\n    const nitem = _objectSpread({}, item);\n\n    if (!nitem.key) {\n      nitem.key = newUUID();\n    }\n\n    return nitem;\n  });\n}\n\nexport default class MenuAction extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleAddCancel\", () => {\n      this.setState({\n        addVisible: false\n      });\n    });\n\n    _defineProperty(this, \"handleDelete\", key => {\n      const {\n        dataSource\n      } = this.state;\n      const data = dataSource.filter(item => item.key !== key);\n      this.setState({\n        dataSource: data\n      }, () => {\n        this.triggerChange(data);\n      });\n    });\n\n    _defineProperty(this, \"handleAdd\", () => {\n      const {\n        dataSource\n      } = this.state;\n      const item = {\n        key: newUUID(),\n        method: '',\n        path: ''\n      };\n      const data = [...dataSource, item];\n      this.setState({\n        dataSource: data\n      }, () => {\n        this.triggerChange(data);\n      });\n    });\n\n    _defineProperty(this, \"handleSave\", row => {\n      const {\n        dataSource\n      } = this.state;\n      const data = [...dataSource];\n      const index = data.findIndex(item => row.key === item.key);\n      const item = data[index];\n      data.splice(index, 1, _objectSpread(_objectSpread({}, item), row));\n      this.setState({\n        dataSource: data\n      }, () => {\n        this.triggerChange(data);\n      });\n    });\n\n    _defineProperty(this, \"triggerChange\", data => {\n      const {\n        onChange\n      } = this.props;\n\n      if (onChange) {\n        onChange(data);\n      }\n    });\n\n    this.columns = [{\n      title: 'Request method',\n      dataIndex: 'method',\n      editable: true,\n      width: '30%'\n    }, {\n      title: 'Request path',\n      dataIndex: 'path',\n      editable: true,\n      width: '45%'\n    }, {\n      title: 'Key',\n      dataIndex: 'key',\n      width: '25%',\n      render: (_, record) => {\n        const {\n          dataSource\n        } = this.state;\n\n        if (dataSource.length === 0) {\n          return null;\n        }\n\n        return __jsx(_Popconfirm, {\n          title: \"Are you sure you want to delete this data?\",\n          onConfirm: () => this.handleDelete(record.key),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }\n        }, __jsx(\"a\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }\n        }, \"delete\"));\n      }\n    }];\n    this.state = {\n      dataSource: fillKey(props.value),\n      addVisible: false\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, state) {\n    if ('value' in nextProps) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        dataSource: fillKey(nextProps.value)\n      });\n    }\n\n    return state;\n  }\n\n  render() {\n    const {\n      dataSource\n    } = this.state;\n    const components = {\n      body: {\n        row: EditableFormRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return _objectSpread(_objectSpread({}, col), {}, {\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      });\n    });\n    return __jsx(\"div\", {\n      className: styles.tableList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: styles.tableListOperator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, __jsx(_Button, {\n      onClick: this.handleAdd,\n      size: \"small\",\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, \"Add\")), __jsx(_Table, {\n      rowKey: record => record.key,\n      components: components,\n      bordered: true,\n      dataSource: dataSource,\n      columns: columns,\n      pagination: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Volumes/ExternalData/Work/vnshop/admin/src/components/Menu/MenuResource/index.js"],"names":["React","PureComponent","newUUID","EditableCell","EditableFormRow","styles","fillKey","data","map","item","nitem","key","MenuAction","constructor","props","setState","addVisible","dataSource","state","filter","triggerChange","method","path","row","index","findIndex","splice","onChange","columns","title","dataIndex","editable","width","render","_","record","length","handleDelete","value","getDerivedStateFromProps","nextProps","components","body","cell","col","onCell","handleSave","tableList","tableListOperator","handleAdd"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Table, Button, Popconfirm } from 'antd';\nimport { newUUID } from '@/utils/utils';\nimport { EditableCell, EditableFormRow } from './EditableCell';\n\nimport styles from './index.less';\n\nfunction fillKey(data) {\n  if (!data) {\n    return [];\n  }\n  return data.map(item => {\n    const nitem = { ...item };\n    if (!nitem.key) {\n      nitem.key = newUUID();\n    }\n    return nitem;\n  });\n}\n\nexport default class MenuAction extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.columns = [\n      {\n        title: 'Request method',\n        dataIndex: 'method',\n        editable: true,\n        width: '30%',\n      },\n      {\n        title: 'Request path',\n        dataIndex: 'path',\n        editable: true,\n        width: '45%',\n      },\n      {\n        title: 'Key',\n        dataIndex: 'key',\n        width: '25%',\n        render: (_, record) => {\n          const { dataSource } = this.state;\n          if (dataSource.length === 0) {\n            return null;\n          }\n          return (\n            <Popconfirm\n              title=\"Are you sure you want to delete this data?\"\n              onConfirm={() => this.handleDelete(record.key)}\n            >\n              <a>delete</a>\n            </Popconfirm>\n          );\n        },\n      },\n    ];\n\n    this.state = {\n      dataSource: fillKey(props.value),\n      addVisible: false,\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, state) {\n    if ('value' in nextProps) {\n      return { ...state, dataSource: fillKey(nextProps.value) };\n    }\n    return state;\n  }\n\n  handleAddCancel = () => {\n    this.setState({ addVisible: false });\n  };\n\n  handleDelete = key => {\n    const { dataSource } = this.state;\n    const data = dataSource.filter(item => item.key !== key);\n    this.setState({ dataSource: data }, () => {\n      this.triggerChange(data);\n    });\n  };\n\n  handleAdd = () => {\n    const { dataSource } = this.state;\n    const item = {\n      key: newUUID(),\n      method: '',\n      path: '',\n    };\n\n    const data = [...dataSource, item];\n    this.setState(\n      {\n        dataSource: data,\n      },\n      () => {\n        this.triggerChange(data);\n      }\n    );\n  };\n\n  handleSave = row => {\n    const { dataSource } = this.state;\n    const data = [...dataSource];\n    const index = data.findIndex(item => row.key === item.key);\n    const item = data[index];\n    data.splice(index, 1, {\n      ...item,\n      ...row,\n    });\n    this.setState({ dataSource: data }, () => {\n      this.triggerChange(data);\n    });\n  };\n\n  triggerChange = data => {\n    const { onChange } = this.props;\n    if (onChange) {\n      onChange(data);\n    }\n  };\n\n  render() {\n    const { dataSource } = this.state;\n    const components = {\n      body: {\n        row: EditableFormRow,\n        cell: EditableCell,\n      },\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave,\n        }),\n      };\n    });\n    return (\n      <div className={styles.tableList}>\n        <div className={styles.tableListOperator}>\n          <Button onClick={this.handleAdd} size=\"small\" type=\"primary\">\n            Add\n          </Button>\n        </div>\n        <Table\n          rowKey={record => record.key}\n          components={components}\n          bordered\n          dataSource={dataSource}\n          columns={columns}\n          pagination={false}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}