{"ast":null,"code":"import \"antd/lib/skeleton/style\";\nimport _Skeleton from \"antd/lib/skeleton\";\nimport \"antd/lib/tabs/style\";\nimport _Tabs from \"antd/lib/tabs\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport classNames from 'classnames';\nimport styles from './index.less';\nimport BreadcrumbView from './breadcrumb';\nconst {\n  TabPane\n} = _Tabs;\nexport default class PageHeader extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onChange\", key => {\n      const {\n        onTabChange\n      } = this.props;\n\n      if (onTabChange) {\n        onTabChange(key);\n      }\n    });\n  }\n\n  render() {\n    const {\n      title,\n      logo,\n      action,\n      content,\n      extraContent,\n      tabList,\n      className,\n      tabActiveKey,\n      tabDefaultActiveKey,\n      tabBarExtraContent,\n      loading = false,\n      wide = false,\n      hiddenBreadcrumb = false\n    } = this.props;\n    const clsString = classNames(styles.pageHeader, className);\n    const activeKeyProps = {};\n\n    if (tabDefaultActiveKey !== undefined) {\n      activeKeyProps.defaultActiveKey = tabDefaultActiveKey;\n    }\n\n    if (tabActiveKey !== undefined) {\n      activeKeyProps.activeKey = tabActiveKey;\n    }\n\n    return __jsx(\"div\", {\n      className: clsString\n    }, __jsx(\"div\", {\n      className: wide ? styles.wide : ''\n    }, __jsx(_Skeleton, {\n      loading: loading,\n      title: false,\n      active: true,\n      paragraph: {\n        rows: 3\n      },\n      avatar: {\n        size: 'large',\n        shape: 'circle'\n      }\n    }, hiddenBreadcrumb ? null : __jsx(BreadcrumbView, this.props), __jsx(\"div\", {\n      className: styles.detail\n    }, logo && __jsx(\"div\", {\n      className: styles.logo\n    }, logo), __jsx(\"div\", {\n      className: styles.main\n    }, __jsx(\"div\", {\n      className: styles.row\n    }, title && __jsx(\"h1\", {\n      className: styles.title\n    }, title), action && __jsx(\"div\", {\n      className: styles.action\n    }, action)), __jsx(\"div\", {\n      className: styles.row\n    }, content && __jsx(\"div\", {\n      className: styles.content\n    }, content), extraContent && __jsx(\"div\", {\n      className: styles.extraContent\n    }, extraContent)))), tabList && tabList.length ? __jsx(_Tabs, _extends({\n      className: styles.tabs\n    }, activeKeyProps, {\n      onChange: this.onChange,\n      tabBarExtraContent: tabBarExtraContent\n    }), tabList.map(item => __jsx(TabPane, {\n      tab: item.tab,\n      key: item.key\n    }))) : null)));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}