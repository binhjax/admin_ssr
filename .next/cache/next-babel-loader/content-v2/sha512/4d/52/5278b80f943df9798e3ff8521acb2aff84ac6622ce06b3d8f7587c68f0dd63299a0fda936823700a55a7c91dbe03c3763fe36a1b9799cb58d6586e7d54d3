{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\n\nvar _dec, _class, _temp;\n\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { Form } from '@ant-design/compatible';\nimport '@ant-design/compatible/assets/index.css';\nimport { md5Hash } from '../../utils/utils';\nimport RoleSelect from './RoleSelect';\nimport WithDva from '../../utils/store'; // @connect(state => ({\n//   user: state.user,\n// }))\n\nlet UserCard = (_dec = Form.create(), _dec(_class = (_temp = class UserCard extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onOKClick\", () => {\n      const {\n        form,\n        onSubmit\n      } = this.props;\n      form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          const formData = _objectSpread({}, values);\n\n          formData.status = parseInt(formData.status, 10);\n\n          if (formData.password && formData.password !== '') {\n            formData.password = md5Hash(formData.password);\n          }\n\n          onSubmit(formData);\n        }\n      });\n    });\n\n    _defineProperty(this, \"dispatch\", action => {\n      const {\n        dispatch\n      } = this.props;\n      dispatch(action);\n    });\n  }\n\n  render() {\n    const {\n      onCancel,\n      user: {\n        formType,\n        formTitle,\n        formVisible,\n        formData,\n        submitting\n      },\n      form: {\n        getFieldDecorator\n      }\n    } = this.props;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 6\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    return __jsx(_Modal, {\n      title: formTitle,\n      width: 600,\n      visible: formVisible,\n      maskClosable: false,\n      confirmLoading: submitting,\n      destroyOnClose: true,\n      onOk: this.onOKClick,\n      onCancel: onCancel,\n      style: {\n        top: 20\n      },\n      bodyStyle: {\n        maxHeight: 'calc( 100vh - 158px )',\n        overflowY: 'auto'\n      }\n    }, __jsx(Form, null, __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"Username\"\n    }), getFieldDecorator('user_name', {\n      initialValue: formData.user_name,\n      rules: [{\n        required: true,\n        message: 'please enter username'\n      }]\n    })(__jsx(_Input, {\n      placeholder: \"please enter username\"\n    }))), __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"login password\"\n    }), getFieldDecorator('password', {\n      initialValue: formData.password,\n      rules: [{\n        required: formType === 'A',\n        message: 'Please enter your password'\n      }]\n    })(__jsx(_Input, {\n      type: \"password\",\n      placeholder: formType === 'A' ? 'Please enter your password' : 'Leave blank to not modify the login password'\n    }))), __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"Actual Name\"\n    }), getFieldDecorator('real_name', {\n      initialValue: formData.real_name,\n      rules: [{\n        required: true,\n        message: 'Please enter your name'\n      }]\n    })(__jsx(_Input, {\n      placeholder: \"enter your name\"\n    }))), __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"User Role\"\n    }), getFieldDecorator('user_roles', {\n      initialValue: formData.user_roles,\n      rules: [{\n        required: true,\n        message: 'Please select the role'\n      }]\n    })(__jsx(RoleSelect, null))), __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"User Status\"\n    }), getFieldDecorator('status', {\n      initialValue: formData.status ? formData.status.toString() : '1'\n    })(__jsx(_Radio.Group, null, __jsx(_Radio, {\n      value: \"1\"\n    }, \"Normal\"), __jsx(_Radio, {\n      value: \"2\"\n    }, \"Deactivate\")))), __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"Mailbox\"\n    }), getFieldDecorator('email', {\n      initialValue: formData.email\n    })(__jsx(_Input, {\n      placeholder: \"Please input your email\"\n    }))), __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"Phone Number\"\n    }), getFieldDecorator('phone', {\n      initialValue: formData.phone\n    })(__jsx(_Input, {\n      placeholder: \"Please enter phone number\"\n    })))));\n  }\n\n}, _temp)) || _class);\nexport default WithDva(state => ({\n  user: state.user\n}))(UserCard); // export default UserCard;","map":null,"metadata":{},"sourceType":"module"}