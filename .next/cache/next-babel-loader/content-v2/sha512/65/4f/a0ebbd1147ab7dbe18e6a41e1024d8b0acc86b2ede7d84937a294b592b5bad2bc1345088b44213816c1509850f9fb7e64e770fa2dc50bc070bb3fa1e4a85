{"ast":null,"code":"import \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/alert/style\";\nimport _Alert from \"antd/lib/alert\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _dec, _class, _temp;\n\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport { CodeOutlined, LockOutlined, UserOutlined } from '@ant-design/icons';\nimport { Form } from '@ant-design/compatible';\nimport '@ant-design/compatible/assets/index.css';\nimport { md5Hash } from '../../utils/utils';\nimport { setToken } from '../../utils/request';\nimport styles from './index.less';\nimport WithDva from '../../utils/store'; // @connect(({ login }) => ({\n//   login,\n// }))\n\nvar Login = (_dec = Form.create(), _dec(_class = (_temp = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Login, _PureComponent);\n\n  var _super = _createSuper(Login);\n\n  function Login() {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleToken\", function (event) {\n      console.log(\"Binht. on message  = \", event);\n      var token = event.data.token; // alert(event.data);\n\n      if (token != 'undefined' && token !== undefined && token != null) {\n        // window.sessionStorage.setItem(vars.REACT_APP_CLIENT_ID, token);\n        // var referrer = document.referrer;\n        console.log(\"Binht. callBackRefresh referrer = \", token);\n        setToken(token); // this.setState({\n        //   referrer: referrer,\n        // })\n      } else {\n        console.log(\"Cannot find token \");\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"reloadCaptcha\", function () {\n      _this.dispatch({\n        type: 'login/reloadCaptcha'\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n      var _this$props = _this.props,\n          form = _this$props.form,\n          dispatch = _this$props.dispatch,\n          login = _this$props.login;\n      form.validateFields({\n        force: true\n      }, function (err, values) {\n        if (!err) {\n          dispatch({\n            type: 'login/submit',\n            payload: {\n              user_name: values.user_name,\n              captcha_code: values.captcha_code,\n              captcha_id: login.captchaID,\n              password: md5Hash(values.password)\n            }\n          });\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      console.log(\"Login by google \");\n      window.open('http://localhost:10088', 'Popup', 'location,status,scrollbars,resizable,width=600, height=600');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"dispatch\", function (action) {\n      var dispatch = _this.props.dispatch;\n      dispatch(action);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderMessage\", function (type, message) {\n      return __jsx(_Alert, {\n        style: {\n          marginBottom: 24\n        },\n        message: message,\n        type: type,\n        closable: true\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // window.addEventListener('token', this.handleToken);\n      window.addEventListener(\"message\", this.handleToken);\n      this.dispatch({\n        type: 'login/loadCaptcha'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          getFieldDecorator = _this$props2.form.getFieldDecorator,\n          login = _this$props2.login;\n      return __jsx(_Row, {\n        type: \"flex\",\n        justify: \"center\",\n        align: \"middle\",\n        style: {\n          minHeight: '100vh'\n        }\n      }, __jsx(_Col, {\n        span: 6\n      }, __jsx(\"div\", {\n        className: styles.main\n      }, __jsx(Form, {\n        onSubmit: this.handleSubmit,\n        className: \"login-form\"\n      }, login.status === 'FAIL' && login.submitting === false && this.renderMessage('warning', login.tip), login.status === 'ERROR' && login.submitting === false && this.renderMessage('error', login.tip), __jsx(Form.Item, null, getFieldDecorator('user_name', {\n        rules: [{\n          required: true,\n          message: 'Please enter username'\n        }]\n      })(__jsx(_Input, {\n        size: \"large\",\n        prefix: __jsx(UserOutlined, {\n          className: styles.prefixIcon\n        }),\n        placeholder: \"Please enter username\"\n      }))), __jsx(Form.Item, null, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please enter password'\n        }]\n      })(__jsx(_Input, {\n        size: \"large\",\n        prefix: __jsx(LockOutlined, {\n          className: styles.prefixIcon\n        }),\n        type: \"password\",\n        placeholder: \"Please enter password\"\n      }))), __jsx(Form.Item, null, __jsx(_Input.Group, {\n        compact: true\n      }, getFieldDecorator('captcha_code', {\n        rules: [{\n          required: true,\n          message: 'Please enter verification code!'\n        }]\n      })(__jsx(_Input, {\n        style: {\n          width: '50%',\n          marginRight: 10\n        },\n        size: \"large\",\n        prefix: __jsx(CodeOutlined, {\n          className: styles.prefixIcon\n        }),\n        placeholder: \"Please enter verification code!\"\n      })), __jsx(\"div\", {\n        style: {\n          width: 120,\n          height: 40\n        }\n      }, __jsx(\"img\", {\n        style: {\n          maxWidth: '100%',\n          maxHeight: '100%'\n        },\n        src: login.captcha,\n        alt: \"Verification Code\",\n        onClick: function onClick() {\n          _this2.reloadCaptcha();\n        }\n      })))), __jsx(Form.Item, {\n        className: styles.additional\n      }, __jsx(_Button, {\n        size: \"large\",\n        loading: login.submitting,\n        className: styles.submit,\n        type: \"primary\",\n        htmlType: \"submit\"\n      }, \"Login\"), __jsx(_Button, {\n        size: \"large\",\n        loading: login.submitting,\n        className: styles.submit,\n        type: \"primary\",\n        htmlType: \"button\",\n        onClick: this.handleClick\n      }, \"Google\"))))), \" \");\n    }\n  }]);\n\n  return Login;\n}(PureComponent), _temp)) || _class);\nexport default WithDva(function (_ref) {\n  var login = _ref.login;\n  return {\n    login: login\n  };\n})(Login); // export default Login;","map":null,"metadata":{},"sourceType":"module"}