{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/home/tuanquang/admin_ssr/src/components/Test/BodyWidget.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 100%;\\n  position: relative;\\n  flex-grow: 1;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport ActionMenu from './components/ActionMenu';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport DemoCanvasWidget from '../helpers/DemoCanvasWidget';\nimport { CustomNodeModel } from './CustomNodeModel';\nimport styled from '@emotion/styled';\nexport var Layer = styled.div(_templateObject());\n_c = Layer;\n\nvar BodyWidget = function BodyWidget(props) {\n  _s();\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      updateState = _React$useState2[1];\n\n  var forceUpdate = React.useCallback(function () {\n    return updateState({});\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: 10,\n        background: '#fff'\n      },\n      children: /*#__PURE__*/_jsxDEV(ActionMenu, {\n        app: props.app\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Layer, {\n      onClick: function onClick(e) {\n        e.stopPropagation();\n        setSelectedPort(undefined);\n      },\n      onDrop: function onDrop(event) {\n        var node;\n        node = new CustomNodeModel('Name');\n        var point = props.app.getDiagramEngine().getRelativeMousePoint(event);\n        node.setPosition(point);\n        props.app.getDiagramEngine().getModel().addNode(node);\n        forceUpdate();\n      },\n      onDragOver: function onDragOver(event) {\n        event.preventDefault();\n      },\n      children: /*#__PURE__*/_jsxDEV(DemoCanvasWidget, {\n        background: \"#ffff\",\n        children: /*#__PURE__*/_jsxDEV(CanvasWidget, {\n          engine: props.app.getDiagramEngine()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(BodyWidget, \"X5rEjsBNP/fh1FQA6Gy+z8f0U8w=\");\n\n_c2 = BodyWidget;\nexport default BodyWidget;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Layer\");\n$RefreshReg$(_c2, \"BodyWidget\");","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Test/BodyWidget.tsx"],"names":["React","ActionMenu","CanvasWidget","DemoCanvasWidget","CustomNodeModel","styled","Layer","div","BodyWidget","props","useState","updateState","forceUpdate","useCallback","height","display","justifyContent","alignItems","padding","background","app","e","stopPropagation","setSelectedPort","undefined","event","node","point","getDiagramEngine","getRelativeMousePoint","setPosition","getModel","addNode","preventDefault"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AAGA,SAASC,YAAT,QAA6B,iCAA7B;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAYA,OAAO,IAAMC,KAAK,GAAGD,MAAM,CAACE,GAAV,mBAAX;KAAMD,K;;AAMb,IAAME,UAAqC,GAAG,SAAxCA,UAAwC,CAAAC,KAAK,EAAI;AAAA;;AAAA,wBAC7BT,KAAK,CAACU,QAAN,EAD6B;AAAA;AAAA,MAC5CC,WAD4C;;AAGrD,MAAMC,WAAW,GAAGZ,KAAK,CAACa,WAAN,CAAkB;AAAA,WAAMF,WAAW,CAAC,EAAD,CAAjB;AAAA,GAAlB,EAAyC,EAAzC,CAApB;AAEA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEG,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA,4BACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,cAAc,EAAE,QAFX;AAGLC,QAAAA,UAAU,EAAE,QAHP;AAILC,QAAAA,OAAO,EAAE,EAJJ;AAKLC,QAAAA,UAAU,EAAE;AALP,OADT;AAAA,6BASE,QAAC,UAAD;AAAY,QAAA,GAAG,EAAEV,KAAK,CAACW;AAAvB;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,aADF,eAYE,QAAC,KAAD;AACE,MAAA,OAAO,EAAE,iBAAAC,CAAC,EAAI;AACZA,QAAAA,CAAC,CAACC,eAAF;AACAC,QAAAA,eAAe,CAACC,SAAD,CAAf;AACD,OAJH;AAKE,MAAA,MAAM,EAAE,gBAAAC,KAAK,EAAI;AACf,YAAIC,IAAJ;AACAA,QAAAA,IAAI,GAAG,IAAItB,eAAJ,CAAoB,MAApB,CAAP;AACA,YAAIuB,KAAK,GAAGlB,KAAK,CAACW,GAAN,CAAUQ,gBAAV,GAA6BC,qBAA7B,CAAmDJ,KAAnD,CAAZ;AACAC,QAAAA,IAAI,CAACI,WAAL,CAAiBH,KAAjB;AACAlB,QAAAA,KAAK,CAACW,GAAN,CACGQ,gBADH,GAEGG,QAFH,GAGGC,OAHH,CAGWN,IAHX;AAIAd,QAAAA,WAAW;AACZ,OAfH;AAgBE,MAAA,UAAU,EAAE,oBAAAa,KAAK,EAAI;AACnBA,QAAAA,KAAK,CAACQ,cAAN;AACD,OAlBH;AAAA,6BAoBE,QAAC,gBAAD;AAAkB,QAAA,UAAU,EAAC,OAA7B;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,MAAM,EAAExB,KAAK,CAACW,GAAN,CAAUQ,gBAAV;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AApBF;AAAA;AAAA;AAAA;AAAA,aAZF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAuCD,CA5CD;;GAAMpB,U;;MAAAA,U;AA6CN,eAAeA,UAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport ActionMenu from './components/ActionMenu';\n\nimport { Application } from './Application';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport DemoCanvasWidget from '../helpers/DemoCanvasWidget';\nimport { CustomNodeModel } from './CustomNodeModel';\nimport styled from '@emotion/styled';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Card, Col, Row, Modal } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { PortModel } from '@projectstorm/react-diagrams-core';\nimport { CustomPortModel } from './CustomPortModel';\n// import * as action from '../../actions/node';\nimport { CustomLinkModel } from './CustomLinkModel';\nexport interface BodyWidgetProps {\n  app: Application;\n}\n\nexport const Layer = styled.div`\n  height: 100%;\n  position: relative;\n  flex-grow: 1;\n`;\n\nconst BodyWidget: React.FC<BodyWidgetProps> = props => {\n  const [, updateState] = React.useState();\n\n  const forceUpdate = React.useCallback(() => updateState({}), []);\n\n  return (\n    <div style={{ height: '100%' }}>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          padding: 10,\n          background: '#fff',\n        }}\n      >\n        <ActionMenu app={props.app} />\n      </div>\n      <Layer\n        onClick={e => {\n          e.stopPropagation();\n          setSelectedPort(undefined);\n        }}\n        onDrop={event => {\n          var node: CustomNodeModel;\n          node = new CustomNodeModel('Name');\n          var point = props.app.getDiagramEngine().getRelativeMousePoint(event);\n          node.setPosition(point);\n          props.app\n            .getDiagramEngine()\n            .getModel()\n            .addNode(node);\n          forceUpdate();\n        }}\n        onDragOver={event => {\n          event.preventDefault();\n        }}\n      >\n        <DemoCanvasWidget background=\"#ffff\">\n          <CanvasWidget engine={props.app.getDiagramEngine()} />\n        </DemoCanvasWidget>\n      </Layer>\n    </div>\n  );\n};\nexport default BodyWidget;\n"]},"metadata":{},"sourceType":"module"}