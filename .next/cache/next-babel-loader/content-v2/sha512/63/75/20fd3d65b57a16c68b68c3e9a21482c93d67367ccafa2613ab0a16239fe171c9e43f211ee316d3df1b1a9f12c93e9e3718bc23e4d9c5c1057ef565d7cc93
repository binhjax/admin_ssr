{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/nguyenthanhbinh/Work/vnshop/admin/src/components/PermButton/index.js\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport context from '@/utils/context';\nexport default (function (_ref) {\n  var code = _ref.code,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"code\", \"children\"]);\n\n  var GlobalContext = context.GlobalContext;\n  var pathname = \"\";\n\n  if (true) {\n    pathname = window.location.pathname;\n  } // useEffect(function mount() {\n  //   pathname = window.location.pathname\n  //   return function unMount() {\n  //     //Do something when unmoun\n  //   };\n  // });\n\n\n  return __jsx(GlobalContext.Consumer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, function (global) {\n    var menuPaths = global.menuPaths;\n\n    if (menuPaths) {\n      var item = menuPaths[pathname];\n\n      if (item && item.actions) {\n        var actions = item.actions;\n\n        for (var i = 0; i < actions.length; i += 1) {\n          if (actions[i].code === code) {\n            return __jsx(_Button, _extends({}, rest, {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 26\n              }\n            }), children);\n          }\n        }\n      }\n    }\n\n    return null;\n  });\n});","map":{"version":3,"sources":["/Users/nguyenthanhbinh/Work/vnshop/admin/src/components/PermButton/index.js"],"names":["React","useEffect","context","code","children","rest","GlobalContext","pathname","window","location","global","menuPaths","item","actions","i","length"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,OAAP,MAAoB,iBAApB;AAEA,gBAAe,gBAAiC;AAAA,MAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAXC,IAAW;;AAAA,MAGtCC,aAHsC,GAGpBJ,OAHoB,CAGtCI,aAHsC;AAM9C,MAAIC,QAAQ,GAAG,EAAf;;AACA,YAAmC;AACjCA,IAAAA,QAAQ,GAAGC,MAAM,CAACC,QAAP,CAAgBF,QAA3B;AACD,GAT6C,CAW9C;AACA;AACA;AACA;AACA;AACA;;;AAEA,SACE,MAAC,aAAD,CAAe,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,UAAAG,MAAM,EAAI;AAAA,QACAC,SADA,GACcD,MADd,CACAC,SADA;;AAER,QAAIA,SAAJ,EAAe;AACb,UAAMC,IAAI,GAAGD,SAAS,CAACJ,QAAD,CAAtB;;AACA,UAAIK,IAAI,IAAIA,IAAI,CAACC,OAAjB,EAA0B;AAAA,YAChBA,OADgB,GACJD,IADI,CAChBC,OADgB;;AAExB,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,OAAO,CAACE,MAA5B,EAAoCD,CAAC,IAAI,CAAzC,EAA4C;AAC1C,cAAID,OAAO,CAACC,CAAD,CAAP,CAAWX,IAAX,KAAoBA,IAAxB,EAA8B;AAC5B,mBAAO,4BAAYE,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAmBD,QAAnB,CAAP;AACD;AACF;AACF;AACF;;AACD,WAAO,IAAP;AACD,GAhBL,CADF;AAoBD,CAtCD","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Button } from 'antd';\r\nimport context from '@/utils/context';\r\n\r\nexport default ({ code, children, ...rest }) => {\r\n\r\n\r\n  const { GlobalContext } = context;\r\n\r\n\r\n  let pathname = \"\";\r\n  if (typeof window !== \"undefined\") {\r\n    pathname = window.location.pathname\r\n  }\r\n\r\n  // useEffect(function mount() {\r\n  //   pathname = window.location.pathname\r\n  //   return function unMount() {\r\n  //     //Do something when unmoun\r\n  //   };\r\n  // });\r\n\r\n  return (\r\n    <GlobalContext.Consumer>\r\n      {\r\n        global => {\r\n          const { menuPaths } = global;\r\n          if (menuPaths) {\r\n            const item = menuPaths[pathname];\r\n            if (item && item.actions) {\r\n              const { actions } = item;\r\n              for (let i = 0; i < actions.length; i += 1) {\r\n                if (actions[i].code === code) {\r\n                  return <Button {...rest}>{children}</Button>;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          return null;\r\n        }}\r\n    </GlobalContext.Consumer>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}