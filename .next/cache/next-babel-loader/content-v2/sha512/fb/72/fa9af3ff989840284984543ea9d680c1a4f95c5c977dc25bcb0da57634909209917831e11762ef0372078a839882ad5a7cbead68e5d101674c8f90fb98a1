{"ast":null,"code":"import \"antd/lib/popover/style\";\nimport _Popover from \"antd/lib/popover\";\nimport \"antd/lib/auto-complete/style\";\nimport _AutoComplete from \"antd/lib/auto-complete\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _defineProperty from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _slicedToArray from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/typography/style\";\nimport _Typography from \"antd/lib/typography\";\n\nvar _jsxFileName = \"/home/tuanquang/admin_ssr/src/components/CustomNode/CustomNodeWidget.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 20px;\\n  height: 20px;\\n  background: #f6f6f6;\\n  cursor: pointer;\\n  margin-top: 5px;\\n\\n  &:hover {\\n    background: #deecf3;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as action from '../../actions/node';\nimport { PortWidget } from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\nimport { TYPE } from '../../const';\nimport { ExclamationCircleOutlined, PlusOutlined, EditOutlined, KeyOutlined, MoreOutlined, DeleteOutlined } from '@ant-design/icons';\nvar Text = _Typography.Text;\nvar Option = _Select.Option;\n\n/**\n * @author Nguyen Tuan Quang\n */\nexport var Port = styled.div(_templateObject());\n_c = Port;\nvar styles = {\n  cardHeader: {\n    color: 'white',\n    border: ' 0 solid #e2e8f0',\n    fontWeight: 400,\n    fontSize: '20px',\n    padding: '5px 20px',\n    height: '40px',\n    background: '#316896',\n    marginBottom: '-2px'\n  },\n  rightPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '380px'\n  },\n  leftPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '0'\n  },\n  fieldText: {\n    fontSize: '20px'\n  }\n};\n\nvar CustomNodeWidget = function CustomNodeWidget(props) {\n  _s();\n\n  // const { dispatch } = props;\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      editNode = _React$useState2[0],\n      setEditNode = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      name = _React$useState4[0],\n      setName = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      hover = _React$useState6[0],\n      setHover = _React$useState6[1];\n\n  var ports = useSelector(function (state) {\n    return state.node.ports;\n  });\n  var dispatch = useDispatch();\n\n  var save = function save() {\n    props.node.addCustomPort('new_col', '', '');\n    props.engine.repaintCanvas();\n  };\n\n  var confirm = function confirm() {\n    _Modal.confirm({\n      title: 'Confirm',\n      icon: __jsx(ExclamationCircleOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }),\n      content: 'Confirm delete table',\n      okText: 'Yes',\n      cancelText: 'No',\n      onOk: function onOk() {\n        props.node.remove();\n        props.engine.repaintCanvas();\n      }\n    });\n  };\n\n  var confirmDeletePort = function confirmDeletePort(port) {\n    _Modal.confirm({\n      title: 'Confirm',\n      icon: __jsx(ExclamationCircleOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }),\n      content: 'Confirm delete port',\n      okText: 'Yes',\n      cancelText: 'No',\n      onOk: function onOk() {\n        props.node.removePort(port);\n        dispatch(action.setPorts(props.node.getPorts()));\n        props.engine.repaintCanvas();\n      }\n    });\n  };\n\n  var openEdit = function openEdit() {\n    setEditNode(true);\n    setName(props.node.getOptions().extras);\n    dispatch(action.setPorts(props.node.getPorts()));\n  };\n\n  var closeEdit = function closeEdit() {\n    setEditNode(false);\n    setName('');\n  };\n\n  var handelChangeName = function handelChangeName(e) {\n    setName(e.target.value);\n  };\n\n  var handleChangePort = function handleChangePort(e) {\n    var _e$target = e.target,\n        id = _e$target.id,\n        name = _e$target.name,\n        value = _e$target.value;\n    ports[name].getOptions().extras[id] = value;\n    dispatch(action.setPorts(_objectSpread({}, ports)));\n  };\n\n  var submit = function submit() {\n    props.node.setName(name);\n    closeEdit();\n  };\n\n  var handleDeleteButton = function handleDeleteButton(e, value) {\n    e.stopPropagation();\n\n    if (e.key === 'Delete') {\n      confirmDeletePort(value);\n    }\n  };\n\n  var handleRowClick = function handleRowClick(e, key, value) {\n    setHover(key);\n    dispatch(action.setPort(value));\n    props.node.setSelected(false);\n  };\n\n  var selectTable = function selectTable(e) {\n    props.node.setSelected(false);\n    dispatch(action.setSelectedNode(props.node));\n    dispatch(action.setActive('table'));\n  };\n\n  var content = __jsx(_Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, __jsx(_Button, {\n    type: \"ghost\",\n    icon: __jsx(PlusOutlined, {\n      style: {\n        color: 'green'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }),\n    onClick: function onClick() {\n      return save();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }), __jsx(_Button, {\n    type: \"ghost\",\n    icon: __jsx(EditOutlined, {\n      style: {\n        color: 'cyan'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }),\n    onClick: function onClick() {\n      return openEdit();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }), __jsx(_Button, {\n    type: \"ghost\",\n    icon: __jsx(DeleteOutlined, {\n      style: {\n        color: 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }),\n    onClick: function onClick() {\n      return confirm();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }));\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, __jsx(_Modal, {\n    visible: editNode,\n    onCancel: function onCancel() {\n      return closeEdit();\n    },\n    okText: \"Save\",\n    cancelText: \"Cancel\",\n    onOk: function onOk() {\n      return submit();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, \"Name:\", __jsx(_Input, {\n    value: name,\n    name: \"name\",\n    key: \"name\",\n    onChange: handelChangeName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }), \"Body:\", ports !== undefined ? Object.entries(ports).map(function (_ref, index) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return value.getOptions().extras.key === 'PRIMARY KEY' ? __jsx(_Row, {\n      gutter: 16,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, __jsx(_Col, {\n      span: \"10\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }, __jsx(_Input, {\n      id: \"name\",\n      value: value.getOptions().extras.name,\n      name: key,\n      key: index,\n      onChange: handleChangePort,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    })), __jsx(_Col, {\n      span: \"8\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 19\n      }\n    }, __jsx(_AutoComplete, {\n      style: {\n        width: 150\n      },\n      options: TYPE,\n      filterOption: function filterOption(inputValue, option) {\n        return option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1;\n      },\n      value: value.getOptions().extras.type,\n      onChange: function onChange(type) {\n        value.getOptions().extras.type = type;\n        dispatch(action.setPorts(_objectSpread({}, ports)));\n      },\n      onSelect: function onSelect(type) {\n        value.getOptions().extras.type = type;\n        dispatch(action.setPorts(_objectSpread({}, ports)));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    })), __jsx(_Col, {\n      span: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 19\n      }\n    }, __jsx(_Select, {\n      defaultValue: value.getOptions().extras.key,\n      style: {\n        width: 120\n      },\n      onChange: function onChange(key) {\n        value.getOptions().extras.key = key;\n        dispatch(action.setPorts(_objectSpread({}, ports)));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }, __jsx(Option, {\n      value: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 23\n      }\n    }, \"null\"), __jsx(Option, {\n      value: \"PRIMARY KEY\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 23\n      }\n    }, \"PRIMARY KEY\")))) : '';\n  }) : '', __jsx(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }), ports !== undefined ? Object.entries(ports).map(function (_ref3, index) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        key = _ref4[0],\n        value = _ref4[1];\n\n    return value.getOptions().extras.key !== 'PRIMARY KEY' ? __jsx(_Row, {\n      gutter: 16,\n      key: index,\n      style: {\n        paddingTop: '5px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }\n    }, __jsx(_Col, {\n      span: \"10\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 19\n      }\n    }, __jsx(_Input, {\n      id: \"name\",\n      value: value.getOptions().extras.name,\n      name: key,\n      key: index,\n      onChange: handleChangePort,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }\n    })), __jsx(_Col, {\n      span: \"8\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 19\n      }\n    }, __jsx(_AutoComplete, {\n      style: {\n        width: 150\n      },\n      options: TYPE,\n      filterOption: function filterOption(inputValue, option) {\n        return option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1;\n      },\n      value: value.getOptions().extras.type,\n      onChange: function onChange(type) {\n        value.getOptions().extras.type = type;\n        dispatch(action.setPorts(_objectSpread({}, ports)));\n      },\n      onSelect: function onSelect(type) {\n        value.getOptions().extras.type = type;\n        dispatch(action.setPorts(_objectSpread({}, ports)));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }\n    })), __jsx(_Col, {\n      span: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 19\n      }\n    }, __jsx(_Select, {\n      defaultValue: value.getOptions().extras.key,\n      style: {\n        width: 120\n      },\n      onChange: function onChange(key) {\n        value.getOptions().extras.key = key;\n        dispatch(action.setPorts(_objectSpread({}, ports)));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }\n    }, __jsx(Option, {\n      value: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 23\n      }\n    }, \"null\"), __jsx(Option, {\n      value: \"PRIMARY KEY\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 23\n      }\n    }, \"PRIMARY KEY\")))) : '';\n  }) : ''), __jsx(\"div\", {\n    className: 'custom-node',\n    style: {\n      position: 'relative',\n      minWidth: props.size * 4,\n      minHeight: props.size\n    },\n    onKeyDown: function onKeyDown(e) {\n      e.stopPropagation();\n\n      if (e.key === 'Delete') {\n        confirm();\n      }\n    },\n    onClick: function onClick(e) {\n      selectTable(e);\n    },\n    tabIndex: -1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: styles.cardHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }, props.node.getOptions().extras)), __jsx(\"div\", {\n    style: {\n      background: '#F6F6F6',\n      padding: '20px',\n      border: 'none'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '0',\n      right: '0'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 11\n    }\n  }, __jsx(_Popover, {\n    placement: \"rightBottom\",\n    content: content,\n    trigger: \"focus\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }\n  }, __jsx(_Button, {\n    type: \"ghost\",\n    style: {\n      border: 'none'\n    },\n    icon: __jsx(MoreOutlined, {\n      style: {\n        color: 'white',\n        fontSize: '20px',\n        paddingTop: '5px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 19\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 15\n    }\n  }))), Object.entries(props.node.getPorts()).map(function (_ref5, index) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n        key = _ref6[0],\n        value = _ref6[1];\n\n    return value.getOptions().extras.key === 'PRIMARY KEY' ? __jsx(_Row, {\n      key: index,\n      onFocus: function onFocus() {\n        return setHover(key);\n      },\n      onBlur: function onBlur() {\n        return setHover('');\n      },\n      style: {\n        backgroundColor: hover === key ? '#4770FF' : '',\n        fontWeight: 'bold',\n        fontSize: '20px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 15\n      }\n    }, __jsx(PortWidget, {\n      port: value,\n      engine: props.engine,\n      style: styles.leftPort,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }\n    }, __jsx(Port, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 19\n      }\n    })), __jsx(PortWidget, {\n      port: value,\n      engine: props.engine,\n      style: styles.rightPort,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }\n    }, __jsx(Port, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 19\n      }\n    })), __jsx(_Col, {\n      span: 10,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 19\n      }\n    }, value.getOptions().extras.name)), __jsx(_Col, {\n      span: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }\n    }, __jsx(Text, {\n      style: {\n        color: '#dbdd4d'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 19\n      }\n    }, value.getOptions().extras.type)), __jsx(_Col, {\n      span: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 19\n      }\n    }, \"PK\")), __jsx(_Col, {\n      span: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }\n    }, __jsx(KeyOutlined, {\n      style: {\n        color: 'yellow',\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 19\n      }\n    }))) : '';\n  }), __jsx(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 11\n    }\n  }), Object.entries(props.node.getPorts()).map(function (_ref7, index) {\n    var _ref8 = _slicedToArray(_ref7, 2),\n        key = _ref8[0],\n        value = _ref8[1];\n\n    return value.getOptions().extras.key !== 'PRIMARY KEY' ? __jsx(_Row, {\n      key: index,\n      onClick: function onClick(e) {\n        return handleRowClick(e, key, value);\n      },\n      onBlur: function onBlur() {\n        return setHover('');\n      },\n      style: {\n        backgroundColor: hover === key ? '#deecf3' : ''\n      },\n      onKeyDown: function onKeyDown(e) {\n        return handleDeleteButton(e, value);\n      },\n      tabIndex: -1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 15\n      }\n    }, __jsx(PortWidget, {\n      port: value,\n      engine: props.engine,\n      style: styles.leftPort,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }\n    }, __jsx(Port, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 19\n      }\n    })), __jsx(PortWidget, {\n      port: value,\n      engine: props.engine,\n      style: styles.rightPort,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 17\n      }\n    }, __jsx(Port, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 19\n      }\n    })), __jsx(_Col, {\n      lg: 10,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 17\n      }\n    }, __jsx(Text, {\n      style: styles.fieldText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 19\n      }\n    }, value.getOptions().extras.name)), __jsx(_Col, {\n      lg: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 17\n      }\n    }, __jsx(Text, {\n      style: styles.fieldText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 19\n      }\n    }, value.getOptions().extras.type)), __jsx(_Col, {\n      lg: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }\n    }, __jsx(Text, {\n      style: styles.fieldText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 19\n      }\n    }, value.getOptions().extras.key))) : '';\n  }))));\n};\n\n_s(CustomNodeWidget, \"y/WvXCA/kAY/dplOnBL6yQiSMi4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c2 = CustomNodeWidget;\nexport default CustomNodeWidget;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Port\");\n$RefreshReg$(_c2, \"CustomNodeWidget\");","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/CustomNode/CustomNodeWidget.tsx"],"names":["React","useDispatch","useSelector","action","PortWidget","styled","TYPE","ExclamationCircleOutlined","PlusOutlined","EditOutlined","KeyOutlined","MoreOutlined","DeleteOutlined","Text","Option","Port","div","styles","cardHeader","color","border","fontWeight","fontSize","padding","height","background","marginBottom","rightPort","width","position","left","leftPort","fieldText","CustomNodeWidget","props","useState","editNode","setEditNode","name","setName","hover","setHover","ports","state","node","dispatch","save","addCustomPort","engine","repaintCanvas","confirm","title","icon","content","okText","cancelText","onOk","remove","confirmDeletePort","port","removePort","setPorts","getPorts","openEdit","getOptions","extras","closeEdit","handelChangeName","e","target","value","handleChangePort","id","submit","handleDeleteButton","stopPropagation","key","handleRowClick","setPort","setSelected","selectTable","setSelectedNode","setActive","undefined","Object","entries","map","index","inputValue","option","toUpperCase","indexOf","type","paddingTop","minWidth","size","minHeight","top","right","backgroundColor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,KAAKC,MAAZ,MAAwB,oBAAxB;AACA,SAAwBC,UAAxB,QAAqD,8BAArD;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SACEC,yBADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,YALF,EAMEC,cANF,QAOO,mBAPP;IASQC,I,eAAAA,I;IACAC,M,WAAAA,M;;AAOR;AACA;AACA;AACA,OAAO,IAAMC,IAAI,GAAGV,MAAM,CAACW,GAAV,mBAAV;KAAMD,I;AAYb,IAAME,MAAM,GAAG;AACbC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE,OADG;AAEVC,IAAAA,MAAM,EAAE,kBAFE;AAGVC,IAAAA,UAAU,EAAE,GAHF;AAIVC,IAAAA,QAAQ,EAAE,MAJA;AAKVC,IAAAA,OAAO,EAAE,UALC;AAMVC,IAAAA,MAAM,EAAE,MANE;AAOVC,IAAAA,UAAU,EAAE,SAPF;AAQVC,IAAAA,YAAY,EAAE;AARJ,GADC;AAWbC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE,MADE;AAETJ,IAAAA,MAAM,EAAE,MAFC;AAGTK,IAAAA,QAAQ,EAAE,UAHD;AAITC,IAAAA,IAAI,EAAE;AAJG,GAXE;AAiBbC,EAAAA,QAAQ,EAAE;AACRH,IAAAA,KAAK,EAAE,MADC;AAERJ,IAAAA,MAAM,EAAE,MAFA;AAGRK,IAAAA,QAAQ,EAAE,UAHF;AAIRC,IAAAA,IAAI,EAAE;AAJE,GAjBG;AAuBbE,EAAAA,SAAS,EAAE;AAAEV,IAAAA,QAAQ,EAAE;AAAZ;AAvBE,CAAf;;AAyBA,IAAMW,gBAAiD,GAAG,SAApDA,gBAAoD,CAACC,KAAD,EAAW;AAAA;;AACnE;AADmE,wBAGnClC,KAAK,CAACmC,QAAN,CAAe,KAAf,CAHmC;AAAA;AAAA,MAG5DC,QAH4D;AAAA,MAGlDC,WAHkD;;AAAA,yBAI3CrC,KAAK,CAACmC,QAAN,CAAe,EAAf,CAJ2C;AAAA;AAAA,MAI5DG,IAJ4D;AAAA,MAItDC,OAJsD;;AAAA,yBAKzCvC,KAAK,CAACmC,QAAN,CAAe,EAAf,CALyC;AAAA;AAAA,MAK5DK,KAL4D;AAAA,MAKrDC,QALqD;;AAMnE,MAAMC,KAAiC,GAAGxC,WAAW,CAAC,UAACyC,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAN,CAAWF,KAAtB;AAAA,GAAD,CAArD;AACA,MAAMG,QAAQ,GAAG5C,WAAW,EAA5B;;AACA,MAAM6C,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjBZ,IAAAA,KAAK,CAACU,IAAN,CAAWG,aAAX,CAAyB,SAAzB,EAAoC,EAApC,EAAwC,EAAxC;AACAb,IAAAA,KAAK,CAACc,MAAN,CAAaC,aAAb;AACD,GAHD;;AAIA,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,WAAMA,OAAN,CAAc;AACZC,MAAAA,KAAK,EAAE,SADK;AAEZC,MAAAA,IAAI,EAAE,MAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFM;AAGZC,MAAAA,OAAO,EAAE,sBAHG;AAIZC,MAAAA,MAAM,EAAE,KAJI;AAKZC,MAAAA,UAAU,EAAE,IALA;AAMZC,MAAAA,IANY,kBAML;AACLtB,QAAAA,KAAK,CAACU,IAAN,CAAWa,MAAX;AACAvB,QAAAA,KAAK,CAACc,MAAN,CAAaC,aAAb;AACD;AATW,KAAd;AAWD,GAZD;;AAaA,MAAMS,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,IAAD,EAAqB;AAC7C,WAAMT,OAAN,CAAc;AACZC,MAAAA,KAAK,EAAE,SADK;AAEZC,MAAAA,IAAI,EAAE,MAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFM;AAGZC,MAAAA,OAAO,EAAE,qBAHG;AAIZC,MAAAA,MAAM,EAAE,KAJI;AAKZC,MAAAA,UAAU,EAAE,IALA;AAMZC,MAAAA,IANY,kBAML;AACLtB,QAAAA,KAAK,CAACU,IAAN,CAAWgB,UAAX,CAAsBD,IAAtB;AACAd,QAAAA,QAAQ,CAAC1C,MAAM,CAAC0D,QAAP,CAAgB3B,KAAK,CAACU,IAAN,CAAWkB,QAAX,EAAhB,CAAD,CAAR;AACA5B,QAAAA,KAAK,CAACc,MAAN,CAAaC,aAAb;AACD;AAVW,KAAd;AAYD,GAbD;;AAcA,MAAMc,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB1B,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,OAAO,CAACL,KAAK,CAACU,IAAN,CAAWoB,UAAX,GAAwBC,MAAzB,CAAP;AACApB,IAAAA,QAAQ,CAAC1C,MAAM,CAAC0D,QAAP,CAAgB3B,KAAK,CAACU,IAAN,CAAWkB,QAAX,EAAhB,CAAD,CAAR;AACD,GAJD;;AAKA,MAAMI,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB7B,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAHD;;AAIA,MAAM4B,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD,EAAY;AACnC7B,IAAAA,OAAO,CAAC6B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD;;AAGA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACH,CAAD,EAAO;AAAA,oBACFA,CAAC,CAACC,MADA;AAAA,QACtBG,EADsB,aACtBA,EADsB;AAAA,QAClBlC,IADkB,aAClBA,IADkB;AAAA,QACZgC,KADY,aACZA,KADY;AAG9B5B,IAAAA,KAAK,CAACJ,IAAD,CAAL,CAAY0B,UAAZ,GAAyBC,MAAzB,CAAgCO,EAAhC,IAAsCF,KAAtC;AACAzB,IAAAA,QAAQ,CAAC1C,MAAM,CAAC0D,QAAP,mBAAqBnB,KAArB,EAAD,CAAR;AACD,GALD;;AAMA,MAAM+B,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBvC,IAAAA,KAAK,CAACU,IAAN,CAAWL,OAAX,CAAmBD,IAAnB;AACA4B,IAAAA,SAAS;AACV,GAHD;;AAIA,MAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,CAACN,CAAD,EAAIE,KAAJ,EAAc;AACvCF,IAAAA,CAAC,CAACO,eAAF;;AACA,QAAIP,CAAC,CAACQ,GAAF,KAAU,QAAd,EAAwB;AACtBlB,MAAAA,iBAAiB,CAACY,KAAD,CAAjB;AACD;AACF,GALD;;AAMA,MAAMO,cAAc,GAAG,SAAjBA,cAAiB,CAACT,CAAD,EAAIQ,GAAJ,EAASN,KAAT,EAAmB;AACxC7B,IAAAA,QAAQ,CAACmC,GAAD,CAAR;AACA/B,IAAAA,QAAQ,CAAC1C,MAAM,CAAC2E,OAAP,CAAeR,KAAf,CAAD,CAAR;AACApC,IAAAA,KAAK,CAACU,IAAN,CAAWmC,WAAX,CAAuB,KAAvB;AACD,GAJD;;AAKA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACZ,CAAD,EAAO;AACzBlC,IAAAA,KAAK,CAACU,IAAN,CAAWmC,WAAX,CAAuB,KAAvB;AACAlC,IAAAA,QAAQ,CAAC1C,MAAM,CAAC8E,eAAP,CAAuB/C,KAAK,CAACU,IAA7B,CAAD,CAAR;AACAC,IAAAA,QAAQ,CAAC1C,MAAM,CAAC+E,SAAP,CAAiB,OAAjB,CAAD,CAAR;AACD,GAJD;;AAKA,MAAM7B,OAAO,GACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAE,MAAC,YAAD;AAAc,MAAA,KAAK,EAAE;AAAElC,QAAAA,KAAK,EAAE;AAAT,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR;AAGE,IAAA,OAAO,EAAE;AAAA,aAAM2B,IAAI,EAAV;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAE,MAAC,YAAD;AAAc,MAAA,KAAK,EAAE;AAAE3B,QAAAA,KAAK,EAAE;AAAT,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR;AAGE,IAAA,OAAO,EAAE;AAAA,aAAM4C,QAAQ,EAAd;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAWE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAE,MAAC,cAAD;AAAgB,MAAA,KAAK,EAAE;AAAE5C,QAAAA,KAAK,EAAE;AAAT,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR;AAGE,IAAA,OAAO,EAAE;AAAA,aAAM+B,OAAO,EAAb;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;;AAoBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAEd,QADX;AAEE,IAAA,QAAQ,EAAE;AAAA,aAAM8B,SAAS,EAAf;AAAA,KAFZ;AAGE,IAAA,MAAM,EAAC,MAHT;AAIE,IAAA,UAAU,EAAC,QAJb;AAKE,IAAA,IAAI,EAAE;AAAA,aAAMO,MAAM,EAAZ;AAAA,KALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAQE;AAAO,IAAA,KAAK,EAAEnC,IAAd;AAAoB,IAAA,IAAI,EAAC,MAAzB;AAAgC,IAAA,GAAG,EAAC,MAApC;AAA2C,IAAA,QAAQ,EAAE6B,gBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,WAUGzB,KAAK,KAAKyC,SAAV,GACGC,MAAM,CAACC,OAAP,CAAe3C,KAAf,EAAsB4C,GAAtB,CAA0B,gBAAeC,KAAf;AAAA;AAAA,QAAEX,GAAF;AAAA,QAAON,KAAP;;AAAA,WACxBA,KAAK,CAACN,UAAN,GAAmBC,MAAnB,CAA0BW,GAA1B,KAAkC,aAAlC,GACE;AAAK,MAAA,MAAM,EAAE,EAAb;AAAiB,MAAA,GAAG,EAAEW,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,IAAI,EAAC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,EAAE,EAAC,MADL;AAEE,MAAA,KAAK,EAAEjB,KAAK,CAACN,UAAN,GAAmBC,MAAnB,CAA0B3B,IAFnC;AAGE,MAAA,IAAI,EAAEsC,GAHR;AAIE,MAAA,GAAG,EAAEW,KAJP;AAKE,MAAA,QAAQ,EAAEhB,gBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAUE;AAAK,MAAA,IAAI,EAAC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAE;AAAE3C,QAAAA,KAAK,EAAE;AAAT,OADT;AAEE,MAAA,OAAO,EAAEtB,IAFX;AAGE,MAAA,YAAY,EAAE,sBAACkF,UAAD,EAAaC,MAAb;AAAA,eACZA,MAAM,CAACnB,KAAP,CAAaoB,WAAb,GAA2BC,OAA3B,CAAmCH,UAAU,CAACE,WAAX,EAAnC,MAAiE,CAAC,CADtD;AAAA,OAHhB;AAME,MAAA,KAAK,EAAEpB,KAAK,CAACN,UAAN,GAAmBC,MAAnB,CAA0B2B,IANnC;AAOE,MAAA,QAAQ,EAAE,kBAACA,IAAD,EAAU;AAClBtB,QAAAA,KAAK,CAACN,UAAN,GAAmBC,MAAnB,CAA0B2B,IAA1B,GAAiCA,IAAjC;AACA/C,QAAAA,QAAQ,CAAC1C,MAAM,CAAC0D,QAAP,mBAAqBnB,KAArB,EAAD,CAAR;AACD,OAVH;AAWE,MAAA,QAAQ,EAAE,kBAACkD,IAAD,EAAU;AAClBtB,QAAAA,KAAK,CAACN,UAAN,GAAmBC,MAAnB,CAA0B2B,IAA1B,GAAiCA,IAAjC;AAEA/C,QAAAA,QAAQ,CAAC1C,MAAM,CAAC0D,QAAP,mBAAqBnB,KAArB,EAAD,CAAR;AACD,OAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAVF,EA6BE;AAAK,MAAA,IAAI,EAAC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,YAAY,EAAE4B,KAAK,CAACN,UAAN,GAAmBC,MAAnB,CAA0BW,GAD1C;AAEE,MAAA,KAAK,EAAE;AAAEhD,QAAAA,KAAK,EAAE;AAAT,OAFT;AAGE,MAAA,QAAQ,EAAE,kBAACgD,GAAD,EAAS;AACjBN,QAAAA,KAAK,CAACN,UAAN,GAAmBC,MAAnB,CAA0BW,GAA1B,GAAgCA,GAAhC;AACA/B,QAAAA,QAAQ,CAAC1C,MAAM,CAAC0D,QAAP,mBAAqBnB,KAArB,EAAD,CAAR;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,EASE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBATF,CADF,CA7BF,CADF,GA6CE,EA9CsB;AAAA,GAA1B,CADH,GAkDG,EA5DN,EA6DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7DF,EA8DGA,KAAK,KAAKyC,SAAV,GACGC,MAAM,CAACC,OAAP,CAAe3C,KAAf,EAAsB4C,GAAtB,CAA0B,iBAAeC,KAAf;AAAA;AAAA,QAAEX,GAAF;AAAA,QAAON,KAAP;;AAAA,WACxBA,KAAK,CAACN,UAAN,GAAmBC,MAAnB,CAA0BW,GAA1B,KAAkC,aAAlC,GACE;AAAK,MAAA,MAAM,EAAE,EAAb;AAAiB,MAAA,GAAG,EAAEW,KAAtB;AAA6B,MAAA,KAAK,EAAE;AAAEM,QAAAA,UAAU,EAAE;AAAd,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,IAAI,EAAC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,EAAE,EAAC,MADL;AAEE,MAAA,KAAK,EAAEvB,KAAK,CAACN,UAAN,GAAmBC,MAAnB,CAA0B3B,IAFnC;AAGE,MAAA,IAAI,EAAEsC,GAHR;AAIE,MAAA,GAAG,EAAEW,KAJP;AAKE,MAAA,QAAQ,EAAEhB,gBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAUE;AAAK,MAAA,IAAI,EAAC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAE;AAAE3C,QAAAA,KAAK,EAAE;AAAT,OADT;AAEE,MAAA,OAAO,EAAEtB,IAFX;AAGE,MAAA,YAAY,EAAE,sBAACkF,UAAD,EAAaC,MAAb;AAAA,eACZA,MAAM,CAACnB,KAAP,CAAaoB,WAAb,GAA2BC,OAA3B,CAAmCH,UAAU,CAACE,WAAX,EAAnC,MAAiE,CAAC,CADtD;AAAA,OAHhB;AAME,MAAA,KAAK,EAAEpB,KAAK,CAACN,UAAN,GAAmBC,MAAnB,CAA0B2B,IANnC;AAOE,MAAA,QAAQ,EAAE,kBAACA,IAAD,EAAU;AAClBtB,QAAAA,KAAK,CAACN,UAAN,GAAmBC,MAAnB,CAA0B2B,IAA1B,GAAiCA,IAAjC;AACA/C,QAAAA,QAAQ,CAAC1C,MAAM,CAAC0D,QAAP,mBAAqBnB,KAArB,EAAD,CAAR;AACD,OAVH;AAWE,MAAA,QAAQ,EAAE,kBAACkD,IAAD,EAAU;AAClBtB,QAAAA,KAAK,CAACN,UAAN,GAAmBC,MAAnB,CAA0B2B,IAA1B,GAAiCA,IAAjC;AAEA/C,QAAAA,QAAQ,CAAC1C,MAAM,CAAC0D,QAAP,mBAAqBnB,KAArB,EAAD,CAAR;AACD,OAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAVF,EA6BE;AAAK,MAAA,IAAI,EAAC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,YAAY,EAAE4B,KAAK,CAACN,UAAN,GAAmBC,MAAnB,CAA0BW,GAD1C;AAEE,MAAA,KAAK,EAAE;AAAEhD,QAAAA,KAAK,EAAE;AAAT,OAFT;AAGE,MAAA,QAAQ,EAAE,kBAACgD,GAAD,EAAS;AACjBN,QAAAA,KAAK,CAACN,UAAN,GAAmBC,MAAnB,CAA0BW,GAA1B,GAAgCA,GAAhC;AACA/B,QAAAA,QAAQ,CAAC1C,MAAM,CAAC0D,QAAP,mBAAqBnB,KAArB,EAAD,CAAR;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,EASE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBATF,CADF,CA7BF,CADF,GA6CE,EA9CsB;AAAA,GAA1B,CADH,GAkDG,EAhHN,CADF,EAmHE;AACE,IAAA,SAAS,EAAE,aADb;AAEE,IAAA,KAAK,EAAE;AACLb,MAAAA,QAAQ,EAAE,UADL;AAELiE,MAAAA,QAAQ,EAAE5D,KAAK,CAAC6D,IAAN,GAAa,CAFlB;AAGLC,MAAAA,SAAS,EAAE9D,KAAK,CAAC6D;AAHZ,KAFT;AAOE,IAAA,SAAS,EAAE,mBAAC3B,CAAD,EAAO;AAChBA,MAAAA,CAAC,CAACO,eAAF;;AACA,UAAIP,CAAC,CAACQ,GAAF,KAAU,QAAd,EAAwB;AACtB1B,QAAAA,OAAO;AACR;AACF,KAZH;AAaE,IAAA,OAAO,EAAE,iBAACkB,CAAD,EAAO;AACdY,MAAAA,WAAW,CAACZ,CAAD,CAAX;AACD,KAfH;AAgBE,IAAA,QAAQ,EAAE,CAAC,CAhBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAkBE;AAAK,IAAA,KAAK,EAAEnD,MAAM,CAACC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIgB,KAAK,CAACU,IAAN,CAAWoB,UAAX,GAAwBC,MAA5B,CADF,CAlBF,EAqBE;AACE,IAAA,KAAK,EAAE;AACLxC,MAAAA,UAAU,EAAE,SADP;AAELF,MAAAA,OAAO,EAAE,MAFJ;AAGLH,MAAAA,MAAM,EAAE;AAHH,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAK,IAAA,KAAK,EAAE;AAAES,MAAAA,QAAQ,EAAE,UAAZ;AAAwBoE,MAAAA,GAAG,EAAE,GAA7B;AAAkCC,MAAAA,KAAK,EAAE;AAAzC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,aAAnB;AAAiC,IAAA,OAAO,EAAE7C,OAA1C;AAAmD,IAAA,OAAO,EAAC,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAE;AAAEjC,MAAAA,MAAM,EAAE;AAAV,KAFT;AAGE,IAAA,IAAI,EACF,MAAC,YAAD;AAAc,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE,OAAT;AAAkBG,QAAAA,QAAQ,EAAE,MAA5B;AAAoCuE,QAAAA,UAAU,EAAE;AAAhD,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAPF,EAkBGT,MAAM,CAACC,OAAP,CAAenD,KAAK,CAACU,IAAN,CAAWkB,QAAX,EAAf,EAAsCwB,GAAtC,CAA0C,iBAAeC,KAAf;AAAA;AAAA,QAAEX,GAAF;AAAA,QAAON,KAAP;;AAAA,WACzCA,KAAK,CAACN,UAAN,GAAmBC,MAAnB,CAA0BW,GAA1B,KAAkC,aAAlC,GACE;AACE,MAAA,GAAG,EAAEW,KADP;AAEE,MAAA,OAAO,EAAE;AAAA,eAAM9C,QAAQ,CAACmC,GAAD,CAAd;AAAA,OAFX;AAGE,MAAA,MAAM,EAAE;AAAA,eAAMnC,QAAQ,CAAC,EAAD,CAAd;AAAA,OAHV;AAIE,MAAA,KAAK,EAAE;AACL0D,QAAAA,eAAe,EAAE3D,KAAK,KAAKoC,GAAV,GAAgB,SAAhB,GAA4B,EADxC;AAELvD,QAAAA,UAAU,EAAE,MAFP;AAGLC,QAAAA,QAAQ,EAAE;AAHL,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUE,MAAC,UAAD;AAAY,MAAA,IAAI,EAAEgD,KAAlB;AAAyB,MAAA,MAAM,EAAEpC,KAAK,CAACc,MAAvC;AAA+C,MAAA,KAAK,EAAE/B,MAAM,CAACc,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAVF,EAaE,MAAC,UAAD;AAAY,MAAA,IAAI,EAAEuC,KAAlB;AAAyB,MAAA,MAAM,EAAEpC,KAAK,CAACc,MAAvC;AAA+C,MAAA,KAAK,EAAE/B,MAAM,CAACU,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAbF,EAgBE;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO2C,KAAK,CAACN,UAAN,GAAmBC,MAAnB,CAA0B3B,IAAjC,CADF,CAhBF,EAmBE;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEnB,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCmD,KAAK,CAACN,UAAN,GAAmBC,MAAnB,CAA0B2B,IAA9D,CADF,CAnBF,EAsBE;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAtBF,EAyBE;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,WAAD;AAAa,MAAA,KAAK,EAAE;AAAEzE,QAAAA,KAAK,EAAE,QAAT;AAAmBG,QAAAA,QAAQ,EAAE;AAA7B,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAzBF,CADF,GA+BE,EAhCuC;AAAA,GAA1C,CAlBH,EAqDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArDF,EAuDG8D,MAAM,CAACC,OAAP,CAAenD,KAAK,CAACU,IAAN,CAAWkB,QAAX,EAAf,EAAsCwB,GAAtC,CAA0C,iBAAeC,KAAf;AAAA;AAAA,QAAEX,GAAF;AAAA,QAAON,KAAP;;AAAA,WACzCA,KAAK,CAACN,UAAN,GAAmBC,MAAnB,CAA0BW,GAA1B,KAAkC,aAAlC,GACE;AACE,MAAA,GAAG,EAAEW,KADP;AAEE,MAAA,OAAO,EAAE,iBAACnB,CAAD;AAAA,eAAOS,cAAc,CAACT,CAAD,EAAIQ,GAAJ,EAASN,KAAT,CAArB;AAAA,OAFX;AAGE,MAAA,MAAM,EAAE;AAAA,eAAM7B,QAAQ,CAAC,EAAD,CAAd;AAAA,OAHV;AAIE,MAAA,KAAK,EAAE;AAAE0D,QAAAA,eAAe,EAAE3D,KAAK,KAAKoC,GAAV,GAAgB,SAAhB,GAA4B;AAA/C,OAJT;AAKE,MAAA,SAAS,EAAE,mBAACR,CAAD;AAAA,eAAOM,kBAAkB,CAACN,CAAD,EAAIE,KAAJ,CAAzB;AAAA,OALb;AAME,MAAA,QAAQ,EAAE,CAAC,CANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,MAAC,UAAD;AAAY,MAAA,IAAI,EAAEA,KAAlB;AAAyB,MAAA,MAAM,EAAEpC,KAAK,CAACc,MAAvC;AAA+C,MAAA,KAAK,EAAE/B,MAAM,CAACc,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CARF,EAWE,MAAC,UAAD;AAAY,MAAA,IAAI,EAAEuC,KAAlB;AAAyB,MAAA,MAAM,EAAEpC,KAAK,CAACc,MAAvC;AAA+C,MAAA,KAAK,EAAE/B,MAAM,CAACU,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAXF,EAcE;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,MAAM,CAACe,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCsC,KAAK,CAACN,UAAN,GAAmBC,MAAnB,CAA0B3B,IAA1D,CADF,CAdF,EAiBE;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAErB,MAAM,CAACe,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCsC,KAAK,CAACN,UAAN,GAAmBC,MAAnB,CAA0B2B,IAA1D,CADF,CAjBF,EAoBE;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE3E,MAAM,CAACe,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCsC,KAAK,CAACN,UAAN,GAAmBC,MAAnB,CAA0BW,GAA1D,CADF,CApBF,CADF,GA0BE,EA3BuC;AAAA,GAA1C,CAvDH,CArBF,CAnHF,CADF;AAkOD,CAnUD;;GAAM3C,gB;UAMsC/B,W,EACzBD,W;;;MAPbgC,gB;AAoUN,eAAeA,gBAAf","sourcesContent":["import * as React from 'react';\nimport { CustomNodeModel } from './CustomNodeModel';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as action from '../../actions/node';\nimport { DiagramEngine, PortWidget, PortModel } from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\nimport { TYPE } from '../../const';\nimport {\n  ExclamationCircleOutlined,\n  PlusOutlined,\n  EditOutlined,\n  KeyOutlined,\n  MoreOutlined,\n  DeleteOutlined,\n} from '@ant-design/icons';\nimport { Col, Modal, Input, Button, Typography, Row, Popover, AutoComplete, Select } from 'antd';\nconst { Text } = Typography;\nconst { Option } = Select;\nexport interface CustomNodeWidgetProps {\n  node: CustomNodeModel;\n  engine: DiagramEngine;\n  size?: number | undefined;\n}\n\n/**\n * @author Nguyen Tuan Quang\n */\nexport const Port = styled.div`\n  width: 20px;\n  height: 20px;\n  background: #f6f6f6;\n  cursor: pointer;\n  margin-top: 5px;\n\n  &:hover {\n    background: #deecf3;\n  }\n`;\n\nconst styles = {\n  cardHeader: {\n    color: 'white',\n    border: ' 0 solid #e2e8f0',\n    fontWeight: 400,\n    fontSize: '20px',\n    padding: '5px 20px',\n    height: '40px',\n    background: '#316896',\n    marginBottom: '-2px',\n  },\n  rightPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '380px',\n  },\n  leftPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '0',\n  },\n  fieldText: { fontSize: '20px' },\n};\nconst CustomNodeWidget: React.FC<CustomNodeWidgetProps> = (props) => {\n  // const { dispatch } = props;\n\n  const [editNode, setEditNode] = React.useState(false);\n  const [name, setName] = React.useState('');\n  const [hover, setHover] = React.useState('');\n  const ports: { [s: string]: PortModel } = useSelector((state) => state.node.ports);\n  const dispatch = useDispatch();\n  const save = () => {\n    props.node.addCustomPort('new_col', '', '');\n    props.engine.repaintCanvas();\n  };\n  const confirm = () => {\n    Modal.confirm({\n      title: 'Confirm',\n      icon: <ExclamationCircleOutlined />,\n      content: 'Confirm delete table',\n      okText: 'Yes',\n      cancelText: 'No',\n      onOk() {\n        props.node.remove();\n        props.engine.repaintCanvas();\n      },\n    });\n  };\n  const confirmDeletePort = (port: PortModel) => {\n    Modal.confirm({\n      title: 'Confirm',\n      icon: <ExclamationCircleOutlined />,\n      content: 'Confirm delete port',\n      okText: 'Yes',\n      cancelText: 'No',\n      onOk() {\n        props.node.removePort(port);\n        dispatch(action.setPorts(props.node.getPorts()));\n        props.engine.repaintCanvas();\n      },\n    });\n  };\n  const openEdit = () => {\n    setEditNode(true);\n    setName(props.node.getOptions().extras);\n    dispatch(action.setPorts(props.node.getPorts()));\n  };\n  const closeEdit = () => {\n    setEditNode(false);\n    setName('');\n  };\n  const handelChangeName = (e: any) => {\n    setName(e.target.value);\n  };\n  const handleChangePort = (e) => {\n    const { id, name, value } = e.target;\n\n    ports[name].getOptions().extras[id] = value;\n    dispatch(action.setPorts({ ...ports }));\n  };\n  const submit = () => {\n    props.node.setName(name);\n    closeEdit();\n  };\n  const handleDeleteButton = (e, value) => {\n    e.stopPropagation();\n    if (e.key === 'Delete') {\n      confirmDeletePort(value);\n    }\n  };\n  const handleRowClick = (e, key, value) => {\n    setHover(key);\n    dispatch(action.setPort(value));\n    props.node.setSelected(false);\n  };\n  const selectTable = (e) => {\n    props.node.setSelected(false);\n    dispatch(action.setSelectedNode(props.node));\n    dispatch(action.setActive('table'));\n  };\n  const content = (\n    <Row>\n      <Button\n        type='ghost'\n        icon={<PlusOutlined style={{ color: 'green' }} />}\n        onClick={() => save()}\n      />\n      <Button\n        type='ghost'\n        icon={<EditOutlined style={{ color: 'cyan' }} />}\n        onClick={() => openEdit()}\n      />\n      <Button\n        type='ghost'\n        icon={<DeleteOutlined style={{ color: 'red' }} />}\n        onClick={() => confirm()}\n      />\n    </Row>\n  );\n\n  return (\n    <div>\n      <Modal\n        visible={editNode}\n        onCancel={() => closeEdit()}\n        okText='Save'\n        cancelText='Cancel'\n        onOk={() => submit()}\n      >\n        Name:\n        <Input value={name} name='name' key='name' onChange={handelChangeName} />\n        Body:\n        {ports !== undefined\n          ? Object.entries(ports).map(([key, value], index: any) =>\n              value.getOptions().extras.key === 'PRIMARY KEY' ? (\n                <Row gutter={16} key={index}>\n                  <Col span='10'>\n                    <Input\n                      id='name'\n                      value={value.getOptions().extras.name}\n                      name={key}\n                      key={index}\n                      onChange={handleChangePort}\n                    />\n                  </Col>\n                  <Col span='8'>\n                    <AutoComplete\n                      style={{ width: 150 }}\n                      options={TYPE}\n                      filterOption={(inputValue, option) =>\n                        option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n                      }\n                      value={value.getOptions().extras.type}\n                      onChange={(type) => {\n                        value.getOptions().extras.type = type;\n                        dispatch(action.setPorts({ ...ports }));\n                      }}\n                      onSelect={(type) => {\n                        value.getOptions().extras.type = type;\n\n                        dispatch(action.setPorts({ ...ports }));\n                      }}\n                    ></AutoComplete>\n                  </Col>\n                  <Col span='6'>\n                    <Select\n                      defaultValue={value.getOptions().extras.key}\n                      style={{ width: 120 }}\n                      onChange={(key) => {\n                        value.getOptions().extras.key = key;\n                        dispatch(action.setPorts({ ...ports }));\n                      }}\n                    >\n                      <Option value=''>null</Option>\n                      <Option value='PRIMARY KEY'>PRIMARY KEY</Option>\n                    </Select>\n                  </Col>\n                </Row>\n              ) : (\n                ''\n              )\n            )\n          : ''}\n        <hr />\n        {ports !== undefined\n          ? Object.entries(ports).map(([key, value], index: any) =>\n              value.getOptions().extras.key !== 'PRIMARY KEY' ? (\n                <Row gutter={16} key={index} style={{ paddingTop: '5px' }}>\n                  <Col span='10'>\n                    <Input\n                      id='name'\n                      value={value.getOptions().extras.name}\n                      name={key}\n                      key={index}\n                      onChange={handleChangePort}\n                    />\n                  </Col>\n                  <Col span='8'>\n                    <AutoComplete\n                      style={{ width: 150 }}\n                      options={TYPE}\n                      filterOption={(inputValue, option) =>\n                        option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n                      }\n                      value={value.getOptions().extras.type}\n                      onChange={(type) => {\n                        value.getOptions().extras.type = type;\n                        dispatch(action.setPorts({ ...ports }));\n                      }}\n                      onSelect={(type) => {\n                        value.getOptions().extras.type = type;\n\n                        dispatch(action.setPorts({ ...ports }));\n                      }}\n                    ></AutoComplete>\n                  </Col>\n                  <Col span='6'>\n                    <Select\n                      defaultValue={value.getOptions().extras.key}\n                      style={{ width: 120 }}\n                      onChange={(key) => {\n                        value.getOptions().extras.key = key;\n                        dispatch(action.setPorts({ ...ports }));\n                      }}\n                    >\n                      <Option value=''>null</Option>\n                      <Option value='PRIMARY KEY'>PRIMARY KEY</Option>\n                    </Select>\n                  </Col>\n                </Row>\n              ) : (\n                ''\n              )\n            )\n          : ''}\n      </Modal>\n      <div\n        className={'custom-node'}\n        style={{\n          position: 'relative',\n          minWidth: props.size * 4,\n          minHeight: props.size,\n        }}\n        onKeyDown={(e) => {\n          e.stopPropagation();\n          if (e.key === 'Delete') {\n            confirm();\n          }\n        }}\n        onClick={(e) => {\n          selectTable(e);\n        }}\n        tabIndex={-1}\n      >\n        <div style={styles.cardHeader}>\n          <p>{props.node.getOptions().extras}</p>\n        </div>\n        <div\n          style={{\n            background: '#F6F6F6',\n            padding: '20px',\n            border: 'none',\n          }}\n        >\n          <div style={{ position: 'absolute', top: '0', right: '0' }}>\n            <Popover placement='rightBottom' content={content} trigger='focus'>\n              <Button\n                type='ghost'\n                style={{ border: 'none' }}\n                icon={\n                  <MoreOutlined style={{ color: 'white', fontSize: '20px', paddingTop: '5px' }} />\n                }\n              />\n            </Popover>\n          </div>\n          {Object.entries(props.node.getPorts()).map(([key, value], index: any) =>\n            value.getOptions().extras.key === 'PRIMARY KEY' ? (\n              <Row\n                key={index}\n                onFocus={() => setHover(key)}\n                onBlur={() => setHover('')}\n                style={{\n                  backgroundColor: hover === key ? '#4770FF' : '',\n                  fontWeight: 'bold',\n                  fontSize: '20px',\n                }}\n              >\n                <PortWidget port={value} engine={props.engine} style={styles.leftPort}>\n                  <Port />\n                </PortWidget>\n                <PortWidget port={value} engine={props.engine} style={styles.rightPort}>\n                  <Port />\n                </PortWidget>\n                <Col span={10}>\n                  <Text>{value.getOptions().extras.name}</Text>\n                </Col>\n                <Col span={8}>\n                  <Text style={{ color: '#dbdd4d' }}>{value.getOptions().extras.type}</Text>\n                </Col>\n                <Col span={3}>\n                  <Text>PK</Text>\n                </Col>\n                <Col span={3}>\n                  <KeyOutlined style={{ color: 'yellow', fontSize: 20 }} />\n                </Col>\n              </Row>\n            ) : (\n              ''\n            )\n          )}\n          <hr />\n\n          {Object.entries(props.node.getPorts()).map(([key, value], index: any) =>\n            value.getOptions().extras.key !== 'PRIMARY KEY' ? (\n              <Row\n                key={index}\n                onClick={(e) => handleRowClick(e, key, value)}\n                onBlur={() => setHover('')}\n                style={{ backgroundColor: hover === key ? '#deecf3' : '' }}\n                onKeyDown={(e) => handleDeleteButton(e, value)}\n                tabIndex={-1}\n              >\n                <PortWidget port={value} engine={props.engine} style={styles.leftPort}>\n                  <Port />\n                </PortWidget>\n                <PortWidget port={value} engine={props.engine} style={styles.rightPort}>\n                  <Port />\n                </PortWidget>\n                <Col lg={10}>\n                  <Text style={styles.fieldText}>{value.getOptions().extras.name}</Text>\n                </Col>\n                <Col lg={8}>\n                  <Text style={styles.fieldText}>{value.getOptions().extras.type}</Text>\n                </Col>\n                <Col lg={3}>\n                  <Text style={styles.fieldText}>{value.getOptions().extras.key}</Text>\n                </Col>\n              </Row>\n            ) : (\n              ''\n            )\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default CustomNodeWidget;\n"]},"metadata":{},"sourceType":"module"}