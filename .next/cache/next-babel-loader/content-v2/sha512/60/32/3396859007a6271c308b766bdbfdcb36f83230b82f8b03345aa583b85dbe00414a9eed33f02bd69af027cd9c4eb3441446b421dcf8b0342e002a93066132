{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as loginService from '@/services/login';\nexport default {\n  namespace: 'global',\n  state: {\n    title: '权限管理脚手架',\n    copyRight: '2020 LyricTian',\n    defaultURL: '/dashboard',\n    collapsed: false,\n    openKeys: [],\n    selectedKeys: [],\n    user: {\n      user_name: 'admin',\n      real_name: '管理员',\n      role_names: []\n    },\n    menuPaths: {},\n    menuMap: {},\n    menus: []\n  },\n  effects: {\n    menuEvent: /*#__PURE__*/_regeneratorRuntime.mark(function menuEvent(_ref, _ref2) {\n      var pathname, put, select, p, menuPaths, item;\n      return _regeneratorRuntime.wrap(function menuEvent$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              pathname = _ref.pathname;\n              put = _ref2.put, select = _ref2.select;\n              p = pathname;\n\n              if (!(p === '/')) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 6;\n              return select(function (state) {\n                return state.global.defaultURL;\n              });\n\n            case 6:\n              p = _context.sent;\n\n            case 7:\n              _context.next = 9;\n              return select(function (state) {\n                return state.global.menuPaths;\n              });\n\n            case 9:\n              menuPaths = _context.sent;\n              item = menuPaths[p];\n\n              if (item) {\n                _context.next = 13;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 13:\n              if (!(item.parent_path && item.parent_path !== '')) {\n                _context.next = 16;\n                break;\n              }\n\n              _context.next = 16;\n              return put({\n                type: 'changeOpenKeys',\n                payload: item.parent_path.split('/')\n              });\n\n            case 16:\n              _context.next = 18;\n              return put({\n                type: 'changeSelectedKeys',\n                payload: [item.id]\n              });\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, menuEvent);\n    }),\n    fetchUser: /*#__PURE__*/_regeneratorRuntime.mark(function fetchUser(_, _ref3) {\n      var call, put, response;\n      return _regeneratorRuntime.wrap(function fetchUser$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              call = _ref3.call, put = _ref3.put;\n              _context2.next = 3;\n              return call(loginService.getCurrentUser);\n\n            case 3:\n              response = _context2.sent;\n              _context2.next = 6;\n              return put({\n                type: 'saveUser',\n                payload: response\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, fetchUser);\n    }),\n    fetchMenuTree: /*#__PURE__*/_regeneratorRuntime.mark(function fetchMenuTree(_ref4, _ref5) {\n      var pathname, call, put, response, menuData, menuPaths, menuMap, fillData;\n      return _regeneratorRuntime.wrap(function fetchMenuTree$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              fillData = function _fillData(data) {\n                for (var i = 0; i < data.length; i += 1) {\n                  menuMap[data[i].id] = data[i];\n\n                  if (data[i].router !== '') {\n                    menuPaths[data[i].router] = data[i];\n                  }\n\n                  if (data[i].children && data[i].children.length > 0) {\n                    fillData(data[i].children);\n                  }\n                }\n              };\n\n              pathname = _ref4.pathname;\n              call = _ref5.call, put = _ref5.put;\n              _context3.next = 5;\n              return call(loginService.queryMenuTree);\n\n            case 5:\n              response = _context3.sent;\n              menuData = response.list || [];\n              _context3.next = 9;\n              return put({\n                type: 'saveMenus',\n                payload: menuData\n              });\n\n            case 9:\n              menuPaths = {};\n              menuMap = {};\n              fillData(menuData);\n              _context3.next = 14;\n              return [put({\n                type: 'saveMenuPaths',\n                payload: menuPaths\n              }), put({\n                type: 'saveMenuMap',\n                payload: menuMap\n              }), put({\n                type: 'menuEvent',\n                pathname: pathname\n              })];\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, fetchMenuTree);\n    })\n  },\n  reducers: {\n    changeLayoutCollapsed: function changeLayoutCollapsed(state, _ref6) {\n      var payload = _ref6.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        collapsed: payload\n      });\n    },\n    changeOpenKeys: function changeOpenKeys(state, _ref7) {\n      var payload = _ref7.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        openKeys: payload\n      });\n    },\n    changeSelectedKeys: function changeSelectedKeys(state, _ref8) {\n      var payload = _ref8.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selectedKeys: payload\n      });\n    },\n    saveUser: function saveUser(state, _ref9) {\n      var payload = _ref9.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: payload\n      });\n    },\n    saveMenuPaths: function saveMenuPaths(state, _ref10) {\n      var payload = _ref10.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        menuPaths: payload\n      });\n    },\n    saveMenuMap: function saveMenuMap(state, _ref11) {\n      var payload = _ref11.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        menuMap: payload\n      });\n    },\n    saveMenus: function saveMenus(state, _ref12) {\n      var payload = _ref12.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        menus: payload\n      });\n    }\n  },\n  subscriptions: {\n    setup: function setup(_ref13) {\n      var dispatch = _ref13.dispatch,\n          history = _ref13.history;\n      // console.log(\"store.global:  subscriptions\")\n      history.listen(function (_ref14) {\n        var pathname = _ref14.pathname;\n        dispatch({\n          type: 'menuEvent',\n          pathname: pathname\n        });\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/Users/nguyenthanhbinh/Work/vnshop/admin/src/models/global.js"],"names":["loginService","namespace","state","title","copyRight","defaultURL","collapsed","openKeys","selectedKeys","user","user_name","real_name","role_names","menuPaths","menuMap","menus","effects","menuEvent","pathname","put","select","p","global","item","parent_path","type","payload","split","id","fetchUser","_","call","getCurrentUser","response","fetchMenuTree","fillData","data","i","length","router","children","queryMenuTree","menuData","list","reducers","changeLayoutCollapsed","changeOpenKeys","changeSelectedKeys","saveUser","saveMenuPaths","saveMenuMap","saveMenus","subscriptions","setup","dispatch","history","listen"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,YAAZ,MAA8B,kBAA9B;AAEA,eAAe;AACbC,EAAAA,SAAS,EAAE,QADE;AAGbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,SADF;AAELC,IAAAA,SAAS,EAAE,gBAFN;AAGLC,IAAAA,UAAU,EAAE,YAHP;AAILC,IAAAA,SAAS,EAAE,KAJN;AAKLC,IAAAA,QAAQ,EAAE,EALL;AAMLC,IAAAA,YAAY,EAAE,EANT;AAOLC,IAAAA,IAAI,EAAE;AACJC,MAAAA,SAAS,EAAE,OADP;AAEJC,MAAAA,SAAS,EAAE,KAFP;AAGJC,MAAAA,UAAU,EAAE;AAHR,KAPD;AAYLC,IAAAA,SAAS,EAAE,EAZN;AAaLC,IAAAA,OAAO,EAAE,EAbJ;AAcLC,IAAAA,KAAK,EAAE;AAdF,GAHM;AAoBbC,EAAAA,OAAO,EAAE;AACNC,IAAAA,SADM;AAAA;AAAA;AAAA;AAAA;AAAA;AACMC,cAAAA,QADN,QACMA,QADN;AACoBC,cAAAA,GADpB,SACoBA,GADpB,EACyBC,MADzB,SACyBA,MADzB;AAEDC,cAAAA,CAFC,GAEGH,QAFH;;AAAA,oBAGDG,CAAC,KAAK,GAHL;AAAA;AAAA;AAAA;;AAAA;AAIC,qBAAMD,MAAM,CAAC,UAAAlB,KAAK;AAAA,uBAAIA,KAAK,CAACoB,MAAN,CAAajB,UAAjB;AAAA,eAAN,CAAZ;;AAJD;AAIHgB,cAAAA,CAJG;;AAAA;AAAA;AAOa,qBAAMD,MAAM,CAAC,UAAAlB,KAAK;AAAA,uBAAIA,KAAK,CAACoB,MAAN,CAAaT,SAAjB;AAAA,eAAN,CAAZ;;AAPb;AAOCA,cAAAA,SAPD;AAQCU,cAAAA,IARD,GAQQV,SAAS,CAACQ,CAAD,CARjB;;AAAA,kBASAE,IATA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,oBAaDA,IAAI,CAACC,WAAL,IAAoBD,IAAI,CAACC,WAAL,KAAqB,EAbxC;AAAA;AAAA;AAAA;;AAAA;AAcH,qBAAML,GAAG,CAAC;AACRM,gBAAAA,IAAI,EAAE,gBADE;AAERC,gBAAAA,OAAO,EAAEH,IAAI,CAACC,WAAL,CAAiBG,KAAjB,CAAuB,GAAvB;AAFD,eAAD,CAAT;;AAdG;AAAA;AAoBL,qBAAMR,GAAG,CAAC;AACRM,gBAAAA,IAAI,EAAE,oBADE;AAERC,gBAAAA,OAAO,EAAE,CAACH,IAAI,CAACK,EAAN;AAFD,eAAD,CAAT;;AApBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBNC,IAAAA,SAzBM,2DAyBIC,CAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBSC,cAAAA,IAzBT,SAyBSA,IAzBT,EAyBeZ,GAzBf,SAyBeA,GAzBf;AAAA;AA0BY,qBAAMY,IAAI,CAAC/B,YAAY,CAACgC,cAAd,CAAV;;AA1BZ;AA0BCC,cAAAA,QA1BD;AAAA;AA2BL,qBAAMd,GAAG,CAAC;AACRM,gBAAAA,IAAI,EAAE,UADE;AAERC,gBAAAA,OAAO,EAAEO;AAFD,eAAD,CAAT;;AA3BK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgCNC,IAAAA,aAhCM;AAAA,uEA2CIC,QA3CJ;AAAA;AAAA;AAAA;AAAA;AA2CIA,cAAAA,QA3CJ,sBA2CaC,IA3Cb,EA2CmB;AACtB,qBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,MAAzB,EAAiCD,CAAC,IAAI,CAAtC,EAAyC;AACvCvB,kBAAAA,OAAO,CAACsB,IAAI,CAACC,CAAD,CAAJ,CAAQT,EAAT,CAAP,GAAsBQ,IAAI,CAACC,CAAD,CAA1B;;AACA,sBAAID,IAAI,CAACC,CAAD,CAAJ,CAAQE,MAAR,KAAmB,EAAvB,EAA2B;AACzB1B,oBAAAA,SAAS,CAACuB,IAAI,CAACC,CAAD,CAAJ,CAAQE,MAAT,CAAT,GAA4BH,IAAI,CAACC,CAAD,CAAhC;AACD;;AACD,sBAAID,IAAI,CAACC,CAAD,CAAJ,CAAQG,QAAR,IAAoBJ,IAAI,CAACC,CAAD,CAAJ,CAAQG,QAAR,CAAiBF,MAAjB,GAA0B,CAAlD,EAAqD;AACnDH,oBAAAA,QAAQ,CAACC,IAAI,CAACC,CAAD,CAAJ,CAAQG,QAAT,CAAR;AACD;AACF;AACF,eArDI;;AAgCUtB,cAAAA,QAhCV,SAgCUA,QAhCV;AAgCwBa,cAAAA,IAhCxB,SAgCwBA,IAhCxB,EAgC8BZ,GAhC9B,SAgC8BA,GAhC9B;AAAA;AAiCY,qBAAMY,IAAI,CAAC/B,YAAY,CAACyC,aAAd,CAAV;;AAjCZ;AAiCCR,cAAAA,QAjCD;AAmCCS,cAAAA,QAnCD,GAmCYT,QAAQ,CAACU,IAAT,IAAiB,EAnC7B;AAAA;AAoCL,qBAAMxB,GAAG,CAAC;AACRM,gBAAAA,IAAI,EAAE,WADE;AAERC,gBAAAA,OAAO,EAAEgB;AAFD,eAAD,CAAT;;AApCK;AAyCC7B,cAAAA,SAzCD,GAyCa,EAzCb;AA0CCC,cAAAA,OA1CD,GA0CW,EA1CX;AAsDLqB,cAAAA,QAAQ,CAACO,QAAD,CAAR;AAtDK;AAwDL,qBAAM,CACJvB,GAAG,CAAC;AACFM,gBAAAA,IAAI,EAAE,eADJ;AAEFC,gBAAAA,OAAO,EAAEb;AAFP,eAAD,CADC,EAKJM,GAAG,CAAC;AACFM,gBAAAA,IAAI,EAAE,aADJ;AAEFC,gBAAAA,OAAO,EAAEZ;AAFP,eAAD,CALC,EASJK,GAAG,CAAC;AACFM,gBAAAA,IAAI,EAAE,WADJ;AAEFP,gBAAAA,QAAQ,EAARA;AAFE,eAAD,CATC,CAAN;;AAxDK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GApBI;AA6Fb0B,EAAAA,QAAQ,EAAE;AACRC,IAAAA,qBADQ,iCACc3C,KADd,SACkC;AAAA,UAAXwB,OAAW,SAAXA,OAAW;AACxC,6CACKxB,KADL;AAEEI,QAAAA,SAAS,EAAEoB;AAFb;AAID,KANO;AAORoB,IAAAA,cAPQ,0BAOO5C,KAPP,SAO2B;AAAA,UAAXwB,OAAW,SAAXA,OAAW;AACjC,6CACKxB,KADL;AAEEK,QAAAA,QAAQ,EAAEmB;AAFZ;AAID,KAZO;AAaRqB,IAAAA,kBAbQ,8BAaW7C,KAbX,SAa+B;AAAA,UAAXwB,OAAW,SAAXA,OAAW;AACrC,6CACKxB,KADL;AAEEM,QAAAA,YAAY,EAAEkB;AAFhB;AAID,KAlBO;AAmBRsB,IAAAA,QAnBQ,oBAmBC9C,KAnBD,SAmBqB;AAAA,UAAXwB,OAAW,SAAXA,OAAW;AAC3B,6CAAYxB,KAAZ;AAAmBO,QAAAA,IAAI,EAAEiB;AAAzB;AACD,KArBO;AAsBRuB,IAAAA,aAtBQ,yBAsBM/C,KAtBN,UAsB0B;AAAA,UAAXwB,OAAW,UAAXA,OAAW;AAChC,6CAAYxB,KAAZ;AAAmBW,QAAAA,SAAS,EAAEa;AAA9B;AACD,KAxBO;AAyBRwB,IAAAA,WAzBQ,uBAyBIhD,KAzBJ,UAyBwB;AAAA,UAAXwB,OAAW,UAAXA,OAAW;AAC9B,6CAAYxB,KAAZ;AAAmBY,QAAAA,OAAO,EAAEY;AAA5B;AACD,KA3BO;AA4BRyB,IAAAA,SA5BQ,qBA4BEjD,KA5BF,UA4BsB;AAAA,UAAXwB,OAAW,UAAXA,OAAW;AAC5B,6CAAYxB,KAAZ;AAAmBa,QAAAA,KAAK,EAAEW;AAA1B;AACD;AA9BO,GA7FG;AA6Hb0B,EAAAA,aAAa,EAAE;AACbC,IAAAA,KADa,yBACgB;AAAA,UAArBC,QAAqB,UAArBA,QAAqB;AAAA,UAAXC,OAAW,UAAXA,OAAW;AAC3B;AACAA,MAAAA,OAAO,CAACC,MAAR,CAAe,kBAAkB;AAAA,YAAftC,QAAe,UAAfA,QAAe;AAC/BoC,QAAAA,QAAQ,CAAC;AACP7B,UAAAA,IAAI,EAAE,WADC;AAEPP,UAAAA,QAAQ,EAARA;AAFO,SAAD,CAAR;AAID,OALD;AAMD;AATY;AA7HF,CAAf","sourcesContent":["import * as loginService from '@/services/login';\r\n\r\nexport default {\r\n  namespace: 'global',\r\n\r\n  state: {\r\n    title: '权限管理脚手架',\r\n    copyRight: '2020 LyricTian',\r\n    defaultURL: '/dashboard',\r\n    collapsed: false,\r\n    openKeys: [],\r\n    selectedKeys: [],\r\n    user: {\r\n      user_name: 'admin',\r\n      real_name: '管理员',\r\n      role_names: [],\r\n    },\r\n    menuPaths: {},\r\n    menuMap: {},\r\n    menus: [],\r\n  },\r\n\r\n  effects: {\r\n    *menuEvent({ pathname }, { put, select }) {\r\n      let p = pathname;\r\n      if (p === '/') {\r\n        p = yield select(state => state.global.defaultURL);\r\n      }\r\n\r\n      const menuPaths = yield select(state => state.global.menuPaths);\r\n      const item = menuPaths[p];\r\n      if (!item) {\r\n        return;\r\n      }\r\n\r\n      if (item.parent_path && item.parent_path !== '') {\r\n        yield put({\r\n          type: 'changeOpenKeys',\r\n          payload: item.parent_path.split('/'),\r\n        });\r\n      }\r\n\r\n      yield put({\r\n        type: 'changeSelectedKeys',\r\n        payload: [item.id],\r\n      });\r\n    },\r\n    *fetchUser(_, { call, put }) {\r\n      const response = yield call(loginService.getCurrentUser);\r\n      yield put({\r\n        type: 'saveUser',\r\n        payload: response,\r\n      });\r\n    },\r\n    *fetchMenuTree({ pathname }, { call, put }) {\r\n      const response = yield call(loginService.queryMenuTree);\r\n\r\n      const menuData = response.list || [];\r\n      yield put({\r\n        type: 'saveMenus',\r\n        payload: menuData,\r\n      });\r\n\r\n      const menuPaths = {};\r\n      const menuMap = {};\r\n      function fillData(data) {\r\n        for (let i = 0; i < data.length; i += 1) {\r\n          menuMap[data[i].id] = data[i];\r\n          if (data[i].router !== '') {\r\n            menuPaths[data[i].router] = data[i];\r\n          }\r\n          if (data[i].children && data[i].children.length > 0) {\r\n            fillData(data[i].children);\r\n          }\r\n        }\r\n      }\r\n      fillData(menuData);\r\n\r\n      yield [\r\n        put({\r\n          type: 'saveMenuPaths',\r\n          payload: menuPaths,\r\n        }),\r\n        put({\r\n          type: 'saveMenuMap',\r\n          payload: menuMap,\r\n        }),\r\n        put({\r\n          type: 'menuEvent',\r\n          pathname,\r\n        }),\r\n      ];\r\n    },\r\n  },\r\n\r\n  reducers: {\r\n    changeLayoutCollapsed(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        collapsed: payload,\r\n      };\r\n    },\r\n    changeOpenKeys(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        openKeys: payload,\r\n      };\r\n    },\r\n    changeSelectedKeys(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        selectedKeys: payload,\r\n      };\r\n    },\r\n    saveUser(state, { payload }) {\r\n      return { ...state, user: payload };\r\n    },\r\n    saveMenuPaths(state, { payload }) {\r\n      return { ...state, menuPaths: payload };\r\n    },\r\n    saveMenuMap(state, { payload }) {\r\n      return { ...state, menuMap: payload };\r\n    },\r\n    saveMenus(state, { payload }) {\r\n      return { ...state, menus: payload };\r\n    },\r\n  },\r\n  subscriptions: {\r\n    setup({ dispatch, history }) {\r\n      // console.log(\"store.global:  subscriptions\")\r\n      history.listen(({ pathname }) => {\r\n        dispatch({\r\n          type: 'menuEvent',\r\n          pathname,\r\n        });\r\n      });\r\n    },\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}