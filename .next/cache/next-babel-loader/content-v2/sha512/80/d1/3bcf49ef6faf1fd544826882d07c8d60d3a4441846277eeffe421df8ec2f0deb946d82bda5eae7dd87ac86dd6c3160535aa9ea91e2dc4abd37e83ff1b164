{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/badge/style\";\nimport _Badge from \"antd/lib/badge\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Volumes/ExternalData/Work/vnshop/admin/src/pages/system/role.js\",\n    _dec,\n    _class,\n    _temp;\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport { Form } from '@ant-design/compatible';\nimport '@ant-design/compatible/assets/index.css';\nimport PageHeaderLayout from '@/layouts/PageHeaderLayout';\nimport PButton from '@/components/PermButton';\nimport { formatDate } from '@/utils/utils';\nimport RoleCard from '../../components/Role/RoleCard';\nimport WithDva from '../../utils/store';\nimport styles from './role.less';\nvar RoleList = (_dec = Form.create(), _dec(_class = (_temp = /*#__PURE__*/function (_PureComponent) {\n  _inherits(RoleList, _PureComponent);\n\n  var _super = _createSuper(RoleList);\n\n  function RoleList() {\n    var _this;\n\n    _classCallCheck(this, RoleList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      selectedRowKeys: [],\n      selectedRows: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onItemDisableClick\", function (item) {\n      _this.dispatch({\n        type: 'role/changeStatus',\n        payload: {\n          id: item.id,\n          status: 2\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onItemEnableClick\", function (item) {\n      _this.dispatch({\n        type: 'role/changeStatus',\n        payload: {\n          id: item.id,\n          status: 1\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearSelectRows\", function () {\n      var selectedRowKeys = _this.state.selectedRowKeys;\n\n      if (selectedRowKeys.length === 0) {\n        return;\n      }\n\n      _this.setState({\n        selectedRowKeys: [],\n        selectedRows: []\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"dispatch\", function (action) {\n      var dispatch = _this.props.dispatch;\n      dispatch(action);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAddClick\", function () {\n      _this.dispatch({\n        type: 'role/loadForm',\n        payload: {\n          type: 'A'\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEditClick\", function (item) {\n      _this.dispatch({\n        type: 'role/loadForm',\n        payload: {\n          type: 'E',\n          id: item.id\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDelClick\", function (item) {\n      _Modal.confirm({\n        title: \"Confirm to delete [role data\\uFF1A\".concat(item.name, \"\\u3011\\uFF1F\"),\n        okText: 'Confirm',\n        okType: 'danger',\n        cancelText: 'Cancel',\n        onOk: _this.handleDelOKClick.bind(_assertThisInitialized(_this), item.id)\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTableSelectRow\", function (record, selected) {\n      var keys = [];\n      var rows = [];\n\n      if (selected) {\n        keys.push(record.id);\n        rows.push(record);\n      }\n\n      _this.setState({\n        selectedRowKeys: keys,\n        selectedRows: rows\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTableChange\", function (pagination) {\n      _this.dispatch({\n        type: 'role/fetch',\n        pagination: {\n          current: pagination.current,\n          pageSize: pagination.pageSize\n        }\n      });\n\n      _this.clearSelectRows();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onResetFormClick\", function () {\n      var form = _this.props.form;\n      form.resetFields();\n\n      _this.dispatch({\n        type: 'role/fetch',\n        search: {},\n        pagination: {}\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSearchFormSubmit\", function (e) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      var form = _this.props.form;\n      form.validateFields({\n        force: true\n      }, function (err, values) {\n        if (err) {\n          return;\n        }\n\n        _this.dispatch({\n          type: 'role/fetch',\n          search: values,\n          pagination: {}\n        });\n\n        _this.clearSelectRows();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDataFormSubmit\", function (data) {\n      _this.dispatch({\n        type: 'role/submit',\n        payload: data\n      });\n\n      _this.clearSelectRows();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDataFormCancel\", function () {\n      _this.dispatch({\n        type: 'role/changeFormVisible',\n        payload: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(RoleList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.dispatch({\n        type: 'role/fetch',\n        search: {},\n        pagination: {}\n      });\n    }\n  }, {\n    key: \"handleDelOKClick\",\n    value: function handleDelOKClick(id) {\n      this.dispatch({\n        type: 'role/del',\n        payload: {\n          id: id\n        }\n      });\n      this.clearSelectRows();\n    }\n  }, {\n    key: \"renderDataForm\",\n    value: function renderDataForm() {\n      return __jsx(RoleCard, {\n        onCancel: this.handleDataFormCancel,\n        onSubmit: this.handleDataFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 12\n        }\n      });\n    }\n  }, {\n    key: \"renderSearchForm\",\n    value: function renderSearchForm() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return __jsx(Form, {\n        onSubmit: this.handleSearchFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 7\n        }\n      }, __jsx(_Row, {\n        gutter: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }\n      }, __jsx(_Col, {\n        span: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }\n      }, getFieldDecorator('queryValue')(__jsx(_Input, {\n        placeholder: \"Please enter the content to be queried\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }\n      })))), __jsx(_Col, {\n        span: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        style: {\n          overflow: 'hidden',\n          paddingTop: 4\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }\n      }, __jsx(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }\n      }, \"\\u67E5\\u8BE2\"), __jsx(_Button, {\n        style: {\n          marginLeft: 8\n        },\n        onClick: this.onResetFormClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }\n      }, \"\\u91CD\\u7F6E\")))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          loading = _this$props.loading,\n          _this$props$role$data = _this$props.role.data,\n          list = _this$props$role$data.list,\n          pagination = _this$props$role$data.pagination;\n      var _this$state = this.state,\n          selectedRowKeys = _this$state.selectedRowKeys,\n          selectedRows = _this$state.selectedRows;\n      var columns = [{\n        title: 'Role Name',\n        dataIndex: 'name'\n      }, {\n        title: 'Sort Value',\n        dataIndex: 'sequence'\n      }, {\n        title: 'Status',\n        dataIndex: 'status',\n        render: function render(val) {\n          if (val === 1) {\n            return __jsx(_Badge, {\n              status: \"success\",\n              text: \"Enable\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 20\n              }\n            });\n          }\n\n          return __jsx(_Badge, {\n            status: \"error\",\n            text: \"Deactivate\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 18\n            }\n          });\n        }\n      }, {\n        title: 'Create Time',\n        dataIndex: 'created_at',\n        render: function render(val) {\n          return __jsx(\"span\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 24\n            }\n          }, formatDate(val, 'YYYY-MM-DD'));\n        }\n      }, {\n        title: 'Remarks',\n        dataIndex: 'memo'\n      }];\n\n      var paginationProps = _objectSpread({\n        showSizeChanger: true,\n        showQuickJumper: true,\n        showTotal: function showTotal(total) {\n          return __jsx(\"span\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 27\n            }\n          }, \"Total \", total, \" pages\");\n        }\n      }, pagination);\n\n      var breadcrumbList = [{\n        title: 'System Management'\n      }, {\n        title: 'Role Management',\n        href: '/system/role'\n      }];\n      return __jsx(PageHeaderLayout, {\n        title: \"Role Management\",\n        breadcrumbList: breadcrumbList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 7\n        }\n      }, __jsx(_Card, {\n        bordered: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: styles.tableList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: styles.tableListForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }\n      }, this.renderSearchForm()), __jsx(\"div\", {\n        className: styles.tableListOperator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }\n      }, __jsx(PButton, {\n        code: \"add\",\n        type: \"primary\",\n        onClick: function onClick() {\n          return _this2.handleAddClick();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 15\n        }\n      }, \"New\"), selectedRows.length === 1 && [__jsx(PButton, {\n        key: \"edit\",\n        code: \"edit\",\n        onClick: function onClick() {\n          return _this2.handleEditClick(selectedRows[0]);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 17\n        }\n      }, \"Edit\"), __jsx(PButton, {\n        key: \"del\",\n        code: \"del\",\n        type: \"danger\",\n        onClick: function onClick() {\n          return _this2.handleDelClick(selectedRows[0]);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 17\n        }\n      }, \"Delete\"), selectedRows[0].status === 2 && __jsx(PButton, {\n        key: \"enable\",\n        code: \"enable\",\n        onClick: function onClick() {\n          return _this2.onItemEnableClick(selectedRows[0]);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 19\n        }\n      }, \"Enable\"), selectedRows[0].status === 1 && __jsx(PButton, {\n        key: \"disable\",\n        code: \"disable\",\n        type: \"danger\",\n        onClick: function onClick() {\n          return _this2.onItemDisableClick(selectedRows[0]);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 19\n        }\n      }, \"Disable\")]), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }\n      }, __jsx(_Table, {\n        rowSelection: {\n          selectedRowKeys: selectedRowKeys,\n          onSelect: this.handleTableSelectRow\n        },\n        loading: loading,\n        rowKey: function rowKey(record) {\n          return record.id;\n        },\n        dataSource: list,\n        columns: columns,\n        pagination: paginationProps,\n        onChange: this.handleTableChange,\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 15\n        }\n      })))), this.renderDataForm());\n    }\n  }]);\n\n  return RoleList;\n}(PureComponent), _temp)) || _class);\nexport default WithDva(function (state) {\n  return {\n    role: state.role,\n    loading: state.loading.models.role\n  };\n})(RoleList);","map":{"version":3,"sources":["/Volumes/ExternalData/Work/vnshop/admin/src/pages/system/role.js"],"names":["React","PureComponent","Form","PageHeaderLayout","PButton","formatDate","RoleCard","WithDva","styles","RoleList","create","selectedRowKeys","selectedRows","item","dispatch","type","payload","id","status","state","length","setState","action","props","confirm","title","name","okText","okType","cancelText","onOk","handleDelOKClick","bind","record","selected","keys","rows","push","pagination","current","pageSize","clearSelectRows","form","resetFields","search","e","preventDefault","validateFields","force","err","values","data","handleDataFormCancel","handleDataFormSubmit","getFieldDecorator","handleSearchFormSubmit","overflow","paddingTop","marginLeft","onResetFormClick","loading","role","list","columns","dataIndex","render","val","paginationProps","showSizeChanger","showQuickJumper","showTotal","total","breadcrumbList","href","tableList","tableListForm","renderSearchForm","tableListOperator","handleAddClick","handleEditClick","handleDelClick","onItemEnableClick","onItemDisableClick","onSelect","handleTableSelectRow","handleTableChange","renderDataForm","models"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Form } from '@ant-design/compatible';\nimport '@ant-design/compatible/assets/index.css';\nimport { Row, Col, Card, Input, Button, Table, Modal, Badge } from 'antd';\nimport PageHeaderLayout from '@/layouts/PageHeaderLayout';\nimport PButton from '@/components/PermButton';\nimport { formatDate } from '@/utils/utils';\nimport RoleCard from '../../components/Role/RoleCard';\n\nimport WithDva from '../../utils/store';\nimport styles from './role.less';\n\n@Form.create()\nclass RoleList extends PureComponent {\n  state = {\n    selectedRowKeys: [],\n    selectedRows: [],\n  };\n\n  componentDidMount() {\n    this.dispatch({\n      type: 'role/fetch',\n      search: {},\n      pagination: {},\n    });\n  }\n\n  onItemDisableClick = item => {\n    this.dispatch({\n      type: 'role/changeStatus',\n      payload: { id: item.id, status: 2 },\n    });\n  };\n\n  onItemEnableClick = item => {\n    this.dispatch({\n      type: 'role/changeStatus',\n      payload: { id: item.id, status: 1 },\n    });\n  };\n\n  clearSelectRows = () => {\n    const { selectedRowKeys } = this.state;\n    if (selectedRowKeys.length === 0) {\n      return;\n    }\n    this.setState({ selectedRowKeys: [], selectedRows: [] });\n  };\n\n  dispatch = action => {\n    const { dispatch } = this.props;\n    dispatch(action);\n  };\n\n  handleAddClick = () => {\n    this.dispatch({\n      type: 'role/loadForm',\n      payload: {\n        type: 'A',\n      },\n    });\n  };\n\n  handleEditClick = item => {\n    this.dispatch({\n      type: 'role/loadForm',\n      payload: {\n        type: 'E',\n        id: item.id,\n      },\n    });\n  };\n\n  handleDelClick = item => {\n    Modal.confirm({\n      title: `Confirm to delete [role data：${item.name}】？`,\n      okText: 'Confirm',\n      okType: 'danger',\n      cancelText: 'Cancel',\n      onOk: this.handleDelOKClick.bind(this, item.id),\n    });\n  };\n\n  handleTableSelectRow = (record, selected) => {\n    const keys = [];\n    const rows = [];\n    if (selected) {\n      keys.push(record.id);\n      rows.push(record);\n    }\n    this.setState({\n      selectedRowKeys: keys,\n      selectedRows: rows,\n    });\n  };\n\n  handleTableChange = pagination => {\n    this.dispatch({\n      type: 'role/fetch',\n      pagination: {\n        current: pagination.current,\n        pageSize: pagination.pageSize,\n      },\n    });\n    this.clearSelectRows();\n  };\n\n  onResetFormClick = () => {\n    const { form } = this.props;\n    form.resetFields();\n\n    this.dispatch({\n      type: 'role/fetch',\n      search: {},\n      pagination: {},\n    });\n  };\n\n  handleSearchFormSubmit = e => {\n    if (e) {\n      e.preventDefault();\n    }\n\n    const { form } = this.props;\n    form.validateFields({ force: true }, (err, values) => {\n      if (err) {\n        return;\n      }\n      this.dispatch({\n        type: 'role/fetch',\n        search: values,\n        pagination: {},\n      });\n      this.clearSelectRows();\n    });\n  };\n\n  handleDataFormSubmit = data => {\n    this.dispatch({\n      type: 'role/submit',\n      payload: data,\n    });\n    this.clearSelectRows();\n  };\n\n  handleDataFormCancel = () => {\n    this.dispatch({\n      type: 'role/changeFormVisible',\n      payload: false,\n    });\n  };\n\n  handleDelOKClick(id) {\n    this.dispatch({\n      type: 'role/del',\n      payload: { id },\n    });\n    this.clearSelectRows();\n  }\n\n  renderDataForm() {\n    return <RoleCard onCancel={this.handleDataFormCancel} onSubmit={this.handleDataFormSubmit} />;\n  }\n\n  renderSearchForm() {\n    const {\n      form: { getFieldDecorator },\n    } = this.props;\n\n    return (\n      <Form onSubmit={this.handleSearchFormSubmit}>\n        <Row gutter={16}>\n          <Col span={8}>\n            <Form.Item>\n              {getFieldDecorator('queryValue')(\n                <Input placeholder=\"Please enter the content to be queried\" />\n              )}\n            </Form.Item>\n          </Col>\n          <Col span={8}>\n            <div style={{ overflow: 'hidden', paddingTop: 4 }}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                查询\n              </Button>\n              <Button style={{ marginLeft: 8 }} onClick={this.onResetFormClick}>\n                重置\n              </Button>\n            </div>\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n\n  render() {\n    const {\n      loading,\n      role: {\n        data: { list, pagination },\n      },\n    } = this.props;\n\n    const { selectedRowKeys, selectedRows } = this.state;\n\n    const columns = [\n      {\n        title: 'Role Name',\n        dataIndex: 'name',\n      },\n      {\n        title: 'Sort Value',\n        dataIndex: 'sequence',\n      },\n      {\n        title: 'Status',\n        dataIndex: 'status',\n        render: val => {\n          if (val === 1) {\n            return <Badge status=\"success\" text=\"Enable\" />;\n          }\n          return <Badge status=\"error\" text=\"Deactivate\" />;\n        },\n      },\n      {\n        title: 'Create Time',\n        dataIndex: 'created_at',\n        render: val => <span>{formatDate(val, 'YYYY-MM-DD')}</span>,\n      },\n      {\n        title: 'Remarks',\n        dataIndex: 'memo',\n      },\n    ];\n\n    const paginationProps = {\n      showSizeChanger: true,\n      showQuickJumper: true,\n      showTotal: total => <span>Total {total} pages</span>,\n      ...pagination,\n    };\n\n    const breadcrumbList = [\n      { title: 'System Management' },\n      { title: 'Role Management', href: '/system/role' },\n    ];\n\n    return (\n      <PageHeaderLayout title=\"Role Management\" breadcrumbList={breadcrumbList}>\n        <Card bordered={false}>\n          <div className={styles.tableList}>\n            <div className={styles.tableListForm}>{this.renderSearchForm()}</div>\n            <div className={styles.tableListOperator}>\n              <PButton code=\"add\" type=\"primary\" onClick={() => this.handleAddClick()}>\n                New\n              </PButton>\n              {selectedRows.length === 1 && [\n                <PButton\n                  key=\"edit\"\n                  code=\"edit\"\n                  onClick={() => this.handleEditClick(selectedRows[0])}\n                >\n                  Edit\n                </PButton>,\n                <PButton\n                  key=\"del\"\n                  code=\"del\"\n                  type=\"danger\"\n                  onClick={() => this.handleDelClick(selectedRows[0])}\n                >\n                  Delete\n                </PButton>,\n                selectedRows[0].status === 2 && (\n                  <PButton\n                    key=\"enable\"\n                    code=\"enable\"\n                    onClick={() => this.onItemEnableClick(selectedRows[0])}\n                  >\n                    Enable\n                  </PButton>\n                ),\n                selectedRows[0].status === 1 && (\n                  <PButton\n                    key=\"disable\"\n                    code=\"disable\"\n                    type=\"danger\"\n                    onClick={() => this.onItemDisableClick(selectedRows[0])}\n                  >\n                    Disable\n                  </PButton>\n                ),\n              ]}\n            </div>\n            <div>\n              <Table\n                rowSelection={{\n                  selectedRowKeys,\n                  onSelect: this.handleTableSelectRow,\n                }}\n                loading={loading}\n                rowKey={record => record.id}\n                dataSource={list}\n                columns={columns}\n                pagination={paginationProps}\n                onChange={this.handleTableChange}\n                size=\"small\"\n              />\n            </div>\n          </div>\n        </Card>\n        {this.renderDataForm()}\n      </PageHeaderLayout>\n    );\n  }\n}\nexport default WithDva(state => ({\n  role: state.role,\n  loading: state.loading.models.role,\n}))(RoleList);\n"]},"metadata":{},"sourceType":"module"}