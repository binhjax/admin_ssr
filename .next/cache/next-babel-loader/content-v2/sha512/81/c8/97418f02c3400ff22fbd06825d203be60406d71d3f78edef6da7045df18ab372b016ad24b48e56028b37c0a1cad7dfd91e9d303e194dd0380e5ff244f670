{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/checkbox/style\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\n\nvar EditableCell = /*#__PURE__*/function (_PureComponent) {\n  _inherits(EditableCell, _PureComponent);\n\n  var _super = _createSuper(EditableCell);\n\n  function EditableCell() {\n    var _this;\n\n    _classCallCheck(this, EditableCell);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"findItem\", function () {\n      var _this$props = _this.props,\n          data = _this$props.data,\n          record = _this$props.record;\n\n      for (var i = 0; i < data.length; i += 1) {\n        if (data[i].menu_id === record.id) {\n          return data[i];\n        }\n      }\n\n      return null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (values) {\n      var _this$props2 = _this.props,\n          record = _this$props2.record,\n          dataIndex = _this$props2.dataIndex,\n          handleSave = _this$props2.handleSave;\n      handleSave(record, dataIndex, values);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderAction\", function () {\n      var record = _this.props.record;\n\n      if (!record.actions || record.actions.length === 0) {\n        return null;\n      }\n\n      var item = _this.findItem();\n\n      return __jsx(_Checkbox.Group, {\n        disabled: !item,\n        value: item ? item.actions : [],\n        onChange: _this.handleChange\n      }, __jsx(_Row, null, record.actions.map(function (v) {\n        return __jsx(_Col, {\n          key: v.id\n        }, __jsx(_Checkbox, {\n          value: v.id\n        }, v.name));\n      })));\n    });\n\n    return _this;\n  }\n\n  _createClass(EditableCell, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          dataIndex = _this$props3.dataIndex,\n          record = _this$props3.record,\n          menuData = _this$props3.menuData,\n          handleSave = _this$props3.handleSave,\n          restProps = _objectWithoutProperties(_this$props3, [\"dataIndex\", \"record\", \"menuData\", \"handleSave\"]);\n\n      return __jsx(\"td\", restProps, dataIndex === 'actions' && this.renderAction(), !(dataIndex === 'actions') && restProps.children);\n    }\n  }]);\n\n  return EditableCell;\n}(PureComponent);\n\nexport { EditableCell as default };","map":null,"metadata":{},"sourceType":"module"}