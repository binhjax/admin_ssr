{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/badge/style\";\nimport _Badge from \"antd/lib/badge\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\n\nvar _jsxFileName = \"/Volumes/ExternalData/Work/vnshop/admin/src/pages/example/demo.js\",\n    _dec,\n    _class,\n    _temp;\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react'; // import { connect } from 'dva';\n\nimport WithDva from '../../utils/store';\nimport { Form } from '@ant-design/compatible'; // import '../login/index.css';\n\nimport PageHeaderLayout from '@/layouts/PageHeaderLayout';\nimport PButton from '@/components/PermButton';\nimport { formatDate } from '@/utils/utils';\nimport DemoCard from '../../components/Demo/DemoCard';\nimport styles from './demo.less'; // @connect(state => ({\n//   loading: state.loading.models.demo,\n//   demo: state.demo,\n// }))\n\nlet DemoList = (_dec = Form.create(), _dec(_class = (_temp = class DemoList extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      selectedRowKeys: [],\n      selectedRows: []\n    });\n\n    _defineProperty(this, \"onItemDisableClick\", item => {\n      this.dispatch({\n        type: 'demo/changeStatus',\n        payload: {\n          id: item.id,\n          status: 2\n        }\n      });\n    });\n\n    _defineProperty(this, \"onItemEnableClick\", item => {\n      this.dispatch({\n        type: 'demo/changeStatus',\n        payload: {\n          id: item.id,\n          status: 1\n        }\n      });\n    });\n\n    _defineProperty(this, \"onItemEditClick\", item => {\n      this.dispatch({\n        type: 'demo/loadForm',\n        payload: {\n          type: 'E',\n          id: item.id\n        }\n      });\n    });\n\n    _defineProperty(this, \"onAddClick\", () => {\n      this.dispatch({\n        type: 'demo/loadForm',\n        payload: {\n          type: 'A'\n        }\n      });\n    });\n\n    _defineProperty(this, \"clearSelectRows\", () => {\n      const {\n        selectedRowKeys\n      } = this.state;\n\n      if (selectedRowKeys.length === 0) {\n        return;\n      }\n\n      this.setState({\n        selectedRowKeys: [],\n        selectedRows: []\n      });\n    });\n\n    _defineProperty(this, \"onItemDelClick\", item => {\n      _Modal.confirm({\n        title: `Confirm to delete [Basic sample data:${item.name}】？`,\n        okText: 'Confirm',\n        okType: 'danger',\n        cancelText: 'Cancel',\n        onOk: this.onDelOKClick.bind(this, item.id)\n      });\n    });\n\n    _defineProperty(this, \"handleTableSelectRow\", (record, selected) => {\n      const keys = [];\n      const rows = [];\n\n      if (selected) {\n        keys.push(record.id);\n        rows.push(record);\n      }\n\n      this.setState({\n        selectedRowKeys: keys,\n        selectedRows: rows\n      });\n    });\n\n    _defineProperty(this, \"onTableChange\", pagination => {\n      this.dispatch({\n        type: 'demo/fetch',\n        pagination: {\n          current: pagination.current,\n          pageSize: pagination.pageSize\n        }\n      });\n      this.clearSelectRows();\n    });\n\n    _defineProperty(this, \"onResetFormClick\", () => {\n      const {\n        form\n      } = this.props;\n      form.resetFields();\n      this.dispatch({\n        type: 'demo/fetch',\n        search: {},\n        pagination: {}\n      });\n    });\n\n    _defineProperty(this, \"onSearchFormSubmit\", e => {\n      if (e) {\n        e.preventDefault();\n      }\n\n      const {\n        form\n      } = this.props;\n      form.validateFields({\n        force: true\n      }, (err, values) => {\n        if (err) {\n          return;\n        }\n\n        this.dispatch({\n          type: 'demo/fetch',\n          search: values,\n          pagination: {}\n        });\n        this.clearSelectRows();\n      });\n    });\n\n    _defineProperty(this, \"onDataFormSubmit\", data => {\n      this.dispatch({\n        type: 'demo/submit',\n        payload: data\n      });\n      this.clearSelectRows();\n    });\n\n    _defineProperty(this, \"onDataFormCancel\", () => {\n      this.dispatch({\n        type: 'demo/changeFormVisible',\n        payload: false\n      });\n    });\n\n    _defineProperty(this, \"dispatch\", action => {\n      const {\n        dispatch\n      } = this.props;\n      dispatch(action);\n    });\n  }\n\n  componentDidMount() {\n    this.dispatch({\n      type: 'demo/fetch',\n      search: {},\n      pagination: {}\n    });\n  }\n\n  onDelOKClick(id) {\n    this.dispatch({\n      type: 'demo/del',\n      payload: {\n        id\n      }\n    });\n    this.clearSelectRows();\n  }\n\n  renderDataForm() {\n    return __jsx(DemoCard, {\n      onCancel: this.onDataFormCancel,\n      onSubmit: this.onDataFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 12\n      }\n    });\n  }\n\n  renderSearchForm() {\n    const {\n      form: {\n        getFieldDecorator\n      }\n    } = this.props;\n    return __jsx(Form, {\n      onSubmit: this.onSearchFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }\n    }, __jsx(_Row, {\n      gutter: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }, __jsx(_Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }, __jsx(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }, getFieldDecorator('queryValue')(__jsx(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u9700\\u8981\\u67E5\\u8BE2\\u7684\\u5185\\u5BB9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 48\n      }\n    })))), __jsx(_Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      style: {\n        overflow: 'hidden',\n        paddingTop: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, __jsx(_Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }\n    }, \"\\u67E5\\u8BE2\"), __jsx(_Button, {\n      style: {\n        marginLeft: 8\n      },\n      onClick: this.onResetFormClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }\n    }, \"\\u91CD\\u7F6E\")))));\n  }\n\n  render() {\n    const {\n      loading,\n      demo: {\n        data: {\n          list,\n          pagination\n        }\n      }\n    } = this.props;\n    const {\n      selectedRows,\n      selectedRowKeys\n    } = this.state;\n    const columns = [{\n      title: 'Code',\n      dataIndex: 'code'\n    }, {\n      title: 'Name',\n      dataIndex: 'name'\n    }, {\n      title: 'Remarks',\n      dataIndex: 'memo'\n    }, {\n      title: 'Status',\n      dataIndex: 'status',\n      render: val => {\n        if (val === 1) {\n          return __jsx(_Badge, {\n            status: \"success\",\n            text: \"Enable\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 20\n            }\n          });\n        }\n\n        return __jsx(_Badge, {\n          status: \"error\",\n          text: \"Deactivate\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 18\n          }\n        });\n      }\n    }, {\n      title: 'Created Time',\n      dataIndex: 'created_at',\n      render: val => __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 24\n        }\n      }, formatDate(val, 'YYYY-MM-DD HH:mm'))\n    }];\n\n    const paginationProps = _objectSpread({\n      showSizeChanger: true,\n      showQuickJumper: true,\n      showTotal: total => __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 27\n        }\n      }, \"Total \", total, \" pages\")\n    }, pagination);\n\n    const breadcrumbList = [{\n      title: 'Demo use case'\n    }, {\n      title: 'Basic example',\n      href: '/example/demo'\n    }];\n    return __jsx(PageHeaderLayout, {\n      title: \"Basic example\",\n      breadcrumbList: breadcrumbList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 7\n      }\n    }, __jsx(_Card, {\n      bordered: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: styles.tableList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: styles.tableListForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }\n    }, this.renderSearchForm()), __jsx(\"div\", {\n      className: styles.tableListOperator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }\n    }, __jsx(PButton, {\n      code: \"add\",\n      type: \"primary\",\n      onClick: () => this.onAddClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 15\n      }\n    }, \"New\"), selectedRows.length === 1 && [__jsx(PButton, {\n      key: \"edit\",\n      code: \"edit\",\n      onClick: () => this.onItemEditClick(selectedRows[0]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }\n    }, \"Edit\"), __jsx(PButton, {\n      key: \"del\",\n      code: \"del\",\n      type: \"danger\",\n      onClick: () => this.onItemDelClick(selectedRows[0]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }\n    }, \"Delete\"), selectedRows[0].status === 2 && __jsx(PButton, {\n      key: \"enable\",\n      code: \"enable\",\n      onClick: () => this.onItemEnableClick(selectedRows[0]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 19\n      }\n    }, \"Enable\"), selectedRows[0].status === 1 && __jsx(PButton, {\n      key: \"disable\",\n      code: \"disable\",\n      type: \"danger\",\n      onClick: () => this.onItemDisableClick(selectedRows[0]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 19\n      }\n    }, \"Disable\")]), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 13\n      }\n    }, __jsx(_Table, {\n      rowSelection: {\n        selectedRowKeys,\n        onSelect: this.handleTableSelectRow\n      },\n      loading: loading,\n      rowKey: record => record.id,\n      dataSource: list,\n      columns: columns,\n      pagination: paginationProps,\n      onChange: this.onTableChange,\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 15\n      }\n    })))), this.renderDataForm());\n  }\n\n}, _temp)) || _class);\nexport default WithDva(state => ({\n  loading: state.loading.models.demo,\n  demo: state.demo\n}))(DemoList); // export default DemoList;","map":{"version":3,"sources":["/Volumes/ExternalData/Work/vnshop/admin/src/pages/example/demo.js"],"names":["React","PureComponent","WithDva","Form","PageHeaderLayout","PButton","formatDate","DemoCard","styles","DemoList","create","selectedRowKeys","selectedRows","item","dispatch","type","payload","id","status","state","length","setState","confirm","title","name","okText","okType","cancelText","onOk","onDelOKClick","bind","record","selected","keys","rows","push","pagination","current","pageSize","clearSelectRows","form","props","resetFields","search","e","preventDefault","validateFields","force","err","values","data","action","componentDidMount","renderDataForm","onDataFormCancel","onDataFormSubmit","renderSearchForm","getFieldDecorator","onSearchFormSubmit","overflow","paddingTop","marginLeft","onResetFormClick","render","loading","demo","list","columns","dataIndex","val","paginationProps","showSizeChanger","showQuickJumper","showTotal","total","breadcrumbList","href","tableList","tableListForm","tableListOperator","onAddClick","onItemEditClick","onItemDelClick","onItemEnableClick","onItemDisableClick","onSelect","handleTableSelectRow","onTableChange","models"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\n// import { connect } from 'dva';\nimport WithDva from '../../utils/store';\n\nimport { Form } from '@ant-design/compatible';\n// import '../login/index.css';\nimport { Row, Col, Card, Input, Button, Table, Modal, Badge } from 'antd';\nimport PageHeaderLayout from '@/layouts/PageHeaderLayout';\nimport PButton from '@/components/PermButton';\nimport { formatDate } from '@/utils/utils';\nimport DemoCard from '../../components/Demo/DemoCard';\n\nimport styles from './demo.less';\n\n// @connect(state => ({\n//   loading: state.loading.models.demo,\n//   demo: state.demo,\n// }))\n@Form.create()\nclass DemoList extends PureComponent {\n  state = {\n    selectedRowKeys: [],\n    selectedRows: [],\n  };\n\n  componentDidMount() {\n    this.dispatch({\n      type: 'demo/fetch',\n      search: {},\n      pagination: {},\n    });\n  }\n\n  onItemDisableClick = item => {\n    this.dispatch({\n      type: 'demo/changeStatus',\n      payload: { id: item.id, status: 2 },\n    });\n  };\n\n  onItemEnableClick = item => {\n    this.dispatch({\n      type: 'demo/changeStatus',\n      payload: { id: item.id, status: 1 },\n    });\n  };\n\n  onItemEditClick = item => {\n    this.dispatch({\n      type: 'demo/loadForm',\n      payload: {\n        type: 'E',\n        id: item.id,\n      },\n    });\n  };\n\n  onAddClick = () => {\n    this.dispatch({\n      type: 'demo/loadForm',\n      payload: {\n        type: 'A',\n      },\n    });\n  };\n\n  onDelOKClick(id) {\n    this.dispatch({\n      type: 'demo/del',\n      payload: { id },\n    });\n    this.clearSelectRows();\n  }\n\n  clearSelectRows = () => {\n    const { selectedRowKeys } = this.state;\n    if (selectedRowKeys.length === 0) {\n      return;\n    }\n    this.setState({ selectedRowKeys: [], selectedRows: [] });\n  };\n\n  onItemDelClick = item => {\n    Modal.confirm({\n      title: `Confirm to delete [Basic sample data:${item.name}】？`,\n      okText: 'Confirm',\n      okType: 'danger',\n      cancelText: 'Cancel',\n      onOk: this.onDelOKClick.bind(this, item.id),\n    });\n  };\n\n  handleTableSelectRow = (record, selected) => {\n    const keys = [];\n    const rows = [];\n    if (selected) {\n      keys.push(record.id);\n      rows.push(record);\n    }\n    this.setState({\n      selectedRowKeys: keys,\n      selectedRows: rows,\n    });\n  };\n\n  onTableChange = pagination => {\n    this.dispatch({\n      type: 'demo/fetch',\n      pagination: {\n        current: pagination.current,\n        pageSize: pagination.pageSize,\n      },\n    });\n    this.clearSelectRows();\n  };\n\n  onResetFormClick = () => {\n    const { form } = this.props;\n    form.resetFields();\n    this.dispatch({\n      type: 'demo/fetch',\n      search: {},\n      pagination: {},\n    });\n  };\n\n  onSearchFormSubmit = e => {\n    if (e) {\n      e.preventDefault();\n    }\n    const { form } = this.props;\n    form.validateFields({ force: true }, (err, values) => {\n      if (err) {\n        return;\n      }\n      this.dispatch({\n        type: 'demo/fetch',\n        search: values,\n        pagination: {},\n      });\n      this.clearSelectRows();\n    });\n  };\n\n  onDataFormSubmit = data => {\n    this.dispatch({\n      type: 'demo/submit',\n      payload: data,\n    });\n    this.clearSelectRows();\n  };\n\n  onDataFormCancel = () => {\n    this.dispatch({\n      type: 'demo/changeFormVisible',\n      payload: false,\n    });\n  };\n\n  dispatch = action => {\n    const { dispatch } = this.props;\n    dispatch(action);\n  };\n\n  renderDataForm() {\n    return <DemoCard onCancel={this.onDataFormCancel} onSubmit={this.onDataFormSubmit} />;\n  }\n\n  renderSearchForm() {\n    const {\n      form: { getFieldDecorator },\n    } = this.props;\n    return (\n      <Form onSubmit={this.onSearchFormSubmit}>\n        <Row gutter={16}>\n          <Col span={8}>\n            <Form.Item>\n              {getFieldDecorator('queryValue')(<Input placeholder=\"请输入需要查询的内容\" />)}\n            </Form.Item>\n          </Col>\n          <Col span={8}>\n            <div style={{ overflow: 'hidden', paddingTop: 4 }}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                查询\n              </Button>\n              <Button style={{ marginLeft: 8 }} onClick={this.onResetFormClick}>\n                重置\n              </Button>\n            </div>\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n\n  render() {\n    const {\n      loading,\n      demo: {\n        data: { list, pagination },\n      },\n    } = this.props;\n\n    const { selectedRows, selectedRowKeys } = this.state;\n\n    const columns = [\n      {\n        title: 'Code',\n        dataIndex: 'code',\n      },\n      {\n        title: 'Name',\n        dataIndex: 'name',\n      },\n      {\n        title: 'Remarks',\n        dataIndex: 'memo',\n      },\n      {\n        title: 'Status',\n        dataIndex: 'status',\n        render: val => {\n          if (val === 1) {\n            return <Badge status=\"success\" text=\"Enable\" />;\n          }\n          return <Badge status=\"error\" text=\"Deactivate\" />;\n        },\n      },\n      {\n        title: 'Created Time',\n        dataIndex: 'created_at',\n        render: val => <span>{formatDate(val, 'YYYY-MM-DD HH:mm')}</span>,\n      },\n    ];\n\n    const paginationProps = {\n      showSizeChanger: true,\n      showQuickJumper: true,\n      showTotal: total => <span>Total {total} pages</span>,\n      ...pagination,\n    };\n\n    const breadcrumbList = [\n      { title: 'Demo use case' },\n      { title: 'Basic example', href: '/example/demo' },\n    ];\n\n    return (\n      <PageHeaderLayout title=\"Basic example\" breadcrumbList={breadcrumbList}>\n        <Card bordered={false}>\n          <div className={styles.tableList}>\n            <div className={styles.tableListForm}>{this.renderSearchForm()}</div>\n            <div className={styles.tableListOperator}>\n              <PButton code=\"add\" type=\"primary\" onClick={() => this.onAddClick()}>\n                New\n              </PButton>\n              {selectedRows.length === 1 && [\n                <PButton\n                  key=\"edit\"\n                  code=\"edit\"\n                  onClick={() => this.onItemEditClick(selectedRows[0])}\n                >\n                  Edit\n                </PButton>,\n                <PButton\n                  key=\"del\"\n                  code=\"del\"\n                  type=\"danger\"\n                  onClick={() => this.onItemDelClick(selectedRows[0])}\n                >\n                  Delete\n                </PButton>,\n                selectedRows[0].status === 2 && (\n                  <PButton\n                    key=\"enable\"\n                    code=\"enable\"\n                    onClick={() => this.onItemEnableClick(selectedRows[0])}\n                  >\n                    Enable\n                  </PButton>\n                ),\n                selectedRows[0].status === 1 && (\n                  <PButton\n                    key=\"disable\"\n                    code=\"disable\"\n                    type=\"danger\"\n                    onClick={() => this.onItemDisableClick(selectedRows[0])}\n                  >\n                    Disable\n                  </PButton>\n                ),\n              ]}\n            </div>\n            <div>\n              <Table\n                rowSelection={{\n                  selectedRowKeys,\n                  onSelect: this.handleTableSelectRow,\n                }}\n                loading={loading}\n                rowKey={record => record.id}\n                dataSource={list}\n                columns={columns}\n                pagination={paginationProps}\n                onChange={this.onTableChange}\n                size=\"small\"\n              />\n            </div>\n          </div>\n        </Card>\n        {this.renderDataForm()}\n      </PageHeaderLayout>\n    );\n  }\n}\n\nexport default WithDva(state => ({\n  loading: state.loading.models.demo,\n  demo: state.demo,\n}))(DemoList);\n\n// export default DemoList;\n"]},"metadata":{},"sourceType":"module"}