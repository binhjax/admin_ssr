{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/popconfirm/style\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nimport \"antd/lib/divider/style\";\nimport _Divider from \"antd/lib/divider\";\nvar _jsxFileName = \"/Users/nguyenthanhbinh/Work/vnshop/admin/src/pages/menu/MenuAction/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { newUUID } from '@/utils/utils';\nimport FormDialog from './FormDialog';\nimport TplDialog from './TplDialog';\nimport styles from './index.less';\n\nfunction fillKey(data) {\n  if (!data) {\n    return [];\n  }\n\n  return data.map(item => {\n    const nitem = _objectSpread({}, item);\n\n    if (!nitem.key) {\n      nitem.key = newUUID();\n    }\n\n    return nitem;\n  });\n}\n\nexport default class MenuAction extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      dataSource: [],\n      formVisible: false,\n      formData: {},\n      tplVisible: false\n    });\n\n    _defineProperty(this, \"handleDelete\", key => {\n      const {\n        dataSource\n      } = this.state;\n      const data = dataSource.filter(item => item.key !== key);\n      this.setState({\n        dataSource: data\n      }, () => {\n        this.triggerChange(data);\n      });\n    });\n\n    _defineProperty(this, \"handleEdit\", item => {\n      this.setState({\n        formVisible: true,\n        formData: item\n      });\n    });\n\n    _defineProperty(this, \"handleFormCancel\", () => {\n      this.setState({\n        formVisible: false\n      });\n    });\n\n    _defineProperty(this, \"handleFormSubmit\", formData => {\n      const {\n        dataSource\n      } = this.state;\n      const data = [...dataSource];\n      let exists = false;\n\n      for (let i = 0; i < data.length; i += 1) {\n        if (data[i].code === formData.code) {\n          exists = true;\n          data[i] = _objectSpread({\n            key: formData.code\n          }, formData);\n          break;\n        }\n      }\n\n      if (!exists) {\n        data.push(_objectSpread({\n          key: formData.code\n        }, formData));\n      }\n\n      this.setState({\n        dataSource: data,\n        formVisible: false\n      }, () => {\n        this.triggerChange(data);\n      });\n    });\n\n    _defineProperty(this, \"handleAdd\", () => {\n      this.setState({\n        formVisible: true,\n        formData: {}\n      });\n    });\n\n    _defineProperty(this, \"handleTplCancel\", () => {\n      this.setState({\n        tplVisible: false\n      });\n    });\n\n    _defineProperty(this, \"handleTplSubmit\", formData => {\n      const {\n        path\n      } = formData;\n      const tplData = [{\n        code: 'add',\n        name: '新增',\n        resources: [{\n          method: 'POST',\n          path\n        }]\n      }, {\n        code: 'edit',\n        name: '编辑',\n        resources: [{\n          method: 'GET',\n          path: `${path}/:id`\n        }, {\n          method: 'PUT',\n          path: `${path}/:id`\n        }]\n      }, {\n        code: 'del',\n        name: '删除',\n        resources: [{\n          method: 'DELETE',\n          path: `${path}/:id`\n        }]\n      }, {\n        code: 'view',\n        name: '查看',\n        resources: [{\n          method: 'GET',\n          path: `${path}/:id`\n        }]\n      }, {\n        code: 'query',\n        name: '查询',\n        resources: [{\n          method: 'GET',\n          path\n        }]\n      }];\n      const newData = tplData.map(v => _objectSpread({\n        key: v.code\n      }, v));\n      const {\n        dataSource\n      } = this.state;\n      const data = [...dataSource];\n      const mDataSource = data.reduce((m, cur) => {\n        const nm = _objectSpread({}, m);\n\n        nm[cur.code] = cur;\n        return nm;\n      }, {});\n\n      for (let i = 0; i < newData.length; i += 1) {\n        if (!mDataSource[newData[i].key]) {\n          data.push(_objectSpread({}, newData[i]));\n        }\n      }\n\n      this.setState({\n        dataSource: data,\n        tplVisible: false\n      }, () => {\n        this.triggerChange(data);\n      });\n    });\n\n    _defineProperty(this, \"handleTplAdd\", () => {\n      this.setState({\n        tplVisible: true\n      });\n    });\n\n    _defineProperty(this, \"handleSave\", row => {\n      const {\n        dataSource\n      } = this.state;\n      const data = [...dataSource];\n      const index = data.findIndex(item => row.key === item.key);\n      const item = data[index];\n      data.splice(index, 1, _objectSpread(_objectSpread({}, item), row));\n      this.setState({\n        dataSource: data\n      }, () => {\n        this.triggerChange(data);\n      });\n    });\n\n    _defineProperty(this, \"triggerChange\", data => {\n      const {\n        onChange\n      } = this.props;\n\n      if (onChange) {\n        onChange(data);\n      }\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps, state) {\n    if ('value' in nextProps) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        dataSource: fillKey(nextProps.value)\n      });\n    }\n\n    return state;\n  }\n\n  render() {\n    const {\n      dataSource,\n      tplVisible,\n      formData,\n      formVisible\n    } = this.state;\n    const columns = [{\n      title: '动作编号',\n      dataIndex: 'code',\n      width: '35%'\n    }, {\n      title: '动作名称',\n      dataIndex: 'name',\n      width: '35%'\n    }, {\n      title: '操作',\n      dataIndex: 'key',\n      width: '30%',\n      render: (_, record) => {\n        return [__jsx(\"a\", {\n          href: \"#\",\n          onClick: () => this.handleEdit(record),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }\n        }, \"\\u7F16\\u8F91\"), __jsx(_Divider, {\n          type: \"vertical\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }\n        }), __jsx(_Popconfirm, {\n          title: \"\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u8BE5\\u6570\\u636E\\u5417?\",\n          onConfirm: () => this.handleDelete(record.key),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }\n        }, __jsx(\"a\", {\n          href: \"#\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }\n        }, \"\\u5220\\u9664\"))];\n      }\n    }];\n    return __jsx(\"div\", {\n      className: styles.tableList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: styles.tableListOperator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }\n    }, __jsx(_Button, {\n      onClick: this.handleAdd,\n      size: \"small\",\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }\n    }, \"\\u65B0\\u589E\"), __jsx(_Button, {\n      onClick: this.handleTplAdd,\n      size: \"small\",\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }, \"\\u5FEB\\u901F\\u6A21\\u677F\")), __jsx(_Table, {\n      rowKey: record => record.key,\n      bordered: true,\n      dataSource: dataSource,\n      columns: columns,\n      pagination: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }\n    }), __jsx(TplDialog, {\n      visible: tplVisible,\n      onSubmit: this.handleTplSubmit,\n      onCancel: this.handleTplCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }\n    }), __jsx(FormDialog, {\n      visible: formVisible,\n      formData: formData,\n      onSubmit: this.handleFormSubmit,\n      onCancel: this.handleFormCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/nguyenthanhbinh/Work/vnshop/admin/src/pages/menu/MenuAction/index.js"],"names":["React","PureComponent","newUUID","FormDialog","TplDialog","styles","fillKey","data","map","item","nitem","key","MenuAction","dataSource","formVisible","formData","tplVisible","state","filter","setState","triggerChange","exists","i","length","code","push","path","tplData","name","resources","method","newData","v","mDataSource","reduce","m","cur","nm","row","index","findIndex","splice","onChange","props","getDerivedStateFromProps","nextProps","value","render","columns","title","dataIndex","width","_","record","handleEdit","handleDelete","tableList","tableListOperator","handleAdd","handleTplAdd","handleTplSubmit","handleTplCancel","handleFormSubmit","handleFormCancel"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { Table, Button, Popconfirm, Divider } from 'antd';\r\nimport { newUUID } from '@/utils/utils';\r\nimport FormDialog from './FormDialog';\r\nimport TplDialog from './TplDialog';\r\nimport styles from './index.less';\r\n\r\n\r\n\r\nfunction fillKey(data) {\r\n  if (!data) {\r\n    return [];\r\n  }\r\n  return data.map(item => {\r\n    const nitem = { ...item };\r\n    if (!nitem.key) {\r\n      nitem.key = newUUID();\r\n    }\r\n    return nitem;\r\n  });\r\n}\r\n\r\nexport default class MenuAction extends PureComponent {\r\n  state = {\r\n    dataSource: [],\r\n    formVisible: false,\r\n    formData: {},\r\n    tplVisible: false,\r\n  };\r\n\r\n  static getDerivedStateFromProps(nextProps, state) {\r\n    if ('value' in nextProps) {\r\n      return {\r\n        ...state,\r\n        dataSource: fillKey(nextProps.value),\r\n      };\r\n    }\r\n    return state;\r\n  }\r\n\r\n  handleDelete = key => {\r\n    const { dataSource } = this.state;\r\n    const data = dataSource.filter(item => item.key !== key);\r\n    this.setState({ dataSource: data }, () => {\r\n      this.triggerChange(data);\r\n    });\r\n  };\r\n\r\n  handleEdit = item => {\r\n    this.setState({\r\n      formVisible: true,\r\n      formData: item,\r\n    });\r\n  };\r\n\r\n  handleFormCancel = () => {\r\n    this.setState({ formVisible: false });\r\n  };\r\n\r\n  handleFormSubmit = formData => {\r\n    const { dataSource } = this.state;\r\n    const data = [...dataSource];\r\n    let exists = false;\r\n    for (let i = 0; i < data.length; i += 1) {\r\n      if (data[i].code === formData.code) {\r\n        exists = true;\r\n        data[i] = { key: formData.code, ...formData };\r\n        break;\r\n      }\r\n    }\r\n    if (!exists) {\r\n      data.push({ key: formData.code, ...formData });\r\n    }\r\n    this.setState({ dataSource: data, formVisible: false }, () => {\r\n      this.triggerChange(data);\r\n    });\r\n  };\r\n\r\n  handleAdd = () => {\r\n    this.setState({ formVisible: true, formData: {} });\r\n  };\r\n\r\n  handleTplCancel = () => {\r\n    this.setState({ tplVisible: false });\r\n  };\r\n\r\n  handleTplSubmit = formData => {\r\n    const { path } = formData;\r\n    const tplData = [\r\n      {\r\n        code: 'add',\r\n        name: '新增',\r\n        resources: [{ method: 'POST', path }],\r\n      },\r\n      {\r\n        code: 'edit',\r\n        name: '编辑',\r\n        resources: [{ method: 'GET', path: `${path}/:id` }, { method: 'PUT', path: `${path}/:id` }],\r\n      },\r\n      {\r\n        code: 'del',\r\n        name: '删除',\r\n        resources: [{ method: 'DELETE', path: `${path}/:id` }],\r\n      },\r\n      {\r\n        code: 'view',\r\n        name: '查看',\r\n        resources: [{ method: 'GET', path: `${path}/:id` }],\r\n      },\r\n      {\r\n        code: 'query',\r\n        name: '查询',\r\n        resources: [{ method: 'GET', path }],\r\n      },\r\n    ];\r\n\r\n    const newData = tplData.map(v => ({ key: v.code, ...v }));\r\n    const { dataSource } = this.state;\r\n    const data = [...dataSource];\r\n    const mDataSource = data.reduce((m, cur) => {\r\n      const nm = { ...m };\r\n      nm[cur.code] = cur;\r\n      return nm;\r\n    }, {});\r\n    for (let i = 0; i < newData.length; i += 1) {\r\n      if (!mDataSource[newData[i].key]) {\r\n        data.push({ ...newData[i] });\r\n      }\r\n    }\r\n\r\n    this.setState(\r\n      {\r\n        dataSource: data,\r\n        tplVisible: false,\r\n      },\r\n      () => {\r\n        this.triggerChange(data);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleTplAdd = () => {\r\n    this.setState({ tplVisible: true });\r\n  };\r\n\r\n  handleSave = row => {\r\n    const { dataSource } = this.state;\r\n    const data = [...dataSource];\r\n    const index = data.findIndex(item => row.key === item.key);\r\n    const item = data[index];\r\n    data.splice(index, 1, {\r\n      ...item,\r\n      ...row,\r\n    });\r\n    this.setState({ dataSource: data }, () => {\r\n      this.triggerChange(data);\r\n    });\r\n  };\r\n\r\n  triggerChange = data => {\r\n    const { onChange } = this.props;\r\n    if (onChange) {\r\n      onChange(data);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { dataSource, tplVisible, formData, formVisible } = this.state;\r\n\r\n    const columns = [\r\n      {\r\n        title: '动作编号',\r\n        dataIndex: 'code',\r\n        width: '35%',\r\n      },\r\n      {\r\n        title: '动作名称',\r\n        dataIndex: 'name',\r\n        width: '35%',\r\n      },\r\n      {\r\n        title: '操作',\r\n        dataIndex: 'key',\r\n        width: '30%',\r\n        render: (_, record) => {\r\n          return [\r\n            <a href=\"#\" onClick={() => this.handleEdit(record)}>\r\n              编辑\r\n            </a>,\r\n            <Divider type=\"vertical\" />,\r\n            <Popconfirm title=\"确定要删除该数据吗?\" onConfirm={() => this.handleDelete(record.key)}>\r\n              <a href=\"#\">删除</a>\r\n            </Popconfirm>,\r\n          ];\r\n        },\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div className={styles.tableList}>\r\n        <div className={styles.tableListOperator}>\r\n          <Button onClick={this.handleAdd} size=\"small\" type=\"primary\">\r\n            新增\r\n          </Button>\r\n          <Button onClick={this.handleTplAdd} size=\"small\" type=\"primary\">\r\n            快速模板\r\n          </Button>\r\n        </div>\r\n        <Table\r\n          rowKey={record => record.key}\r\n          bordered\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          pagination={false}\r\n        />\r\n        <TplDialog\r\n          visible={tplVisible}\r\n          onSubmit={this.handleTplSubmit}\r\n          onCancel={this.handleTplCancel}\r\n        />\r\n        <FormDialog\r\n          visible={formVisible}\r\n          formData={formData}\r\n          onSubmit={this.handleFormSubmit}\r\n          onCancel={this.handleFormCancel}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}