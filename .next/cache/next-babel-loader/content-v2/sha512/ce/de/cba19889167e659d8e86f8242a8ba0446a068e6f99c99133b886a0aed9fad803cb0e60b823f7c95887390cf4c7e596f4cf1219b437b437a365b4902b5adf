{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/tuanquang/admin_ssr/src/components/Test/CustomNodeWidget.tsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport { PortWidget } from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\nconst styles = {\n  tableHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    color: 'white',\n    fontWeight: 900,\n    fontSize: '20px',\n    background: '#316896',\n    marginBottom: '-2px'\n  },\n  tableHeadText: {\n    fill: '#fff',\n    fontWeight: 700,\n    border: ' 0 solid #e2e8f0',\n    padding: '7px 30px 7px '\n  },\n  tableRow: {\n    fontWeight: 700,\n    fontSize: '18px',\n    display: 'flex',\n    flexBasis: 100,\n    justifyContent: 'space-between'\n  },\n  rightPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    right: '0px',\n    zIndex: -1\n  },\n  leftPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '0',\n    zIndex: 0\n  }\n};\nexport const Port = styled.div`\n  height: 20px;\n  background: #f6f6f6;\n  cursor: pointer;\n  margin-top: 5px;\n\n  &:hover {\n    background: #deecf3;\n  }\n`;\nexport class CustomNodeWidget extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"addPort\", () => {});\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minWidth: this.props.size * 2,\n        minHeight: this.props.size,\n        width: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.tableHeader,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.tableHeadText,\n          children: \"Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), Object.entries(this.props.node.getPorts()).map(([key, value], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.tableRow,\n        children: [/*#__PURE__*/_jsxDEV(PortWidget, {\n          port: value,\n          engine: this.props.engine,\n          style: styles.leftPort,\n          children: /*#__PURE__*/_jsxDEV(Port, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PortWidget, {\n          port: value,\n          engine: this.props.engine,\n          style: styles.rightPort,\n          children: /*#__PURE__*/_jsxDEV(Port, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingLeft: 30\n          },\n          children: value.getOptions().extras.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: '1 0 100px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingRight: 30,\n            color: '#999'\n          },\n          children: value.getOptions().extras.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Test/CustomNodeWidget.tsx"],"names":["React","PortWidget","styled","styles","tableHeader","display","alignItems","color","fontWeight","fontSize","background","marginBottom","tableHeadText","fill","border","padding","tableRow","flexBasis","justifyContent","rightPort","width","height","position","right","zIndex","leftPort","left","Port","div","CustomNodeWidget","Component","constructor","props","render","minWidth","size","minHeight","Object","entries","node","getPorts","map","key","value","index","engine","paddingLeft","getOptions","extras","name","flex","paddingRight","type"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAIEC,UAJF,QAKO,8BALP;AAMA,OAAOC,MAAP,MAAmB,iBAAnB;AAQA,MAAMC,MAAM,GAAG;AACbC,EAAAA,WAAW,EAAE;AACXC,IAAAA,OAAO,EAAE,MADE;AAEXC,IAAAA,UAAU,EAAE,QAFD;AAGXC,IAAAA,KAAK,EAAE,OAHI;AAIXC,IAAAA,UAAU,EAAE,GAJD;AAKXC,IAAAA,QAAQ,EAAE,MALC;AAMXC,IAAAA,UAAU,EAAE,SAND;AAOXC,IAAAA,YAAY,EAAE;AAPH,GADA;AAUbC,EAAAA,aAAa,EAAE;AACbC,IAAAA,IAAI,EAAE,MADO;AAEbL,IAAAA,UAAU,EAAE,GAFC;AAGbM,IAAAA,MAAM,EAAE,kBAHK;AAIbC,IAAAA,OAAO,EAAE;AAJI,GAVF;AAgBbC,EAAAA,QAAQ,EAAE;AACRR,IAAAA,UAAU,EAAE,GADJ;AAERC,IAAAA,QAAQ,EAAE,MAFF;AAGRJ,IAAAA,OAAO,EAAE,MAHD;AAIRY,IAAAA,SAAS,EAAE,GAJH;AAKRC,IAAAA,cAAc,EAAE;AALR,GAhBG;AAuBbC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE,MADE;AAETC,IAAAA,MAAM,EAAE,MAFC;AAGTC,IAAAA,QAAQ,EAAE,UAHD;AAITC,IAAAA,KAAK,EAAE,KAJE;AAKTC,IAAAA,MAAM,EAAE,CAAC;AALA,GAvBE;AA+BbC,EAAAA,QAAQ,EAAE;AACRL,IAAAA,KAAK,EAAE,MADC;AAERC,IAAAA,MAAM,EAAE,MAFA;AAGRC,IAAAA,QAAQ,EAAE,UAHF;AAIRI,IAAAA,IAAI,EAAE,GAJE;AAKRF,IAAAA,MAAM,EAAE;AALA;AA/BG,CAAf;AAuCA,OAAO,MAAMG,IAAI,GAAGzB,MAAM,CAAC0B,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATO;AAUP,OAAO,MAAMC,gBAAN,SAA+B7B,KAAK,CAAC8B,SAArC,CAAsE;AAC3EC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,qCAGT,MAAM,CAAE,CAHC;AAElB;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,IAAX,GAAkB,CAA9B;AAAiCC,QAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWG,IAAvD;AAA6Df,QAAAA,KAAK,EAAE;AAApE,OAAZ;AAAA,8BACE;AAAK,QAAA,KAAK,EAAEjB,MAAM,CAACC,WAAnB;AAAA,+BACE;AAAK,UAAA,KAAK,EAAED,MAAM,CAACS,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAIGyB,MAAM,CAACC,OAAP,CAAe,KAAKN,KAAL,CAAWO,IAAX,CAAgBC,QAAhB,EAAf,EAA2CC,GAA3C,CAA+C,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,EAAeC,KAAf,kBAC9C;AAAK,QAAA,KAAK,EAAEzC,MAAM,CAACa,QAAnB;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAE2B,KAAlB;AAAyB,UAAA,MAAM,EAAE,KAAKX,KAAL,CAAWa,MAA5C;AAAoD,UAAA,KAAK,EAAE1C,MAAM,CAACsB,QAAlE;AAAA,iCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAEkB,KAAlB;AAAyB,UAAA,MAAM,EAAE,KAAKX,KAAL,CAAWa,MAA5C;AAAoD,UAAA,KAAK,EAAE1C,MAAM,CAACgB,SAAlE;AAAA,iCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAK,UAAA,KAAK,EAAE;AAAE2B,YAAAA,WAAW,EAAE;AAAf,WAAZ;AAAA,oBAAkCH,KAAK,CAACI,UAAN,GAAmBC,MAAnB,CAA0BC;AAA5D;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR;AAAZ;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,YAAY,EAAE,EAAhB;AAAoB5C,YAAAA,KAAK,EAAE;AAA3B,WAAZ;AAAA,oBAAkDoC,KAAK,CAACI,UAAN,GAAmBC,MAAnB,CAA0BI;AAA5E;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA,SAAkCR,KAAlC;AAAA;AAAA;AAAA;AAAA,cADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AA1B0E","sourcesContent":["import * as React from 'react';\nimport { CustomNodeModel } from './CustomNodeModel';\nimport {\n  DiagramEngine,\n  PortModel,\n  PortModelAlignment,\n  PortWidget,\n} from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\n\nexport interface CustomNodeWidgetProps {\n  node: CustomNodeModel;\n  engine: DiagramEngine;\n  size?: number;\n}\n\nconst styles = {\n  tableHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    color: 'white',\n    fontWeight: 900,\n    fontSize: '20px',\n    background: '#316896',\n    marginBottom: '-2px',\n  },\n  tableHeadText: {\n    fill: '#fff',\n    fontWeight: 700,\n    border: ' 0 solid #e2e8f0',\n    padding: '7px 30px 7px ',\n  },\n  tableRow: {\n    fontWeight: 700,\n    fontSize: '18px',\n    display: 'flex',\n    flexBasis: 100,\n    justifyContent: 'space-between',\n  },\n  rightPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    right: '0px',\n    zIndex: -1,\n  },\n\n  leftPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '0',\n    zIndex: 0,\n  },\n};\nexport const Port = styled.div`\n  height: 20px;\n  background: #f6f6f6;\n  cursor: pointer;\n  margin-top: 5px;\n\n  &:hover {\n    background: #deecf3;\n  }\n`;\nexport class CustomNodeWidget extends React.Component<CustomNodeWidgetProps> {\n  constructor(props) {\n    super(props);\n  }\n  addPort = () => {};\n  render() {\n    return (\n      <div style={{ minWidth: this.props.size * 2, minHeight: this.props.size, width: 'auto' }}>\n        <div style={styles.tableHeader}>\n          <div style={styles.tableHeadText}>Test</div>\n        </div>\n        {Object.entries(this.props.node.getPorts()).map(([key, value], index: any) => (\n          <div style={styles.tableRow} key={index}>\n            <PortWidget port={value} engine={this.props.engine} style={styles.leftPort}>\n              <Port />\n            </PortWidget>\n            <PortWidget port={value} engine={this.props.engine} style={styles.rightPort}>\n              <Port />\n            </PortWidget>\n            <div style={{ paddingLeft: 30 }}>{value.getOptions().extras.name}</div>\n            <div style={{ flex: '1 0 100px' }}></div>\n            <div style={{ paddingRight: 30, color: '#999' }}>{value.getOptions().extras.type}</div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}