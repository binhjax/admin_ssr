{"ast":null,"code":"import _classCallCheck from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { DefaultLinkModel } from '@projectstorm/react-diagrams-defaults';\nimport { CustomLinkFactory } from './CustomLinkFactory';\nexport var CustomLinkModel = /*#__PURE__*/function (_DefaultLinkModel) {\n  _inherits(CustomLinkModel, _DefaultLinkModel);\n\n  var _super = _createSuper(CustomLinkModel);\n\n  function CustomLinkModel() {\n    var _this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CustomLinkModel);\n\n    _this = _super.call(this, _objectSpread({\n      width: 1,\n      type: CustomLinkFactory.NAME\n    }, options));\n\n    _defineProperty(_assertThisInitialized(_this), \"lastHoverIndexOfPath\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_lastPathXdirection\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_firstPathXdirection\", void 0);\n\n    _this.lastHoverIndexOfPath = 0;\n    _this._lastPathXdirection = false;\n    _this._firstPathXdirection = false;\n\n    _this.addLabel('test');\n\n    return _this;\n  }\n\n  _createClass(CustomLinkModel, [{\n    key: \"setFirstAndLastPathsDirection\",\n    value: function setFirstAndLastPathsDirection() {\n      var points = this.getPoints();\n\n      for (var i = 1; i < points.length; i += points.length - 2) {\n        var dx = Math.abs(points[i].getX() - points[i - 1].getX());\n        var dy = Math.abs(points[i].getY() - points[i - 1].getY());\n\n        if (i - 1 === 0) {\n          this._firstPathXdirection = dx > dy;\n        } else {\n          this._lastPathXdirection = dx > dy;\n        }\n      }\n    } // @ts-ignore\n\n  }, {\n    key: \"addPoint\",\n    value: function addPoint(pointModel) {\n      var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      // @ts-ignore\n      _get(_getPrototypeOf(CustomLinkModel.prototype), \"addPoint\", this).call(this, pointModel, index);\n\n      this.setFirstAndLastPathsDirection();\n      return pointModel;\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(event) {\n      _get(_getPrototypeOf(CustomLinkModel.prototype), \"deserialize\", this).call(this, event);\n\n      this.setFirstAndLastPathsDirection();\n    }\n  }, {\n    key: \"setManuallyFirstAndLastPathsDirection\",\n    value: function setManuallyFirstAndLastPathsDirection(first, last) {\n      this._firstPathXdirection = first;\n      this._lastPathXdirection = last;\n    }\n  }, {\n    key: \"getLastPathXdirection\",\n    value: function getLastPathXdirection() {\n      return this._lastPathXdirection;\n    }\n  }, {\n    key: \"getFirstPathXdirection\",\n    value: function getFirstPathXdirection() {\n      return this._firstPathXdirection;\n    }\n  }, {\n    key: \"setWidth\",\n    value: function setWidth(width) {\n      this.options.width = width;\n      this.fireEvent({\n        width: width\n      }, 'widthChanged');\n    }\n  }, {\n    key: \"setColor\",\n    value: function setColor(color) {\n      this.options.color = color;\n      this.fireEvent({\n        color: color\n      }, 'colorChanged');\n    }\n  }]);\n\n  return CustomLinkModel;\n}(DefaultLinkModel);","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Test/CustomLinkModel.ts"],"names":["DefaultLinkModel","CustomLinkFactory","CustomLinkModel","options","width","type","NAME","lastHoverIndexOfPath","_lastPathXdirection","_firstPathXdirection","addLabel","points","getPoints","i","length","dx","Math","abs","getX","dy","getY","pointModel","index","setFirstAndLastPathsDirection","event","first","last","fireEvent","color"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,gBAAT,QAA0D,uCAA1D;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAIA,WAAaC,eAAb;AAAA;;AAAA;;AAIC,6BAAmD;AAAA;;AAAA,QAAvCC,OAAuC,uEAAJ,EAAI;;AAAA;;AAClD;AACIC,MAAAA,KAAK,EAAC,CADV;AAECC,MAAAA,IAAI,EAAEJ,iBAAiB,CAACK;AAFzB,OAGIH,OAHJ;;AADkD;;AAAA;;AAAA;;AAMlD,UAAKI,oBAAL,GAA4B,CAA5B;AACA,UAAKC,mBAAL,GAA2B,KAA3B;AACA,UAAKC,oBAAL,GAA4B,KAA5B;;AACE,UAAKC,QAAL,CAAc,MAAd;;AATgD;AAUlD;;AAdF;AAAA;AAAA,oDAgBiC;AAC/B,UAAIC,MAAM,GAAG,KAAKC,SAAL,EAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAA3B,EAAmCD,CAAC,IAAIF,MAAM,CAACG,MAAP,GAAgB,CAAxD,EAA2D;AAC1D,YAAIC,EAAE,GAAGC,IAAI,CAACC,GAAL,CAASN,MAAM,CAACE,CAAD,CAAN,CAAUK,IAAV,KAAmBP,MAAM,CAACE,CAAC,GAAG,CAAL,CAAN,CAAcK,IAAd,EAA5B,CAAT;AACA,YAAIC,EAAE,GAAGH,IAAI,CAACC,GAAL,CAASN,MAAM,CAACE,CAAD,CAAN,CAAUO,IAAV,KAAmBT,MAAM,CAACE,CAAC,GAAG,CAAL,CAAN,CAAcO,IAAd,EAA5B,CAAT;;AACA,YAAIP,CAAC,GAAG,CAAJ,KAAU,CAAd,EAAiB;AAChB,eAAKJ,oBAAL,GAA4BM,EAAE,GAAGI,EAAjC;AACA,SAFD,MAEO;AACN,eAAKX,mBAAL,GAA2BO,EAAE,GAAGI,EAAhC;AACA;AACD;AACD,KA3BF,CA6BC;;AA7BD;AAAA;AAAA,6BA8BgCE,UA9BhC,EA8BqE;AAAA,UAAtBC,KAAsB,uEAAN,CAAM;;AACnE;AACA,oFAAeD,UAAf,EAA2BC,KAA3B;;AACA,WAAKC,6BAAL;AACA,aAAOF,UAAP;AACA;AAnCF;AAAA;AAAA,gCAqCaG,KArCb,EAqC4C;AAC1C,uFAAkBA,KAAlB;;AACA,WAAKD,6BAAL;AACA;AAxCF;AAAA;AAAA,0DA0CuCE,KA1CvC,EA0C8CC,IA1C9C,EA0CoD;AAClD,WAAKjB,oBAAL,GAA4BgB,KAA5B;AACA,WAAKjB,mBAAL,GAA2BkB,IAA3B;AACA;AA7CF;AAAA;AAAA,4CA+CkC;AAChC,aAAO,KAAKlB,mBAAZ;AACA;AAjDF;AAAA;AAAA,6CAkDmC;AACjC,aAAO,KAAKC,oBAAZ;AACA;AApDF;AAAA;AAAA,6BAsDUL,KAtDV,EAsDyB;AACvB,WAAKD,OAAL,CAAaC,KAAb,GAAqBA,KAArB;AACA,WAAKuB,SAAL,CAAe;AAAEvB,QAAAA,KAAK,EAALA;AAAF,OAAf,EAA0B,cAA1B;AACA;AAzDF;AAAA;AAAA,6BA2DUwB,KA3DV,EA2DyB;AACvB,WAAKzB,OAAL,CAAayB,KAAb,GAAqBA,KAArB;AACA,WAAKD,SAAL,CAAe;AAAEC,QAAAA,KAAK,EAALA;AAAF,OAAf,EAA0B,cAA1B;AACA;AA9DF;;AAAA;AAAA,EAAqC5B,gBAArC","sourcesContent":["import { DefaultLinkModel, DefaultLinkModelOptions } from '@projectstorm/react-diagrams-defaults';\nimport { CustomLinkFactory } from './CustomLinkFactory';\nimport { PointModel } from '@projectstorm/react-diagrams-core';\nimport { DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport class CustomLinkModel extends DefaultLinkModel {\n\tlastHoverIndexOfPath: number;\n\tprivate _lastPathXdirection: boolean;\n\tprivate _firstPathXdirection: boolean;\n\tconstructor(options: DefaultLinkModelOptions = {}) {\n\t\tsuper({\n      width:1,\n\t\t\ttype: CustomLinkFactory.NAME,\n\t\t\t...options\n\t\t});\n\t\tthis.lastHoverIndexOfPath = 0;\n\t\tthis._lastPathXdirection = false;\n\t\tthis._firstPathXdirection = false;\n    this.addLabel('test')\n\t}\n\n\tsetFirstAndLastPathsDirection() {\n\t\tlet points = this.getPoints();\n\t\tfor (let i = 1; i < points.length; i += points.length - 2) {\n\t\t\tlet dx = Math.abs(points[i].getX() - points[i - 1].getX());\n\t\t\tlet dy = Math.abs(points[i].getY() - points[i - 1].getY());\n\t\t\tif (i - 1 === 0) {\n\t\t\t\tthis._firstPathXdirection = dx > dy;\n\t\t\t} else {\n\t\t\t\tthis._lastPathXdirection = dx > dy;\n\t\t\t}\n\t\t}\n\t}\n\n\t// @ts-ignore\n\taddPoint<P extends PointModel>(pointModel: P, index: number = 1): P {\n\t\t// @ts-ignore\n\t\tsuper.addPoint(pointModel, index);\n\t\tthis.setFirstAndLastPathsDirection();\n\t\treturn pointModel;\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.setFirstAndLastPathsDirection();\n\t}\n\n\tsetManuallyFirstAndLastPathsDirection(first, last) {\n\t\tthis._firstPathXdirection = first;\n\t\tthis._lastPathXdirection = last;\n\t}\n\n\tgetLastPathXdirection(): boolean {\n\t\treturn this._lastPathXdirection;\n\t}\n\tgetFirstPathXdirection(): boolean {\n\t\treturn this._firstPathXdirection;\n\t}\n\n\tsetWidth(width: number) {\n\t\tthis.options.width = width;\n\t\tthis.fireEvent({ width }, 'widthChanged');\n\t}\n\n\tsetColor(color: string) {\n\t\tthis.options.color = color;\n\t\tthis.fireEvent({ color }, 'colorChanged');\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}