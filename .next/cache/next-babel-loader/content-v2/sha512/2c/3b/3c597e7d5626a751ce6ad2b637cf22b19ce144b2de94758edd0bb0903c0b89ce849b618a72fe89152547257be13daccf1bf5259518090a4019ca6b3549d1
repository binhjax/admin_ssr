{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/input-number/style\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\n\nvar _jsxFileName = \"/Users/nguyenthanhbinh/Work/vnshop/admin/src/pages/role/RoleCard.js\",\n    _dec,\n    _class,\n    _temp;\n\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { Form } from '@ant-design/compatible';\nimport '@ant-design/compatible/assets/index.css';\nimport RoleMenu from './RoleMenu';\nimport WithDva from '../../utils/store'; // @connect(state => ({\n//   role: state.role,\n// }))\n\nlet RoleCard = (_dec = Form.create(), _dec(_class = (_temp = class RoleCard extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onOKClick\", () => {\n      const {\n        form,\n        onSubmit\n      } = this.props;\n      form.validateFieldsAndScroll((err, values) => {\n        if (err) {\n          return;\n        }\n\n        const formData = _objectSpread({}, values);\n\n        formData.sequence = parseInt(formData.sequence, 10);\n        formData.status = 1;\n\n        if (!formData.role_menus || formData.role_menus.length === 0) {\n          _message.warning('请选择菜单权限！');\n\n          return;\n        }\n\n        const roleMenus = [];\n        formData.role_menus.forEach(item => {\n          if (item.actions && item.actions.length > 0) {\n            item.actions.forEach(v => {\n              roleMenus.push({\n                menu_id: item.menu_id,\n                action_id: v\n              });\n            });\n          } else {\n            roleMenus.push({\n              menu_id: item.menu_id\n            });\n          }\n        });\n        formData.role_menus = roleMenus;\n        onSubmit(formData);\n      });\n    });\n\n    _defineProperty(this, \"dispatch\", action => {\n      const {\n        dispatch\n      } = this.props;\n      dispatch(action);\n    });\n  }\n\n  render() {\n    const {\n      role: {\n        formTitle,\n        formVisible,\n        formData,\n        submitting\n      },\n      form: {\n        getFieldDecorator\n      },\n      onCancel\n    } = this.props;\n    const formItemLayout = {\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 18\n      }\n    };\n    const formItemLayout2 = {\n      labelCol: {\n        span: 3\n      },\n      wrapperCol: {\n        span: 21\n      }\n    };\n    return __jsx(_Modal, {\n      title: formTitle,\n      width: 800,\n      visible: formVisible,\n      maskClosable: false,\n      confirmLoading: submitting,\n      destroyOnClose: true,\n      onOk: this.onOKClick,\n      onCancel: onCancel,\n      style: {\n        top: 20\n      },\n      bodyStyle: {\n        maxHeight: 'calc( 100vh - 158px )',\n        overflowY: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, __jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, __jsx(_Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, __jsx(_Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"\\u89D2\\u8272\\u540D\\u79F0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }), getFieldDecorator('name', {\n      initialValue: formData.name,\n      rules: [{\n        required: true,\n        message: '请输入角色名称'\n      }]\n    })(__jsx(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u89D2\\u8272\\u540D\\u79F0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 20\n      }\n    })))), __jsx(_Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"\\u6392\\u5E8F\\u503C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }), getFieldDecorator('sequence', {\n      initialValue: formData.sequence ? formData.sequence.toString() : '1000000',\n      rules: [{\n        required: true,\n        message: '请输入排序值'\n      }]\n    })(__jsx(_InputNumber, {\n      min: 1,\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 20\n      }\n    }))))), __jsx(Form.Item, _extends({}, formItemLayout2, {\n      label: \"\\u5907\\u6CE8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }), getFieldDecorator('memo', {\n      initialValue: formData.memo\n    })(__jsx(_Input.TextArea, {\n      rows: 2,\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5907\\u6CE8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 16\n      }\n    }))), __jsx(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, __jsx(_Card, {\n      title: \"\\u9009\\u62E9\\u83DC\\u5355\\u6743\\u9650\",\n      bordered: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, getFieldDecorator('role_menus', {\n      initialValue: formData.role_menus\n    })(__jsx(RoleMenu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 18\n      }\n    }))))));\n  }\n\n}, _temp)) || _class);\nexport default WithDva(state => ({\n  role: state.role\n}))(RoleCard); // export default RoleCard;","map":{"version":3,"sources":["/Users/nguyenthanhbinh/Work/vnshop/admin/src/pages/role/RoleCard.js"],"names":["React","PureComponent","Form","RoleMenu","WithDva","RoleCard","create","form","onSubmit","props","validateFieldsAndScroll","err","values","formData","sequence","parseInt","status","role_menus","length","warning","roleMenus","forEach","item","actions","v","push","menu_id","action_id","action","dispatch","render","role","formTitle","formVisible","submitting","getFieldDecorator","onCancel","formItemLayout","labelCol","span","wrapperCol","formItemLayout2","onOKClick","top","maxHeight","overflowY","initialValue","name","rules","required","message","toString","width","memo","state"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,OAAO,yCAAP;AAGA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB,C,CAGA;AACA;AACA;;IAIMC,Q,WADLH,IAAI,CAACI,MAAL,E,yBAAD,MACMD,QADN,SACuBJ,aADvB,CACqC;AAAA;AAAA;;AAAA,uCACvB,MAAM;AAChB,YAAM;AAAEM,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAqB,KAAKC,KAAhC;AAEAF,MAAAA,IAAI,CAACG,uBAAL,CAA6B,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAC5C,YAAID,GAAJ,EAAS;AACP;AACD;;AACD,cAAME,QAAQ,qBAAQD,MAAR,CAAd;;AACAC,QAAAA,QAAQ,CAACC,QAAT,GAAoBC,QAAQ,CAACF,QAAQ,CAACC,QAAV,EAAoB,EAApB,CAA5B;AACAD,QAAAA,QAAQ,CAACG,MAAT,GAAkB,CAAlB;;AACA,YAAI,CAACH,QAAQ,CAACI,UAAV,IAAwBJ,QAAQ,CAACI,UAAT,CAAoBC,MAApB,KAA+B,CAA3D,EAA8D;AAC5D,mBAAQC,OAAR,CAAgB,UAAhB;;AACA;AACD;;AAED,cAAMC,SAAS,GAAG,EAAlB;AACAP,QAAAA,QAAQ,CAACI,UAAT,CAAoBI,OAApB,CAA4BC,IAAI,IAAI;AAClC,cAAIA,IAAI,CAACC,OAAL,IAAgBD,IAAI,CAACC,OAAL,CAAaL,MAAb,GAAsB,CAA1C,EAA6C;AAC3CI,YAAAA,IAAI,CAACC,OAAL,CAAaF,OAAb,CAAqBG,CAAC,IAAI;AACxBJ,cAAAA,SAAS,CAACK,IAAV,CAAe;AAAEC,gBAAAA,OAAO,EAAEJ,IAAI,CAACI,OAAhB;AAAyBC,gBAAAA,SAAS,EAAEH;AAApC,eAAf;AACD,aAFD;AAGD,WAJD,MAIO;AACLJ,YAAAA,SAAS,CAACK,IAAV,CAAe;AAAEC,cAAAA,OAAO,EAAEJ,IAAI,CAACI;AAAhB,aAAf;AACD;AACF,SARD;AASAb,QAAAA,QAAQ,CAACI,UAAT,GAAsBG,SAAtB;AAEAZ,QAAAA,QAAQ,CAACK,QAAD,CAAR;AACD,OAzBD;AA0BD,KA9BkC;;AAAA,sCAgCxBe,MAAM,IAAI;AACnB,YAAM;AAAEC,QAAAA;AAAF,UAAe,KAAKpB,KAA1B;AACAoB,MAAAA,QAAQ,CAACD,MAAD,CAAR;AACD,KAnCkC;AAAA;;AAqCnCE,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,SAAF;AAAaC,QAAAA,WAAb;AAA0BpB,QAAAA,QAA1B;AAAoCqB,QAAAA;AAApC,OADF;AAEJ3B,MAAAA,IAAI,EAAE;AAAE4B,QAAAA;AAAF,OAFF;AAGJC,MAAAA;AAHI,QAIF,KAAK3B,KAJT;AAMA,UAAM4B,cAAc,GAAG;AACrBC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,IAAI,EAAE;AADE,OADW;AAIrBC,MAAAA,UAAU,EAAE;AACVD,QAAAA,IAAI,EAAE;AADI;AAJS,KAAvB;AASA,UAAME,eAAe,GAAG;AACtBH,MAAAA,QAAQ,EAAE;AACRC,QAAAA,IAAI,EAAE;AADE,OADY;AAItBC,MAAAA,UAAU,EAAE;AACVD,QAAAA,IAAI,EAAE;AADI;AAJU,KAAxB;AASA,WACE;AACE,MAAA,KAAK,EAAEP,SADT;AAEE,MAAA,KAAK,EAAE,GAFT;AAGE,MAAA,OAAO,EAAEC,WAHX;AAIE,MAAA,YAAY,EAAE,KAJhB;AAKE,MAAA,cAAc,EAAEC,UALlB;AAME,MAAA,cAAc,MANhB;AAOE,MAAA,IAAI,EAAE,KAAKQ,SAPb;AAQE,MAAA,QAAQ,EAAEN,QARZ;AASE,MAAA,KAAK,EAAE;AAAEO,QAAAA,GAAG,EAAE;AAAP,OATT;AAUE,MAAA,SAAS,EAAE;AAAEC,QAAAA,SAAS,EAAE,uBAAb;AAAsCC,QAAAA,SAAS,EAAE;AAAjD,OAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,IAAN,eAAeR,cAAf;AAA+B,MAAA,KAAK,EAAC,0BAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGF,iBAAiB,CAAC,MAAD,EAAS;AACzBW,MAAAA,YAAY,EAAEjC,QAAQ,CAACkC,IADE;AAEzBC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AAFkB,KAAT,CAAjB,CAQE;AAAO,MAAA,WAAW,EAAC,4CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADH,CADF,CADF,EAcE;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,IAAN,eAAeb,cAAf;AAA+B,MAAA,KAAK,EAAC,oBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGF,iBAAiB,CAAC,UAAD,EAAa;AAC7BW,MAAAA,YAAY,EAAEjC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACC,QAAT,CAAkBqC,QAAlB,EAApB,GAAmD,SADpC;AAE7BH,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AAFsB,KAAb,CAAjB,CAQE;AAAa,MAAA,GAAG,EAAE,CAAlB;AAAqB,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADH,CADF,CAdF,CADF,EA6BE,MAAC,IAAD,CAAM,IAAN,eAAeX,eAAf;AAAgC,MAAA,KAAK,EAAC,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGN,iBAAiB,CAAC,MAAD,EAAS;AACzBW,MAAAA,YAAY,EAAEjC,QAAQ,CAACwC;AADE,KAAT,CAAjB,CAEE,aAAO,QAAP;AAAgB,MAAA,IAAI,EAAE,CAAtB;AAAyB,MAAA,WAAW,EAAC,gCAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADH,CA7BF,EAkCE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,KAAK,EAAC,sCAAZ;AAAqB,MAAA,QAAQ,EAAE,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGlB,iBAAiB,CAAC,YAAD,EAAe;AAC/BW,MAAAA,YAAY,EAAEjC,QAAQ,CAACI;AADQ,KAAf,CAAjB,CAEE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADH,CADF,CAlCF,CAZF,CADF;AAyDD;;AAvHkC,C;AAyHrC,eAAeb,OAAO,CAACkD,KAAK,KAAK;AAC/BvB,EAAAA,IAAI,EAAEuB,KAAK,CAACvB;AADmB,CAAL,CAAN,CAAP,CAEX1B,QAFW,CAAf,C,CAGA","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { Form } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\nimport { Input, Modal, message, Card, Row, Col, InputNumber } from 'antd';\r\n\r\nimport RoleMenu from './RoleMenu';\r\nimport WithDva from '../../utils/store';\r\n\r\n\r\n// @connect(state => ({\r\n//   role: state.role,\r\n// }))\r\n\r\n\r\n@Form.create()\r\nclass RoleCard extends PureComponent {\r\n  onOKClick = () => {\r\n    const { form, onSubmit } = this.props;\r\n\r\n    form.validateFieldsAndScroll((err, values) => {\r\n      if (err) {\r\n        return;\r\n      }\r\n      const formData = { ...values };\r\n      formData.sequence = parseInt(formData.sequence, 10);\r\n      formData.status = 1;\r\n      if (!formData.role_menus || formData.role_menus.length === 0) {\r\n        message.warning('请选择菜单权限！');\r\n        return;\r\n      }\r\n\r\n      const roleMenus = [];\r\n      formData.role_menus.forEach(item => {\r\n        if (item.actions && item.actions.length > 0) {\r\n          item.actions.forEach(v => {\r\n            roleMenus.push({ menu_id: item.menu_id, action_id: v });\r\n          });\r\n        } else {\r\n          roleMenus.push({ menu_id: item.menu_id });\r\n        }\r\n      });\r\n      formData.role_menus = roleMenus;\r\n\r\n      onSubmit(formData);\r\n    });\r\n  };\r\n\r\n  dispatch = action => {\r\n    const { dispatch } = this.props;\r\n    dispatch(action);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      role: { formTitle, formVisible, formData, submitting },\r\n      form: { getFieldDecorator },\r\n      onCancel,\r\n    } = this.props;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        span: 6,\r\n      },\r\n      wrapperCol: {\r\n        span: 18,\r\n      },\r\n    };\r\n\r\n    const formItemLayout2 = {\r\n      labelCol: {\r\n        span: 3,\r\n      },\r\n      wrapperCol: {\r\n        span: 21,\r\n      },\r\n    };\r\n\r\n    return (\r\n      <Modal\r\n        title={formTitle}\r\n        width={800}\r\n        visible={formVisible}\r\n        maskClosable={false}\r\n        confirmLoading={submitting}\r\n        destroyOnClose\r\n        onOk={this.onOKClick}\r\n        onCancel={onCancel}\r\n        style={{ top: 20 }}\r\n        bodyStyle={{ maxHeight: 'calc( 100vh - 158px )', overflowY: 'auto' }}\r\n      >\r\n        <Form>\r\n          <Row>\r\n            <Col span={12}>\r\n              <Form.Item {...formItemLayout} label=\"角色名称\">\r\n                {getFieldDecorator('name', {\r\n                  initialValue: formData.name,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '请输入角色名称',\r\n                    },\r\n                  ],\r\n                })(<Input placeholder=\"请输入角色名称\" />)}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item {...formItemLayout} label=\"排序值\">\r\n                {getFieldDecorator('sequence', {\r\n                  initialValue: formData.sequence ? formData.sequence.toString() : '1000000',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '请输入排序值',\r\n                    },\r\n                  ],\r\n                })(<InputNumber min={1} style={{ width: '100%' }} />)}\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Form.Item {...formItemLayout2} label=\"备注\">\r\n            {getFieldDecorator('memo', {\r\n              initialValue: formData.memo,\r\n            })(<Input.TextArea rows={2} placeholder=\"请输入备注\" />)}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Card title=\"选择菜单权限\" bordered={false}>\r\n              {getFieldDecorator('role_menus', {\r\n                initialValue: formData.role_menus,\r\n              })(<RoleMenu />)}\r\n            </Card>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\nexport default WithDva(state => ({\r\n  role: state.role,\r\n}))(RoleCard);\r\n// export default RoleCard;\r\n"]},"metadata":{},"sourceType":"module"}