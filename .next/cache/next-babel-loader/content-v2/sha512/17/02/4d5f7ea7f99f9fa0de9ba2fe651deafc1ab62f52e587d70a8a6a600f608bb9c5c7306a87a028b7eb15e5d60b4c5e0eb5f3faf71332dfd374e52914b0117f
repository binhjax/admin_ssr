{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/checkbox/style\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/nguyenthanhbinh/Work/vnshop/admin/src/pages/role/RoleMenu/EditableCell.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\n\nvar EditableCell = /*#__PURE__*/function (_PureComponent) {\n  _inherits(EditableCell, _PureComponent);\n\n  var _super = _createSuper(EditableCell);\n\n  function EditableCell() {\n    var _this;\n\n    _classCallCheck(this, EditableCell);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"findItem\", function () {\n      var _this$props = _this.props,\n          data = _this$props.data,\n          record = _this$props.record;\n\n      for (var i = 0; i < data.length; i += 1) {\n        if (data[i].menu_id === record.id) {\n          return data[i];\n        }\n      }\n\n      return null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (values) {\n      var _this$props2 = _this.props,\n          record = _this$props2.record,\n          dataIndex = _this$props2.dataIndex,\n          handleSave = _this$props2.handleSave;\n      handleSave(record, dataIndex, values);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderAction\", function () {\n      var record = _this.props.record;\n\n      if (!record.actions || record.actions.length === 0) {\n        return null;\n      }\n\n      var item = _this.findItem();\n\n      return __jsx(_Checkbox.Group, {\n        disabled: !item,\n        value: item ? item.actions : [],\n        onChange: _this.handleChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }\n      }, __jsx(_Row, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, record.actions.map(function (v) {\n        return __jsx(_Col, {\n          key: v.id,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }\n        }, __jsx(_Checkbox, {\n          value: v.id,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }\n        }, v.name));\n      })));\n    });\n\n    return _this;\n  }\n\n  _createClass(EditableCell, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          dataIndex = _this$props3.dataIndex,\n          record = _this$props3.record,\n          menuData = _this$props3.menuData,\n          handleSave = _this$props3.handleSave,\n          restProps = _objectWithoutProperties(_this$props3, [\"dataIndex\", \"record\", \"menuData\", \"handleSave\"]);\n\n      return __jsx(\"td\", _extends({}, restProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      }), dataIndex === 'actions' && this.renderAction(), !(dataIndex === 'actions') && restProps.children);\n    }\n  }]);\n\n  return EditableCell;\n}(PureComponent);\n\nexport { EditableCell as default };","map":{"version":3,"sources":["/Users/nguyenthanhbinh/Work/vnshop/admin/src/pages/role/RoleMenu/EditableCell.js"],"names":["React","PureComponent","EditableCell","props","data","record","i","length","menu_id","id","values","dataIndex","handleSave","actions","item","findItem","handleChange","map","v","name","menuData","restProps","renderAction","children"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;IAGqBC,Y;;;;;;;;;;;;;;;;+DACR,YAAM;AAAA,wBACU,MAAKC,KADf;AAAA,UACPC,IADO,eACPA,IADO;AAAA,UACDC,MADC,eACDA,MADC;;AAEf,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,IAAI,CAAtC,EAAyC;AACvC,YAAIF,IAAI,CAACE,CAAD,CAAJ,CAAQE,OAAR,KAAoBH,MAAM,CAACI,EAA/B,EAAmC;AACjC,iBAAOL,IAAI,CAACE,CAAD,CAAX;AACD;AACF;;AACD,aAAO,IAAP;AACD,K;;mEAEc,UAAAI,MAAM,EAAI;AAAA,yBACmB,MAAKP,KADxB;AAAA,UACfE,MADe,gBACfA,MADe;AAAA,UACPM,SADO,gBACPA,SADO;AAAA,UACIC,UADJ,gBACIA,UADJ;AAEvBA,MAAAA,UAAU,CAACP,MAAD,EAASM,SAAT,EAAoBD,MAApB,CAAV;AACD,K;;mEAEc,YAAM;AAAA,UACXL,MADW,GACA,MAAKF,KADL,CACXE,MADW;;AAEnB,UAAI,CAACA,MAAM,CAACQ,OAAR,IAAmBR,MAAM,CAACQ,OAAP,CAAeN,MAAf,KAA0B,CAAjD,EAAoD;AAClD,eAAO,IAAP;AACD;;AAED,UAAMO,IAAI,GAAG,MAAKC,QAAL,EAAb;;AACA,aACE,gBAAU,KAAV;AACE,QAAA,QAAQ,EAAE,CAACD,IADb;AAEE,QAAA,KAAK,EAAEA,IAAI,GAAGA,IAAI,CAACD,OAAR,GAAkB,EAF/B;AAGE,QAAA,QAAQ,EAAE,MAAKG,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGX,MAAM,CAACQ,OAAP,CAAeI,GAAf,CAAmB,UAAAC,CAAC;AAAA,eACnB;AAAK,UAAA,GAAG,EAAEA,CAAC,CAACT,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAU,UAAA,KAAK,EAAES,CAAC,CAACT,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwBS,CAAC,CAACC,IAA1B,CADF,CADmB;AAAA,OAApB,CADH,CALF,CADF;AAeD,K;;;;;;;6BAEQ;AAAA,yBAC2D,KAAKhB,KADhE;AAAA,UACCQ,SADD,gBACCA,SADD;AAAA,UACYN,MADZ,gBACYA,MADZ;AAAA,UACoBe,QADpB,gBACoBA,QADpB;AAAA,UAC8BR,UAD9B,gBAC8BA,UAD9B;AAAA,UAC6CS,SAD7C;;AAEP,aACE,yBAAQA,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGV,SAAS,KAAK,SAAd,IAA2B,KAAKW,YAAL,EAD9B,EAEG,EAAEX,SAAS,KAAK,SAAhB,KAA8BU,SAAS,CAACE,QAF3C,CADF;AAMD;;;;EAhDuCtB,a;;SAArBC,Y","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { Checkbox, Row, Col } from 'antd';\r\n\r\nexport default class EditableCell extends PureComponent {\r\n  findItem = () => {\r\n    const { data, record } = this.props;\r\n    for (let i = 0; i < data.length; i += 1) {\r\n      if (data[i].menu_id === record.id) {\r\n        return data[i];\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  handleChange = values => {\r\n    const { record, dataIndex, handleSave } = this.props;\r\n    handleSave(record, dataIndex, values);\r\n  };\r\n\r\n  renderAction = () => {\r\n    const { record } = this.props;\r\n    if (!record.actions || record.actions.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    const item = this.findItem();\r\n    return (\r\n      <Checkbox.Group\r\n        disabled={!item}\r\n        value={item ? item.actions : []}\r\n        onChange={this.handleChange}\r\n      >\r\n        <Row>\r\n          {record.actions.map(v => (\r\n            <Col key={v.id}>\r\n              <Checkbox value={v.id}>{v.name}</Checkbox>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Checkbox.Group>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { dataIndex, record, menuData, handleSave, ...restProps } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {dataIndex === 'actions' && this.renderAction()}\r\n        {!(dataIndex === 'actions') && restProps.children}\r\n      </td>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}