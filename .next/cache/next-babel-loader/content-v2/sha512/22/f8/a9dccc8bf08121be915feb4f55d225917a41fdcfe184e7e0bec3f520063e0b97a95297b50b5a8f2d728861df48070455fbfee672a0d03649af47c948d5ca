{"ast":null,"code":"import _classCallCheck from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Action, InputType, State } from '@projectstorm/react-canvas-core';\nimport { PortModel } from '@projectstorm/react-diagrams-core';\n\n/**\n * This state is controlling the creation of a link.\n */\nexport var CreateLinkState = /*#__PURE__*/function (_State) {\n  _inherits(CreateLinkState, _State);\n\n  var _super = _createSuper(CreateLinkState);\n\n  function CreateLinkState() {\n    var _this;\n\n    _classCallCheck(this, CreateLinkState);\n\n    _this = _super.call(this, {\n      name: 'create-new-link'\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"sourcePort\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"link\", void 0);\n\n    _this.registerAction(new Action({\n      type: InputType.MOUSE_UP,\n      fire: function fire(actionEvent) {\n        var element = _this.engine.getActionEventBus().getModelForEvent(actionEvent);\n\n        var _actionEvent$event = actionEvent.event,\n            clientX = _actionEvent$event.clientX,\n            clientY = _actionEvent$event.clientY;\n\n        var ox = _this.engine.getModel().getOffsetX();\n\n        var oy = _this.engine.getModel().getOffsetY();\n\n        if (element instanceof PortModel && !_this.sourcePort) {\n          _this.sourcePort = element;\n          /* would be cool if link creating could be done somewhat like\n                            const link = createLink({\n                                sourcePort: this.sourcePort,\n                                points: [{ x: clientX, y: clientY }, { x: clientX, y: clientY }]\n                            })\n                            */\n\n          var link = _this.sourcePort.createLinkModel();\n\n          link.setSourcePort(_this.sourcePort);\n          link.getFirstPoint().setPosition(clientX - ox, clientY - oy);\n          link.getLastPoint().setPosition(clientX - ox + 20, clientY - oy + 20);\n          _this.link = _this.engine.getModel().addLink(link);\n        } else if (element instanceof PortModel && _this.sourcePort && element != _this.sourcePort) {\n          if (_this.sourcePort.canLinkToPort(element)) {\n            _this.link.setTargetPort(element);\n\n            element.reportPosition();\n\n            _this.clearState();\n\n            _this.eject();\n          }\n        } else if (element === _this.link.getLastPoint()) {\n          _this.link.point(clientX - ox, clientY - oy, -1);\n        }\n\n        _this.engine.repaintCanvas();\n      }\n    }));\n\n    _this.registerAction(new Action({\n      type: InputType.MOUSE_MOVE,\n      fire: function fire(actionEvent) {\n        if (!_this.link) return;\n        var event = actionEvent.event;\n\n        _this.link.getLastPoint().setPosition(event.clientX, event.clientY);\n\n        _this.engine.repaintCanvas();\n      }\n    }));\n\n    _this.registerAction(new Action({\n      type: InputType.KEY_UP,\n      fire: function fire(actionEvent) {\n        // on esc press remove any started link and pop back to default state\n        if (actionEvent.event.keyCode === 27) {\n          _this.link.remove();\n\n          _this.clearState();\n\n          _this.eject();\n\n          _this.engine.repaintCanvas();\n        }\n      }\n    }));\n\n    return _this;\n  }\n\n  _createClass(CreateLinkState, [{\n    key: \"clearState\",\n    value: function clearState() {\n      this.link = undefined;\n      this.sourcePort = undefined;\n    }\n  }]);\n\n  return CreateLinkState;\n}(State);","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Test/CreateLinkState.ts"],"names":["Action","InputType","State","PortModel","CreateLinkState","name","registerAction","type","MOUSE_UP","fire","actionEvent","element","engine","getActionEventBus","getModelForEvent","event","clientX","clientY","ox","getModel","getOffsetX","oy","getOffsetY","sourcePort","link","createLinkModel","setSourcePort","getFirstPoint","setPosition","getLastPoint","addLink","canLinkToPort","setTargetPort","reportPosition","clearState","eject","point","repaintCanvas","MOUSE_MOVE","KEY_UP","keyCode","remove","undefined"],"mappings":"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","sourcesContent":["import { Action, ActionEvent, InputType, State } from '@projectstorm/react-canvas-core';\nimport { PortModel, LinkModel, DiagramEngine } from '@projectstorm/react-diagrams-core';\nimport { MouseEvent, KeyboardEvent } from 'react';\n\n/**\n * This state is controlling the creation of a link.\n */\nexport class CreateLinkState extends State<DiagramEngine> {\n\tsourcePort: PortModel;\n\tlink: LinkModel;\n\n\tconstructor() {\n\t\tsuper({ name: 'create-new-link' });\n\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_UP,\n\t\t\t\tfire: (actionEvent: ActionEvent<MouseEvent>) => {\n\t\t\t\t\tconst element = this.engine.getActionEventBus().getModelForEvent(actionEvent);\n\t\t\t\t\tconst {\n\t\t\t\t\t\tevent: { clientX, clientY }\n\t\t\t\t\t} = actionEvent;\n\t\t\t\t\tconst ox = this.engine.getModel().getOffsetX();\n\t\t\t\t\tconst oy = this.engine.getModel().getOffsetY();\n\n\t\t\t\t\tif (element instanceof PortModel && !this.sourcePort) {\n\t\t\t\t\t\tthis.sourcePort = element;\n\n\t\t\t\t\t\t/* would be cool if link creating could be done somewhat like\n                        const link = createLink({\n                            sourcePort: this.sourcePort,\n                            points: [{ x: clientX, y: clientY }, { x: clientX, y: clientY }]\n                        })\n                        */\n\t\t\t\t\t\tconst link = this.sourcePort.createLinkModel();\n\t\t\t\t\t\tlink.setSourcePort(this.sourcePort);\n\t\t\t\t\t\tlink.getFirstPoint().setPosition(clientX - ox, clientY - oy);\n\t\t\t\t\t\tlink.getLastPoint().setPosition(clientX - ox + 20, clientY - oy + 20);\n\n\t\t\t\t\t\tthis.link = this.engine.getModel().addLink(link);\n\t\t\t\t\t} else if (element instanceof PortModel && this.sourcePort && element != this.sourcePort) {\n\t\t\t\t\t\tif (this.sourcePort.canLinkToPort(element)) {\n\t\t\t\t\t\t\tthis.link.setTargetPort(element);\n\t\t\t\t\t\t\telement.reportPosition();\n\t\t\t\t\t\t\tthis.clearState();\n\t\t\t\t\t\t\tthis.eject();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (element === this.link.getLastPoint()) {\n\t\t\t\t\t\tthis.link.point(clientX - ox, clientY - oy, -1);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.engine.repaintCanvas();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_MOVE,\n\t\t\t\tfire: (actionEvent: ActionEvent<React.MouseEvent>) => {\n\t\t\t\t\tif (!this.link) return;\n\t\t\t\t\tconst { event } = actionEvent;\n\t\t\t\t\tthis.link.getLastPoint().setPosition(event.clientX, event.clientY);\n\t\t\t\t\tthis.engine.repaintCanvas();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.KEY_UP,\n\t\t\t\tfire: (actionEvent: ActionEvent<KeyboardEvent>) => {\n\t\t\t\t\t// on esc press remove any started link and pop back to default state\n\t\t\t\t\tif (actionEvent.event.keyCode === 27) {\n\t\t\t\t\t\tthis.link.remove();\n\t\t\t\t\t\tthis.clearState();\n\t\t\t\t\t\tthis.eject();\n\t\t\t\t\t\tthis.engine.repaintCanvas();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tclearState() {\n\t\tthis.link = undefined;\n\t\tthis.sourcePort = undefined;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}