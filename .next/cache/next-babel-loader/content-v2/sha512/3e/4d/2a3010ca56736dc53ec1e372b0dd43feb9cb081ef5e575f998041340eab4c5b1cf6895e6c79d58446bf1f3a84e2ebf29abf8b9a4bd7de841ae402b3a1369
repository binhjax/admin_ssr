{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nvar _jsxFileName = \"/Users/nguyenthanhbinh/Work/vnshop/admin/src/pages/role/RoleMenu/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport * as menuService from '@/services/menu';\nimport EditableCell from './EditableCell';\nexport default class RoleMenu extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"fillData\", data => {\n      const newData = [...data];\n\n      for (let i = 0; i < newData.length; i += 1) {\n        const {\n          children\n        } = newData[i];\n\n        const item = _objectSpread(_objectSpread({}, newData[i]), {}, {\n          hasChild: children && children.length > 0\n        });\n\n        if (item.hasChild) {\n          item.children = this.fillData(children);\n        }\n\n        newData[i] = item;\n      }\n\n      return newData;\n    });\n\n    _defineProperty(this, \"handleSave\", (record, dataIndex, values) => {\n      const {\n        dataSource\n      } = this.state;\n      const data = [...dataSource];\n      const index = data.findIndex(item => item.menu_id === record.id);\n      let item = data[index];\n\n      if (!item) {\n        item = {\n          menu_id: record.id,\n          dataIndex: values\n        };\n      } else {\n        item[dataIndex] = values;\n      }\n\n      data.splice(index, 1, _objectSpread({}, item));\n      this.setState({\n        dataSource: data\n      }, () => {\n        this.triggerChange(data);\n      });\n    });\n\n    _defineProperty(this, \"triggerChange\", data => {\n      const {\n        onChange\n      } = this.props;\n\n      if (onChange) {\n        onChange(data);\n      }\n    });\n\n    _defineProperty(this, \"expandAllChild\", data => {\n      let child = [];\n\n      for (let i = 0; i < data.length; i += 1) {\n        child.push(data[i]);\n\n        if (data[i].children) {\n          child = [...child, ...this.expandAllChild(data[i].children)];\n        }\n      }\n\n      return child;\n    });\n\n    _defineProperty(this, \"checkAndAdd\", (data, addData) => {\n      const list = [...data];\n\n      for (let i = 0; i < addData.length; i += 1) {\n        let exists = false;\n\n        for (let j = 0; j < list.length; j += 1) {\n          if (list[j].menu_id === addData[i].id) {\n            exists = true;\n            break;\n          }\n        }\n\n        if (!exists) {\n          const item = {\n            menu_id: addData[i].id,\n            actions: addData[i].actions ? addData[i].actions.map(v => v.id) : []\n          };\n          list.push(item);\n        }\n      }\n\n      return list;\n    });\n\n    _defineProperty(this, \"cancelSelected\", (data, selectedRows) => {\n      const list = [];\n\n      for (let i = 0; i < data.length; i += 1) {\n        let exists = false;\n\n        for (let j = 0; j < selectedRows.length; j += 1) {\n          if (data[i].menu_id === selectedRows[j].id) {\n            exists = true;\n            break;\n          }\n        }\n\n        if (!exists) {\n          list.push(data[i]);\n        }\n      }\n\n      return list;\n    });\n\n    _defineProperty(this, \"handleSelectedRow\", (record, selected) => {\n      let selectedRows = [record];\n\n      if (record.children) {\n        selectedRows = [...selectedRows, ...this.expandAllChild(record.children)];\n      }\n\n      const {\n        dataSource\n      } = this.state;\n      let list = [];\n\n      if (selected) {\n        list = this.checkAndAdd(dataSource, selectedRows);\n      } else {\n        list = this.cancelSelected(dataSource, selectedRows);\n      }\n\n      this.setState({\n        dataSource: list\n      }, () => {\n        this.triggerChange(list);\n      });\n    });\n\n    _defineProperty(this, \"handleSelectAll\", (selected, selectRows) => {\n      let list = [];\n\n      if (selected) {\n        list = selectRows.map(vv => {\n          const item = {\n            menu_id: vv.id,\n            actions: vv.actions ? vv.actions.map(v => v.id) : []\n          };\n          return item;\n        });\n      }\n\n      this.setState({\n        dataSource: list\n      }, () => {\n        this.triggerChange(list);\n      });\n    });\n\n    this.columns = [{\n      title: '菜单名称',\n      dataIndex: 'name',\n      width: '35%'\n    }, {\n      title: '动作权限',\n      dataIndex: 'actions',\n      editable: true\n    }];\n    this.state = {\n      menuData: [],\n      dataSource: props.value || []\n    };\n  }\n\n  componentDidMount() {\n    menuService.queryTree().then(data => {\n      const list = data.list || [];\n      this.setState({\n        menuData: this.fillData(list)\n      });\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps, state) {\n    if ('value' in nextProps) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        dataSource: nextProps.value || []\n      });\n    }\n\n    return state;\n  }\n\n  render() {\n    const {\n      dataSource,\n      menuData\n    } = this.state;\n    const components = {\n      body: {\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return _objectSpread(_objectSpread({}, col), {}, {\n        onCell: record => ({\n          record,\n          data: dataSource,\n          dataIndex: col.dataIndex,\n          handleSave: this.handleSave\n        })\n      });\n    });\n    return menuData.length > 0 && __jsx(_Table, {\n      bordered: true,\n      defaultExpandAllRows: true,\n      rowSelection: {\n        selectedRowKeys: dataSource.map(v => v.menu_id),\n        onSelect: this.handleSelectedRow,\n        onSelectAll: this.handleSelectAll\n      },\n      rowKey: record => record.id,\n      components: components,\n      dataSource: menuData,\n      columns: columns,\n      pagination: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/nguyenthanhbinh/Work/vnshop/admin/src/pages/role/RoleMenu/index.js"],"names":["React","PureComponent","menuService","EditableCell","RoleMenu","constructor","props","data","newData","i","length","children","item","hasChild","fillData","record","dataIndex","values","dataSource","state","index","findIndex","menu_id","id","splice","setState","triggerChange","onChange","child","push","expandAllChild","addData","list","exists","j","actions","map","v","selectedRows","selected","checkAndAdd","cancelSelected","selectRows","vv","columns","title","width","editable","menuData","value","componentDidMount","queryTree","then","getDerivedStateFromProps","nextProps","render","components","body","cell","col","onCell","handleSave","selectedRowKeys","onSelect","handleSelectedRow","onSelectAll","handleSelectAll"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { Table } from 'antd';\r\nimport * as menuService from '@/services/menu';\r\nimport EditableCell from './EditableCell';\r\n\r\nexport default class RoleMenu extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.columns = [\r\n      {\r\n        title: '菜单名称',\r\n        dataIndex: 'name',\r\n        width: '35%',\r\n      },\r\n      {\r\n        title: '动作权限',\r\n        dataIndex: 'actions',\r\n        editable: true,\r\n      },\r\n    ];\r\n\r\n    this.state = {\r\n      menuData: [],\r\n      dataSource: props.value || [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    menuService.queryTree().then(data => {\r\n      const list = data.list || [];\r\n      this.setState({ menuData: this.fillData(list) });\r\n    });\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, state) {\r\n    if ('value' in nextProps) {\r\n      return {\r\n        ...state,\r\n        dataSource: nextProps.value || [],\r\n      };\r\n    }\r\n    return state;\r\n  }\r\n\r\n  fillData = data => {\r\n    const newData = [...data];\r\n    for (let i = 0; i < newData.length; i += 1) {\r\n      const { children } = newData[i];\r\n      const item = { ...newData[i], hasChild: children && children.length > 0 };\r\n      if (item.hasChild) {\r\n        item.children = this.fillData(children);\r\n      }\r\n      newData[i] = item;\r\n    }\r\n    return newData;\r\n  };\r\n\r\n  handleSave = (record, dataIndex, values) => {\r\n    const { dataSource } = this.state;\r\n    const data = [...dataSource];\r\n    const index = data.findIndex(item => item.menu_id === record.id);\r\n    let item = data[index];\r\n    if (!item) {\r\n      item = {\r\n        menu_id: record.id,\r\n        dataIndex: values,\r\n      };\r\n    } else {\r\n      item[dataIndex] = values;\r\n    }\r\n    data.splice(index, 1, {\r\n      ...item,\r\n    });\r\n    this.setState({ dataSource: data }, () => {\r\n      this.triggerChange(data);\r\n    });\r\n  };\r\n\r\n  triggerChange = data => {\r\n    const { onChange } = this.props;\r\n    if (onChange) {\r\n      onChange(data);\r\n    }\r\n  };\r\n\r\n  expandAllChild = data => {\r\n    let child = [];\r\n    for (let i = 0; i < data.length; i += 1) {\r\n      child.push(data[i]);\r\n      if (data[i].children) {\r\n        child = [...child, ...this.expandAllChild(data[i].children)];\r\n      }\r\n    }\r\n    return child;\r\n  };\r\n\r\n  checkAndAdd = (data, addData) => {\r\n    const list = [...data];\r\n\r\n    for (let i = 0; i < addData.length; i += 1) {\r\n      let exists = false;\r\n      for (let j = 0; j < list.length; j += 1) {\r\n        if (list[j].menu_id === addData[i].id) {\r\n          exists = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!exists) {\r\n        const item = {\r\n          menu_id: addData[i].id,\r\n          actions: addData[i].actions ? addData[i].actions.map(v => v.id) : [],\r\n        };\r\n        list.push(item);\r\n      }\r\n    }\r\n\r\n    return list;\r\n  };\r\n\r\n  cancelSelected = (data, selectedRows) => {\r\n    const list = [];\r\n    for (let i = 0; i < data.length; i += 1) {\r\n      let exists = false;\r\n      for (let j = 0; j < selectedRows.length; j += 1) {\r\n        if (data[i].menu_id === selectedRows[j].id) {\r\n          exists = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!exists) {\r\n        list.push(data[i]);\r\n      }\r\n    }\r\n    return list;\r\n  };\r\n\r\n  handleSelectedRow = (record, selected) => {\r\n    let selectedRows = [record];\r\n    if (record.children) {\r\n      selectedRows = [...selectedRows, ...this.expandAllChild(record.children)];\r\n    }\r\n\r\n    const { dataSource } = this.state;\r\n    let list = [];\r\n    if (selected) {\r\n      list = this.checkAndAdd(dataSource, selectedRows);\r\n    } else {\r\n      list = this.cancelSelected(dataSource, selectedRows);\r\n    }\r\n\r\n    this.setState({ dataSource: list }, () => {\r\n      this.triggerChange(list);\r\n    });\r\n  };\r\n\r\n  handleSelectAll = (selected, selectRows) => {\r\n    let list = [];\r\n    if (selected) {\r\n      list = selectRows.map(vv => {\r\n        const item = {\r\n          menu_id: vv.id,\r\n          actions: vv.actions ? vv.actions.map(v => v.id) : [],\r\n        };\r\n        return item;\r\n      });\r\n    }\r\n    this.setState({ dataSource: list }, () => {\r\n      this.triggerChange(list);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { dataSource, menuData } = this.state;\r\n    const components = {\r\n      body: {\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          data: dataSource,\r\n          dataIndex: col.dataIndex,\r\n          handleSave: this.handleSave,\r\n        }),\r\n      };\r\n    });\r\n\r\n    return (\r\n      menuData.length > 0 && (\r\n        <Table\r\n          bordered\r\n          defaultExpandAllRows\r\n          rowSelection={{\r\n            selectedRowKeys: dataSource.map(v => v.menu_id),\r\n            onSelect: this.handleSelectedRow,\r\n            onSelectAll: this.handleSelectAll,\r\n          }}\r\n          rowKey={record => record.id}\r\n          components={components}\r\n          dataSource={menuData}\r\n          columns={columns}\r\n          pagination={false}\r\n        />\r\n      )\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}