{"ast":null,"code":"import \"antd/lib/breadcrumb/style\";\nimport _Breadcrumb from \"antd/lib/breadcrumb\";\nvar _jsxFileName = \"/Users/nguyenthanhbinh/Work/vnshop/admin/src/components/PageHeader/breadcrumb.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent, createElement } from 'react';\nimport pathToRegexp from 'path-to-regexp';\nimport styles from './index.less';\nimport { urlToList } from '../_utils/pathTools';\nexport const getBreadcrumb = (breadcrumbNameMap, url) => {\n  let breadcrumb = breadcrumbNameMap[url];\n\n  if (!breadcrumb) {\n    Object.keys(breadcrumbNameMap).forEach(item => {\n      if (pathToRegexp(item).test(url)) {\n        breadcrumb = breadcrumbNameMap[item];\n      }\n    });\n  }\n\n  return breadcrumb || {};\n};\nexport default class BreadcrumbView extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      breadcrumb: null\n    });\n\n    _defineProperty(this, \"getBreadcrumbDom\", () => {\n      const breadcrumb = this.conversionBreadcrumbList();\n      this.setState({\n        breadcrumb\n      });\n    });\n\n    _defineProperty(this, \"getBreadcrumbProps\", () => {\n      const {\n        routes,\n        params,\n        location,\n        breadcrumbNameMap\n      } = this.props;\n      return {\n        routes,\n        params,\n        routerLocation: location,\n        breadcrumbNameMap\n      };\n    });\n\n    _defineProperty(this, \"conversionFromProps\", () => {\n      const {\n        breadcrumbList,\n        breadcrumbSeparator,\n        itemRender,\n        linkElement = 'a'\n      } = this.props;\n      return __jsx(_Breadcrumb, {\n        className: styles.breadcrumb,\n        separator: breadcrumbSeparator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, breadcrumbList.map(item => {\n        const title = itemRender ? itemRender(item) : item.title;\n        return __jsx(_Breadcrumb.Item, {\n          key: item.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }\n        }, item.href ? /*#__PURE__*/createElement(linkElement, {\n          [linkElement === 'a' ? 'href' : 'to']: item.href\n        }, title) : title);\n      }));\n    });\n\n    _defineProperty(this, \"conversionFromLocation\", (routerLocation, breadcrumbNameMap) => {\n      const {\n        breadcrumbSeparator,\n        home,\n        itemRender,\n        linkElement = 'a'\n      } = this.props; // Convert the url to an array\n\n      const pathSnippets = urlToList(routerLocation.pathname); // Loop data mosaic routing\n\n      const extraBreadcrumbItems = pathSnippets.map((url, index) => {\n        const currentBreadcrumb = getBreadcrumb(breadcrumbNameMap, url);\n\n        if (currentBreadcrumb.inherited) {\n          return null;\n        }\n\n        const isLinkable = index !== pathSnippets.length - 1 && currentBreadcrumb.component;\n        const name = itemRender ? itemRender(currentBreadcrumb) : currentBreadcrumb.name;\n        return currentBreadcrumb.name && !currentBreadcrumb.hideInBreadcrumb ? __jsx(_Breadcrumb.Item, {\n          key: url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/createElement(isLinkable ? linkElement : 'span', {\n          [linkElement === 'a' ? 'href' : 'to']: url\n        }, name)) : null;\n      }); // Add home breadcrumbs to your head\n\n      extraBreadcrumbItems.unshift(__jsx(_Breadcrumb.Item, {\n        key: \"home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/createElement(linkElement, {\n        [linkElement === 'a' ? 'href' : 'to']: '/'\n      }, home || 'Home')));\n      return __jsx(_Breadcrumb, {\n        className: styles.breadcrumb,\n        separator: breadcrumbSeparator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }\n      }, extraBreadcrumbItems);\n    });\n\n    _defineProperty(this, \"conversionBreadcrumbList\", () => {\n      const {\n        breadcrumbList,\n        breadcrumbSeparator\n      } = this.props;\n      const {\n        routes,\n        params,\n        routerLocation,\n        breadcrumbNameMap\n      } = this.getBreadcrumbProps();\n\n      if (breadcrumbList && breadcrumbList.length) {\n        return this.conversionFromProps();\n      } // 如果传入 routes 和 params 属性\n      // If pass routes and params attributes\n\n\n      if (routes && params) {\n        return __jsx(_Breadcrumb, {\n          className: styles.breadcrumb,\n          routes: routes.filter(route => route.breadcrumbName),\n          params: params,\n          itemRender: this.itemRender,\n          separator: breadcrumbSeparator,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 9\n          }\n        });\n      } // 根据 location 生成 面包屑\n      // Generate breadcrumbs based on location\n\n\n      if (routerLocation && routerLocation.pathname) {\n        return this.conversionFromLocation(routerLocation, breadcrumbNameMap);\n      }\n\n      return null;\n    });\n\n    _defineProperty(this, \"itemRender\", (route, params, routes, paths) => {\n      const {\n        linkElement = 'a'\n      } = this.props;\n      const last = routes.indexOf(route) === routes.length - 1;\n      return last || !route.component ? __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 7\n        }\n      }, route.breadcrumbName) : /*#__PURE__*/createElement(linkElement, {\n        href: paths.join('/') || '/',\n        to: paths.join('/') || '/'\n      }, route.breadcrumbName);\n    });\n  }\n\n  componentDidMount() {\n    this.getBreadcrumbDom();\n  }\n\n  componentDidUpdate(preProps) {\n    const {\n      location\n    } = this.props;\n\n    if (!location || !preProps.location) {\n      return;\n    }\n\n    const prePathname = preProps.location.pathname;\n\n    if (prePathname !== location.pathname) {\n      this.getBreadcrumbDom();\n    }\n  }\n\n  render() {\n    const {\n      breadcrumb\n    } = this.state;\n    return breadcrumb;\n  }\n\n}","map":{"version":3,"sources":["/Users/nguyenthanhbinh/Work/vnshop/admin/src/components/PageHeader/breadcrumb.js"],"names":["React","PureComponent","createElement","pathToRegexp","styles","urlToList","getBreadcrumb","breadcrumbNameMap","url","breadcrumb","Object","keys","forEach","item","test","BreadcrumbView","conversionBreadcrumbList","setState","routes","params","location","props","routerLocation","breadcrumbList","breadcrumbSeparator","itemRender","linkElement","map","title","href","home","pathSnippets","pathname","extraBreadcrumbItems","index","currentBreadcrumb","inherited","isLinkable","length","component","name","hideInBreadcrumb","unshift","getBreadcrumbProps","conversionFromProps","filter","route","breadcrumbName","conversionFromLocation","paths","last","indexOf","join","to","componentDidMount","getBreadcrumbDom","componentDidUpdate","preProps","prePathname","render","state"],"mappings":"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","sourcesContent":["import React, { PureComponent, createElement } from 'react';\r\nimport pathToRegexp from 'path-to-regexp';\r\nimport { Breadcrumb } from 'antd';\r\nimport styles from './index.less';\r\nimport { urlToList } from '../_utils/pathTools';\r\n\r\nexport const getBreadcrumb = (breadcrumbNameMap, url) => {\r\n  let breadcrumb = breadcrumbNameMap[url];\r\n  if (!breadcrumb) {\r\n    Object.keys(breadcrumbNameMap).forEach(item => {\r\n      if (pathToRegexp(item).test(url)) {\r\n        breadcrumb = breadcrumbNameMap[item];\r\n      }\r\n    });\r\n  }\r\n  return breadcrumb || {};\r\n};\r\n\r\nexport default class BreadcrumbView extends PureComponent {\r\n  state = {\r\n    breadcrumb: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getBreadcrumbDom();\r\n  }\r\n\r\n  componentDidUpdate(preProps) {\r\n    const { location } = this.props;\r\n    if (!location || !preProps.location) {\r\n      return;\r\n    }\r\n    const prePathname = preProps.location.pathname;\r\n    if (prePathname !== location.pathname) {\r\n      this.getBreadcrumbDom();\r\n    }\r\n  }\r\n\r\n  getBreadcrumbDom = () => {\r\n    const breadcrumb = this.conversionBreadcrumbList();\r\n    this.setState({\r\n      breadcrumb,\r\n    });\r\n  };\r\n\r\n  getBreadcrumbProps = () => {\r\n    const { routes, params, location, breadcrumbNameMap } = this.props;\r\n    return {\r\n      routes,\r\n      params,\r\n      routerLocation: location,\r\n      breadcrumbNameMap,\r\n    };\r\n  };\r\n\r\n  // Generated according to props\r\n  conversionFromProps = () => {\r\n    const { breadcrumbList, breadcrumbSeparator, itemRender, linkElement = 'a' } = this.props;\r\n    return (\r\n      <Breadcrumb className={styles.breadcrumb} separator={breadcrumbSeparator}>\r\n        {breadcrumbList.map(item => {\r\n          const title = itemRender ? itemRender(item) : item.title;\r\n          return (\r\n            <Breadcrumb.Item key={item.title}>\r\n              {item.href\r\n                ? createElement(\r\n                    linkElement,\r\n                    {\r\n                      [linkElement === 'a' ? 'href' : 'to']: item.href,\r\n                    },\r\n                    title\r\n                  )\r\n                : title}\r\n            </Breadcrumb.Item>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    );\r\n  };\r\n\r\n  conversionFromLocation = (routerLocation, breadcrumbNameMap) => {\r\n    const { breadcrumbSeparator, home, itemRender, linkElement = 'a' } = this.props;\r\n    // Convert the url to an array\r\n    const pathSnippets = urlToList(routerLocation.pathname);\r\n    // Loop data mosaic routing\r\n    const extraBreadcrumbItems = pathSnippets.map((url, index) => {\r\n      const currentBreadcrumb = getBreadcrumb(breadcrumbNameMap, url);\r\n      if (currentBreadcrumb.inherited) {\r\n        return null;\r\n      }\r\n      const isLinkable = index !== pathSnippets.length - 1 && currentBreadcrumb.component;\r\n      const name = itemRender ? itemRender(currentBreadcrumb) : currentBreadcrumb.name;\r\n      return currentBreadcrumb.name && !currentBreadcrumb.hideInBreadcrumb ? (\r\n        <Breadcrumb.Item key={url}>\r\n          {createElement(\r\n            isLinkable ? linkElement : 'span',\r\n            { [linkElement === 'a' ? 'href' : 'to']: url },\r\n            name\r\n          )}\r\n        </Breadcrumb.Item>\r\n      ) : null;\r\n    });\r\n    // Add home breadcrumbs to your head\r\n    extraBreadcrumbItems.unshift(\r\n      <Breadcrumb.Item key=\"home\">\r\n        {createElement(\r\n          linkElement,\r\n          {\r\n            [linkElement === 'a' ? 'href' : 'to']: '/',\r\n          },\r\n          home || 'Home'\r\n        )}\r\n      </Breadcrumb.Item>\r\n    );\r\n    return (\r\n      <Breadcrumb className={styles.breadcrumb} separator={breadcrumbSeparator}>\r\n        {extraBreadcrumbItems}\r\n      </Breadcrumb>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * 将参数转化为面包屑\r\n   * Convert parameters into breadcrumbs\r\n   */\r\n  conversionBreadcrumbList = () => {\r\n    const { breadcrumbList, breadcrumbSeparator } = this.props;\r\n    const { routes, params, routerLocation, breadcrumbNameMap } = this.getBreadcrumbProps();\r\n    if (breadcrumbList && breadcrumbList.length) {\r\n      return this.conversionFromProps();\r\n    }\r\n    // 如果传入 routes 和 params 属性\r\n    // If pass routes and params attributes\r\n    if (routes && params) {\r\n      return (\r\n        <Breadcrumb\r\n          className={styles.breadcrumb}\r\n          routes={routes.filter(route => route.breadcrumbName)}\r\n          params={params}\r\n          itemRender={this.itemRender}\r\n          separator={breadcrumbSeparator}\r\n        />\r\n      );\r\n    }\r\n    // 根据 location 生成 面包屑\r\n    // Generate breadcrumbs based on location\r\n    if (routerLocation && routerLocation.pathname) {\r\n      return this.conversionFromLocation(routerLocation, breadcrumbNameMap);\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // 渲染Breadcrumb 子节点\r\n  // Render the Breadcrumb child node\r\n  itemRender = (route, params, routes, paths) => {\r\n    const { linkElement = 'a' } = this.props;\r\n    const last = routes.indexOf(route) === routes.length - 1;\r\n    return last || !route.component ? (\r\n      <span>{route.breadcrumbName}</span>\r\n    ) : (\r\n      createElement(\r\n        linkElement,\r\n        {\r\n          href: paths.join('/') || '/',\r\n          to: paths.join('/') || '/',\r\n        },\r\n        route.breadcrumbName\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { breadcrumb } = this.state;\r\n    return breadcrumb;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}