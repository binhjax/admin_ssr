{"ast":null,"code":"import \"antd/lib/spin/style\";\nimport _Spin from \"antd/lib/spin\";\nimport \"antd/lib/dropdown/style\";\nimport _Dropdown from \"antd/lib/dropdown\";\nimport \"antd/lib/avatar/style\";\nimport _Avatar from \"antd/lib/avatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport \"antd/lib/menu/style\";\nimport _Menu from \"antd/lib/menu\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\n\nvar _jsxFileName = \"/home/tuanquang/admin_ssr/src/layouts/AdminLayout.js\",\n    _dec,\n    _class,\n    _descriptor,\n    _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nimport React from 'react'; // import { Icon as LegacyIcon } from '@ant-design/compatible';\n\nimport { LockOutlined, LogoutOutlined, UserOutlined, MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\nimport DocumentTitle from 'react-document-title'; // import { connect } from 'dva';\n\nimport WithDva from '../utils/store';\nimport { withRouter } from 'next/router'; // import { useRouter } from 'next/router'\n// eslint-disable-next-line import/no-extraneous-dependencies\n\nimport Link from 'next/link';\nimport { ContainerQuery } from 'react-container-query';\nimport classNames from 'classnames';\nimport Debounce from 'lodash-decorators/debounce';\nimport GlobalFooter from '@/components/GlobalFooter';\nimport CopyRight from '@/components/CopyRight';\nimport UpdatePasswordDialog from '@/components/UpdatePasswordDialog';\nimport context from '@/utils/context';\nimport './AdminLayout.less';\nimport logo from '../assets/logo.svg';\nimport dynamic from 'next/dynamic';\nconst Editor = dynamic(() => import('../components/Editor'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../components/Editor')],\n    modules: ['../components/Editor']\n  }\n});\nconst {\n  Header,\n  Sider,\n  Content\n} = _Layout;\nconst {\n  SubMenu\n} = _Menu;\nconst query = {\n  'screen-xs': {\n    maxWidth: 575\n  },\n  'screen-sm': {\n    minWidth: 576,\n    maxWidth: 767\n  },\n  'screen-md': {\n    minWidth: 768,\n    maxWidth: 991\n  },\n  'screen-lg': {\n    minWidth: 992,\n    maxWidth: 1199\n  },\n  'screen-xl': {\n    minWidth: 1200\n  }\n};\nlet AdminLayout = (_dec = Debounce(600), (_class = (_temp = class AdminLayout extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      updatePwdVisible: false\n    });\n\n    _defineProperty(this, \"dispatch\", action => {\n      const {\n        dispatch\n      } = this.props;\n      dispatch(action);\n    });\n\n    _defineProperty(this, \"onCollapse\", () => {\n      const {\n        collapsed\n      } = this.props;\n      this.dispatch({\n        type: 'global/changeLayoutCollapsed',\n        payload: !collapsed\n      });\n    });\n\n    _defineProperty(this, \"onMenuClick\", ({\n      key\n    }) => {\n      if (key === 'logout') {\n        this.dispatch({\n          type: 'login/logout'\n        });\n      } else if (key === 'updatepwd') {\n        this.setState({\n          updatePwdVisible: true\n        });\n      }\n    });\n\n    _defineProperty(this, \"onMenuOpenChange\", openKeys => {\n      const {\n        menuMap\n      } = this.props;\n\n      if (openKeys.length > 1) {\n        const lastKey = openKeys[openKeys.length - 1];\n        const lastItem = menuMap[lastKey];\n\n        if (!lastItem) {\n          this.dispatch({\n            type: 'global/changeOpenKeys',\n            payload: []\n          });\n          return;\n        }\n\n        let isParent = false;\n\n        for (let i = 0; i < openKeys.length - 1; i += 1) {\n          const item = menuMap[openKeys[i]] || {};\n          let path = item.id;\n\n          if (item.parent_path !== '') {\n            path = `${item.parent_path}/${path}`;\n          }\n\n          if (lastItem.parent_path === path) {\n            isParent = true;\n            break;\n          }\n        }\n\n        if (!isParent) {\n          this.dispatch({\n            type: 'global/changeOpenKeys',\n            payload: [lastKey]\n          });\n          return;\n        }\n      }\n\n      this.dispatch({\n        type: 'global/changeOpenKeys',\n        payload: [...openKeys]\n      });\n    });\n\n    _defineProperty(this, \"onToggleClick\", () => {\n      const {\n        collapsed\n      } = this.props;\n      this.dispatch({\n        type: 'global/changeLayoutCollapsed',\n        payload: !collapsed\n      });\n      this.onTriggerResizeEvent();\n    });\n\n    _initializerDefineProperty(this, \"onTriggerResizeEvent\", _descriptor, this);\n\n    _defineProperty(this, \"handleUpdatePwdCancel\", () => {\n      this.setState({\n        updatePwdVisible: false\n      });\n    });\n  }\n\n  static async getInitialProps(props) {\n    // first time run in server side\n    // other times run in client side ( client side init with default props\n    // console.log('get init props', props);\n    const {\n      pathname,\n      query,\n      isServer,\n      store\n    } = props; // dispatch effects to fetch data here\n\n    return {\n      // dont use store as property name, it will confilct with initial store\n      pathname,\n      query,\n      isServer,\n      dvaStore: store\n    };\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount: ', this.props);\n    const {\n      router: {\n        pathname\n      }\n    } = this.props;\n    this.dispatch({\n      type: 'global/fetchUser'\n    });\n    this.dispatch({\n      type: 'global/fetchMenuTree',\n      pathname\n    });\n  }\n\n  renderNavMenuItems(menusData) {\n    if (!menusData) {\n      return [];\n    }\n\n    return menusData.map(item => {\n      if (!item.name || item.show_status !== 1) {\n        return null;\n      }\n\n      if (item.children && item.children.some(child => child.name && child.show_status === 1)) {\n        return /*#__PURE__*/_jsxDEV(SubMenu, {\n          title: item.icon ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this) : item.name,\n          children: this.renderNavMenuItems(item.children)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this);\n      }\n\n      const {\n        router\n      } = item; // const icon = item.icon && <LegacyIcon type={item.icon} />;\n      // console.log(\"renderNavMenuItems: \", this.props);\n\n      const {\n        router: {\n          pathname\n        }\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(_Menu.Item, {\n        children: router.startsWith('http') ? /*#__PURE__*/_jsxDEV(\"a\", {\n          href: router,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: [icon, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Link, {\n          href: router,\n          replace: router === pathname,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  renderPageTitle() {\n    const {\n      router: {\n        pathname\n      },\n      menuPaths,\n      title\n    } = this.props;\n    console.log('renderPageTitle: pathname', pathname);\n    let ptitle = title;\n    const item = menuPaths[pathname];\n\n    if (item) {\n      ptitle = `${item.name} - ${title}`;\n    }\n\n    return ptitle;\n  }\n\n  render() {\n    const {\n      children,\n      user,\n      collapsed,\n      menus,\n      copyRight,\n      openKeys,\n      title,\n      selectedKeys,\n      global\n    } = this.props;\n    const {\n      updatePwdVisible\n    } = this.state;\n\n    const menu = /*#__PURE__*/_jsxDEV(_Menu, {\n      className: \"menu\",\n      selectedKeys: [],\n      onClick: this.onMenuClick,\n      children: [/*#__PURE__*/_jsxDEV(_Menu.Item, {\n        children: [/*#__PURE__*/_jsxDEV(LockOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), \"Change Password\"]\n      }, \"updatepwd\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Menu.Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Menu.Item, {\n        children: [/*#__PURE__*/_jsxDEV(LogoutOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), \"Sign Out\"]\n      }, \"logout\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this); // Don't show popup menu when it is been collapsed\n\n\n    const menuProps = collapsed ? {} : {\n      openKeys\n    };\n    const siderWidth = 400;\n\n    const layout = /*#__PURE__*/_jsxDEV(_Layout, {\n      children: [/*#__PURE__*/_jsxDEV(Sider, {\n        trigger: null,\n        collapsible: true,\n        collapsed: collapsed,\n        breakpoint: \"lg\",\n        onCollapse: this.onCollapse,\n        width: siderWidth,\n        className: \"sider\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: logo,\n                alt: \"logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Editor, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Layout, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          className: classNames('header'),\n          style: {\n            paddingLeft: 12,\n            paddingRight: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classNames('foldout'),\n            onClick: () => this.onCollapse(),\n            children: collapsed ? /*#__PURE__*/_jsxDEV(MenuUnfoldOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(MenuFoldOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classNames('right'),\n            children: user.user_name ? /*#__PURE__*/_jsxDEV(_Dropdown, {\n              overlay: menu,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: classNames(['action', 'account']),\n                children: [/*#__PURE__*/_jsxDEV(_Avatar, {\n                  size: \"small\",\n                  className: classNames('avatar'),\n                  icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 81\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 21\n                }, this), // user.real_name !== ''\n                // ? `${user.user_name}(${user.real_name})`\n                // : user.user_name\n                user.user_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Spin, {\n              size: \"small\",\n              style: {\n                marginLeft: 8\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Content, {\n          className: classNames('content'),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              minHeight: 'calc(100vh - 150px)'\n            },\n            children: /*#__PURE__*/_jsxDEV(context.GlobalContext.Provider, {\n              value: global,\n              children: children\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UpdatePasswordDialog, {\n        visible: updatePwdVisible,\n        onCancel: this.handleUpdatePwdCancel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(DocumentTitle, {\n      title: this.renderPageTitle(),\n      children: /*#__PURE__*/_jsxDEV(ContainerQuery, {\n        query: query,\n        children: params => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames(params),\n          children: layout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"onTriggerResizeEvent\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      const event = document.createEvent('HTMLEvents');\n      event.initEvent('resize', true, false);\n      window.dispatchEvent(event);\n    };\n  }\n})), _class)); // export default AdminLayout;\n\nexport default WithDva(state => ({\n  title: state.global.title,\n  copyRight: state.global.copyRight,\n  collapsed: state.global.collapsed,\n  openKeys: state.global.openKeys,\n  selectedKeys: state.global.selectedKeys,\n  user: state.global.user,\n  menuPaths: state.global.menuPaths,\n  menuMap: state.global.menuMap,\n  menus: state.global.menus,\n  global: state.global\n}))(withRouter(AdminLayout));","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/layouts/AdminLayout.js"],"names":["React","LockOutlined","LogoutOutlined","UserOutlined","MenuFoldOutlined","MenuUnfoldOutlined","DocumentTitle","WithDva","withRouter","Link","ContainerQuery","classNames","Debounce","GlobalFooter","CopyRight","UpdatePasswordDialog","context","logo","dynamic","Editor","ssr","Header","Sider","Content","SubMenu","query","maxWidth","minWidth","AdminLayout","PureComponent","updatePwdVisible","action","dispatch","props","collapsed","type","payload","key","setState","openKeys","menuMap","length","lastKey","lastItem","isParent","i","item","path","id","parent_path","onTriggerResizeEvent","getInitialProps","pathname","isServer","store","dvaStore","componentDidMount","console","log","router","renderNavMenuItems","menusData","map","name","show_status","children","some","child","icon","startsWith","renderPageTitle","menuPaths","title","ptitle","render","user","menus","copyRight","selectedKeys","global","state","menu","onMenuClick","menuProps","siderWidth","layout","onCollapse","paddingLeft","paddingRight","user_name","marginLeft","minHeight","handleUpdatePwdCancel","params","event","document","createEvent","initEvent","window","dispatchEvent"],"mappings":"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","sourcesContent":["import React from 'react';\n// import { Icon as LegacyIcon } from '@ant-design/compatible';\nimport {\n  LockOutlined,\n  LogoutOutlined,\n  UserOutlined,\n  MenuFoldOutlined,\n  MenuUnfoldOutlined,\n} from '@ant-design/icons';\nimport { Layout, Menu, Avatar, Dropdown, Spin } from 'antd';\nimport DocumentTitle from 'react-document-title';\n// import { connect } from 'dva';\nimport WithDva from '../utils/store';\nimport { withRouter } from 'next/router';\n// import { useRouter } from 'next/router'\n\n// eslint-disable-next-line import/no-extraneous-dependencies\n\nimport Link from 'next/link';\n\nimport { ContainerQuery } from 'react-container-query';\nimport classNames from 'classnames';\nimport Debounce from 'lodash-decorators/debounce';\nimport GlobalFooter from '@/components/GlobalFooter';\nimport CopyRight from '@/components/CopyRight';\n\nimport UpdatePasswordDialog from '@/components/UpdatePasswordDialog';\n\nimport context from '@/utils/context';\n\nimport './AdminLayout.less';\nimport logo from '../assets/logo.svg';\nimport dynamic from 'next/dynamic';\n\nconst Editor = dynamic(() => import('../components/Editor'), { ssr: false });\nconst { Header, Sider, Content } = Layout;\nconst { SubMenu } = Menu;\n\nconst query = {\n  'screen-xs': {\n    maxWidth: 575,\n  },\n  'screen-sm': {\n    minWidth: 576,\n    maxWidth: 767,\n  },\n  'screen-md': {\n    minWidth: 768,\n    maxWidth: 991,\n  },\n  'screen-lg': {\n    minWidth: 992,\n    maxWidth: 1199,\n  },\n  'screen-xl': {\n    minWidth: 1200,\n  },\n};\n\nclass AdminLayout extends React.PureComponent {\n  static async getInitialProps(props) {\n    // first time run in server side\n    // other times run in client side ( client side init with default props\n    // console.log('get init props', props);\n    const { pathname, query, isServer, store } = props;\n    // dispatch effects to fetch data here\n\n    return {\n      // dont use store as property name, it will confilct with initial store\n      pathname,\n      query,\n      isServer,\n      dvaStore: store,\n    };\n  }\n\n  state = {\n    updatePwdVisible: false,\n  };\n\n  componentDidMount() {\n    console.log('componentDidMount: ', this.props);\n\n    const {\n      router: { pathname },\n    } = this.props;\n\n    this.dispatch({\n      type: 'global/fetchUser',\n    });\n\n    this.dispatch({\n      type: 'global/fetchMenuTree',\n      pathname,\n    });\n  }\n\n  dispatch = action => {\n    const { dispatch } = this.props;\n    dispatch(action);\n  };\n\n  onCollapse = () => {\n    const { collapsed } = this.props;\n    this.dispatch({\n      type: 'global/changeLayoutCollapsed',\n      payload: !collapsed,\n    });\n  };\n\n  onMenuClick = ({ key }) => {\n    if (key === 'logout') {\n      this.dispatch({\n        type: 'login/logout',\n      });\n    } else if (key === 'updatepwd') {\n      this.setState({ updatePwdVisible: true });\n    }\n  };\n\n  onMenuOpenChange = openKeys => {\n    const { menuMap } = this.props;\n    if (openKeys.length > 1) {\n      const lastKey = openKeys[openKeys.length - 1];\n      const lastItem = menuMap[lastKey];\n      if (!lastItem) {\n        this.dispatch({\n          type: 'global/changeOpenKeys',\n          payload: [],\n        });\n        return;\n      }\n\n      let isParent = false;\n      for (let i = 0; i < openKeys.length - 1; i += 1) {\n        const item = menuMap[openKeys[i]] || {};\n        let path = item.id;\n        if (item.parent_path !== '') {\n          path = `${item.parent_path}/${path}`;\n        }\n        if (lastItem.parent_path === path) {\n          isParent = true;\n          break;\n        }\n      }\n\n      if (!isParent) {\n        this.dispatch({\n          type: 'global/changeOpenKeys',\n          payload: [lastKey],\n        });\n        return;\n      }\n    }\n\n    this.dispatch({\n      type: 'global/changeOpenKeys',\n      payload: [...openKeys],\n    });\n  };\n\n  onToggleClick = () => {\n    const { collapsed } = this.props;\n    this.dispatch({\n      type: 'global/changeLayoutCollapsed',\n      payload: !collapsed,\n    });\n    this.onTriggerResizeEvent();\n  };\n\n  @Debounce(600)\n  onTriggerResizeEvent = () => {\n    const event = document.createEvent('HTMLEvents');\n    event.initEvent('resize', true, false);\n    window.dispatchEvent(event);\n  };\n\n  handleUpdatePwdCancel = () => {\n    this.setState({ updatePwdVisible: false });\n  };\n\n  renderNavMenuItems(menusData) {\n    if (!menusData) {\n      return [];\n    }\n\n    return menusData.map(item => {\n      if (!item.name || item.show_status !== 1) {\n        return null;\n      }\n\n      if (item.children && item.children.some(child => child.name && child.show_status === 1)) {\n        return (\n          <SubMenu\n            title={\n              item.icon ? (\n                <span>\n                  {/* <LegacyIcon type={item.icon} /> */}\n                  <span>{item.name}</span>\n                </span>\n              ) : (\n                item.name\n              )\n            }\n            key={item.id}\n          >\n            {this.renderNavMenuItems(item.children)}\n          </SubMenu>\n        );\n      }\n\n      const { router } = item;\n      // const icon = item.icon && <LegacyIcon type={item.icon} />;\n\n      // console.log(\"renderNavMenuItems: \", this.props);\n      const {\n        router: { pathname },\n      } = this.props;\n\n      return (\n        <Menu.Item key={item.id}>\n          {router.startsWith('http') ? (\n            <a href={router} target=\"_blank\" rel=\"noopener noreferrer\">\n              {icon}\n              <span>{item.name}</span>\n            </a>\n          ) : (\n            <Link href={router} replace={router === pathname}>\n              <div>\n                {/* {icon} */}\n                <span>{item.name}</span>\n              </div>\n            </Link>\n          )}\n        </Menu.Item>\n      );\n    });\n  }\n\n  renderPageTitle() {\n    const {\n      router: { pathname },\n      menuPaths,\n      title,\n    } = this.props;\n\n    console.log('renderPageTitle: pathname', pathname);\n\n    let ptitle = title;\n    const item = menuPaths[pathname];\n    if (item) {\n      ptitle = `${item.name} - ${title}`;\n    }\n    return ptitle;\n  }\n\n  render() {\n    const {\n      children,\n      user,\n      collapsed,\n      menus,\n      copyRight,\n      openKeys,\n      title,\n      selectedKeys,\n      global,\n    } = this.props;\n\n    const { updatePwdVisible } = this.state;\n\n    const menu = (\n      <Menu className=\"menu\" selectedKeys={[]} onClick={this.onMenuClick}>\n        <Menu.Item key=\"updatepwd\">\n          <LockOutlined />\n          Change Password\n        </Menu.Item>\n        <Menu.Divider />\n        <Menu.Item key=\"logout\">\n          <LogoutOutlined />\n          Sign Out\n        </Menu.Item>\n      </Menu>\n    );\n\n    // Don't show popup menu when it is been collapsed\n    const menuProps = collapsed ? {} : { openKeys };\n    const siderWidth = 400;\n\n    const layout = (\n      <Layout>\n        <Sider\n          trigger={null}\n          collapsible\n          collapsed={collapsed}\n          breakpoint=\"lg\"\n          onCollapse={this.onCollapse}\n          width={siderWidth}\n          className=\"sider\"\n        >\n          <div className=\"logo\">\n            <Link href=\"/\">\n              <div>\n                <img src={logo} alt=\"logo\" />\n                <h1>{title}</h1>\n              </div>\n            </Link>\n          </div>\n          <Editor />\n        </Sider>\n        <Layout>\n          <Header\n            className={classNames('header')}\n            style={{\n              paddingLeft: 12,\n              paddingRight: 12,\n            }}\n          >\n            <div className={classNames('foldout')} onClick={() => this.onCollapse()}>\n              {collapsed ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\n            </div>\n            <div className={classNames('right')}>\n              {user.user_name ? (\n                <Dropdown overlay={menu}>\n                  <span className={classNames(['action', 'account'])}>\n                    <Avatar size=\"small\" className={classNames('avatar')} icon={<UserOutlined />} />\n                    {\n                      // user.real_name !== ''\n                      // ? `${user.user_name}(${user.real_name})`\n                      // : user.user_name\n                      user.user_name\n                    }\n                  </span>\n                </Dropdown>\n              ) : (\n                <Spin size=\"small\" style={{ marginLeft: 8 }} />\n              )}\n            </div>\n          </Header>\n          <Content className={classNames('content')}>\n            <div style={{ minHeight: 'calc(100vh - 150px)' }}>\n              <context.GlobalContext.Provider value={global}>\n                {children}\n              </context.GlobalContext.Provider>\n            </div>\n            {/* <GlobalFooter copyright={<CopyRight title={copyRight} />} /> */}\n          </Content>\n        </Layout>\n        <UpdatePasswordDialog visible={updatePwdVisible} onCancel={this.handleUpdatePwdCancel} />\n      </Layout>\n    );\n\n    return (\n      <DocumentTitle title={this.renderPageTitle()}>\n        <ContainerQuery query={query}>\n          {params => <div className={classNames(params)}>{layout}</div>}\n        </ContainerQuery>\n      </DocumentTitle>\n    );\n  }\n}\n\n// export default AdminLayout;\nexport default WithDva(state => ({\n  title: state.global.title,\n  copyRight: state.global.copyRight,\n  collapsed: state.global.collapsed,\n  openKeys: state.global.openKeys,\n  selectedKeys: state.global.selectedKeys,\n  user: state.global.user,\n  menuPaths: state.global.menuPaths,\n  menuMap: state.global.menuMap,\n  menus: state.global.menus,\n  global: state.global,\n}))(withRouter(AdminLayout));\n"]},"metadata":{},"sourceType":"module"}