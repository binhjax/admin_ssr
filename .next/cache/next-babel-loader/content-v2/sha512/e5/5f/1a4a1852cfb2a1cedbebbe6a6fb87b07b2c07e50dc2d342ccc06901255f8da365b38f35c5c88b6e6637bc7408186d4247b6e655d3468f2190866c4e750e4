{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\n\nvar _dec, _class, _temp;\n\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { Form } from '@ant-design/compatible'; // import '../../pages/menu/MenuAction/index.css';\n\nimport { updatePwd } from '@/services/login';\nimport { md5Hash } from '../../utils/utils';\nlet UpdatePasswordDialog = (_dec = Form.create(), _dec(_class = (_temp = class UpdatePasswordDialog extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      submitting: false\n    });\n\n    _defineProperty(this, \"onOKClick\", () => {\n      const {\n        form\n      } = this.props;\n      form.validateFieldsAndScroll((err, values) => {\n        if (err) {\n          return;\n        }\n\n        if (values.new_password !== values.confirm_new_password) {\n          _message.warning('新密码与确认新密码不一致！');\n\n          return;\n        }\n\n        this.setState({\n          submitting: true\n        });\n        const formData = {\n          old_password: md5Hash(values.old_password),\n          new_password: md5Hash(values.new_password)\n        };\n        updatePwd(formData).then(res => {\n          if (res.status === 'OK') {\n            _message.success('密码更新成功！');\n\n            this.handleCancel();\n          }\n\n          this.setState({\n            submitting: false\n          });\n        });\n      });\n    });\n\n    _defineProperty(this, \"handleCancel\", () => {\n      const {\n        onCancel\n      } = this.props;\n\n      if (onCancel) {\n        onCancel();\n      }\n    });\n\n    _defineProperty(this, \"dispatch\", action => {\n      const {\n        dispatch\n      } = this.props;\n      dispatch(action);\n    });\n  }\n\n  render() {\n    const {\n      visible,\n      form: {\n        getFieldDecorator\n      }\n    } = this.props;\n    const {\n      submitting\n    } = this.state;\n    const formItemLayout = {\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 16\n      }\n    };\n    return __jsx(_Modal, {\n      title: \"Change personal password\",\n      width: 450,\n      visible: visible,\n      maskClosable: false,\n      confirmLoading: submitting,\n      destroyOnClose: true,\n      onOk: this.onOKClick,\n      onCancel: this.handleCancel,\n      style: {\n        top: 20\n      },\n      bodyStyle: {\n        maxHeight: 'calc( 100vh - 158px )',\n        overflowY: 'auto'\n      }\n    }, __jsx(Form, null, __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"Old Password\"\n    }), getFieldDecorator('old_password', {\n      rules: [{\n        required: true,\n        message: 'Please enter the old password'\n      }]\n    })(__jsx(_Input, {\n      type: \"password\",\n      placeholder: \"Please enter the old password\"\n    }))), __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"New Password\"\n    }), getFieldDecorator('new_password', {\n      rules: [{\n        required: true,\n        message: 'Please enter a new password'\n      }]\n    })(__jsx(_Input, {\n      type: \"password\",\n      placeholder: \"Please\"\n    }))), __jsx(Form.Item, _extends({}, formItemLayout, {\n      label: \"Confirm the new password\"\n    }), getFieldDecorator('confirm_new_password', {\n      rules: [{\n        required: true,\n        message: 'Please enter confirm new password'\n      }]\n    })(__jsx(_Input, {\n      type: \"password\",\n      placeholder: \"Please enter confirm new password\"\n    })))));\n  }\n\n}, _temp)) || _class);\nexport default UpdatePasswordDialog;","map":null,"metadata":{},"sourceType":"module"}