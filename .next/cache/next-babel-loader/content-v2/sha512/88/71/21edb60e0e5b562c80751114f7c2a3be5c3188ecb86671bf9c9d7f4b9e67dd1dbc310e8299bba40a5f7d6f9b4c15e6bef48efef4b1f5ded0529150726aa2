{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/tooltip/style\";\nimport _Tooltip from \"antd/lib/tooltip\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\n\nvar _jsxFileName = \"/Volumes/ExternalData/Work/vnshop/admin/src/components/Menu/TplDialog.js\",\n    _dec,\n    _class,\n    _temp;\n\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport { Form } from '@ant-design/compatible';\nimport '@ant-design/compatible/assets/index.css';\nlet TplDialog = (_dec = Form.create(), _dec(_class = (_temp = class TplDialog extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleCancel\", () => {\n      const {\n        onCancel\n      } = this.props;\n\n      if (onCancel) {\n        onCancel();\n      }\n    });\n\n    _defineProperty(this, \"handleOKClick\", () => {\n      const {\n        form,\n        onSubmit\n      } = this.props;\n      form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          onSubmit(_objectSpread({}, values));\n        }\n      });\n    });\n  }\n\n  render() {\n    const {\n      visible,\n      form\n    } = this.props;\n    const {\n      getFieldDecorator\n    } = form;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 6\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    return __jsx(_Modal, {\n      title: \"Quickly create templates\",\n      width: 450,\n      visible: visible,\n      maskClosable: false,\n      destroyOnClose: true,\n      onOk: this.handleOKClick,\n      onCancel: this.handleCancel,\n      style: {\n        top: 20\n      },\n      bodyStyle: {\n        maxHeight: 'calc( 100vh - 158px )',\n        overflowY: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, __jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, __jsx(Form.Item, _extends({\n      label: \"Interface path\"\n    }, formItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }), __jsx(_Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, __jsx(_Col, {\n      span: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, getFieldDecorator('path', {\n      initialValue: '/api/v1/',\n      rules: [{\n        required: true,\n        message: 'Please enter the interface path'\n      }]\n    })(__jsx(_Input, {\n      placeholder: \"please enter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 20\n      }\n    }))), __jsx(_Col, {\n      span: 4,\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, __jsx(_Tooltip, {\n      title: \"example: /api/v1/demos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, __jsx(QuestionCircleOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    })))))));\n  }\n\n}, _temp)) || _class);\nexport default TplDialog;","map":{"version":3,"sources":["/Volumes/ExternalData/Work/vnshop/admin/src/components/Menu/TplDialog.js"],"names":["React","PureComponent","QuestionCircleOutlined","Form","TplDialog","create","onCancel","props","form","onSubmit","validateFieldsAndScroll","err","values","render","visible","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","handleOKClick","handleCancel","top","maxHeight","overflowY","initialValue","rules","required","message","textAlign"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport { Modal, Input, Row, Col, Tooltip } from 'antd';\nimport { Form } from '@ant-design/compatible';\nimport '@ant-design/compatible/assets/index.css';\n\n@Form.create()\nclass TplDialog extends PureComponent {\n  handleCancel = () => {\n    const { onCancel } = this.props;\n    if (onCancel) {\n      onCancel();\n    }\n  };\n\n  handleOKClick = () => {\n    const { form, onSubmit } = this.props;\n    form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        onSubmit({ ...values });\n      }\n    });\n  };\n\n  render() {\n    const { visible, form } = this.props;\n    const { getFieldDecorator } = form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n\n    return (\n      <Modal\n        title=\"Quickly create templates\"\n        width={450}\n        visible={visible}\n        maskClosable={false}\n        destroyOnClose\n        onOk={this.handleOKClick}\n        onCancel={this.handleCancel}\n        style={{ top: 20 }}\n        bodyStyle={{ maxHeight: 'calc( 100vh - 158px )', overflowY: 'auto' }}\n      >\n        <Form>\n          <Form.Item label=\"Interface path\" {...formItemLayout}>\n            <Row>\n              <Col span={20}>\n                {getFieldDecorator('path', {\n                  initialValue: '/api/v1/',\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Please enter the interface path',\n                    },\n                  ],\n                })(<Input placeholder=\"please enter\" />)}\n              </Col>\n              <Col span={4} style={{ textAlign: 'center' }}>\n                <Tooltip title=\"example: /api/v1/demos\">\n                  <QuestionCircleOutlined />\n                </Tooltip>\n              </Col>\n            </Row>\n          </Form.Item>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default TplDialog;\n"]},"metadata":{},"sourceType":"module"}