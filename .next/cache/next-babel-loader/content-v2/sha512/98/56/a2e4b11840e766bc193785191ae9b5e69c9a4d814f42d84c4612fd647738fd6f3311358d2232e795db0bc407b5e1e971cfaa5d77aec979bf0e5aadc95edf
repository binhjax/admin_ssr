{"ast":null,"code":"import \"antd/lib/popover/style\";\nimport _Popover from \"antd/lib/popover\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nvar _jsxFileName = \"/home/tuanquang/admin_ssr/src/components/Test/CustomNodeWidget.tsx\";\nimport * as React from 'react';\nimport { PortWidget } from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\nimport { ExclamationCircleOutlined, PlusOutlined, EditOutlined, MoreOutlined, DeleteOutlined } from '@ant-design/icons';\nconst styles = {\n  rightPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    right: '0px'\n  },\n  leftPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '0'\n  },\n  tableHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    color: 'white',\n    fontWeight: 900,\n    fontSize: '18px',\n    background: '#316896',\n    marginBottom: '-2px'\n  },\n  tableHeadText: {\n    fill: '#fff',\n    fontWeight: 700,\n    border: ' 0 solid #e2e8f0',\n    padding: '7px 30px 7px '\n  },\n  tableRow: {\n    fontWeight: 700,\n    fontSize: '16px',\n    display: 'flex',\n    flexBasis: 100,\n    justifyContent: 'space-between',\n    background: '#f6f6f6'\n  }\n};\nexport const Port = styled.div`\n  height: 20px;\n  background: #f6f6f6;\n  cursor: pointer;\n  margin-top: 5px;\n\n  &:hover {\n    background: #deecf3;\n  }\n`;\nexport const CustomNodeWidget = props => {\n  const [editNode, setEditNode] = React.useState(false);\n  const [name, setName] = React.useState('');\n  const [hover, setHover] = React.useState('');\n\n  const addPort = () => {\n    props.node.addCustomPort('new_col', '', '');\n    props.engine.repaintCanvas();\n  };\n\n  const confirm = () => {\n    _Modal.confirm({\n      title: 'Confirm',\n      icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this),\n      content: 'Confirm delete table',\n      okText: 'Yes',\n      cancelText: 'No',\n\n      onOk() {\n        props.node.remove();\n        props.engine.repaintCanvas();\n      }\n\n    });\n  };\n\n  const openEdit = () => {\n    setEditNode(true);\n    setName(props.node.getOptions().extras);\n  };\n\n  const closeEdit = () => {\n    setEditNode(false);\n    setName('');\n  };\n\n  const handelChangeName = e => {\n    setName(e.target.value);\n  };\n\n  const handleChangePort = e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n    ports[name].getOptions().extras[id] = value; // dispatch(action.setPorts({ ...ports }));\n  };\n\n  const content = /*#__PURE__*/_jsxDEV(_Row, {\n    children: [/*#__PURE__*/_jsxDEV(_Button, {\n      type: \"ghost\",\n      icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {\n        style: {\n          color: 'green'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }, this),\n      onClick: () => addPort()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Button, {\n      type: \"ghost\",\n      icon: /*#__PURE__*/_jsxDEV(EditOutlined, {\n        style: {\n          color: 'cyan'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }, this),\n      onClick: () => openEdit()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Button, {\n      type: \"ghost\",\n      icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n        style: {\n          color: 'red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }, this),\n      onClick: () => confirm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minWidth: props.size * 2,\n      height: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '0',\n        right: '0'\n      },\n      children: /*#__PURE__*/_jsxDEV(_Popover, {\n        placement: \"rightBottom\",\n        content: content,\n        trigger: \"focus\",\n        children: /*#__PURE__*/_jsxDEV(_Button, {\n          type: \"ghost\",\n          style: {\n            border: 'none'\n          },\n          icon: /*#__PURE__*/_jsxDEV(MoreOutlined, {\n            style: {\n              color: 'white',\n              fontSize: '20px',\n              paddingTop: '5px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.tableHeader,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.tableHeadText,\n        children: \"Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), Object.entries(props.node.getPorts()).map(([key, value], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.tableRow,\n      children: [/*#__PURE__*/_jsxDEV(PortWidget, {\n        port: value,\n        engine: props.engine,\n        style: styles.leftPort,\n        children: /*#__PURE__*/_jsxDEV(Port, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PortWidget, {\n        port: value,\n        engine: props.engine,\n        style: styles.rightPort,\n        children: /*#__PURE__*/_jsxDEV(Port, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingLeft: 30\n        },\n        children: value.getOptions().extras.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: '1 0 100px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingRight: 30,\n          color: '#999'\n        },\n        children: value.getOptions().extras.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Test/CustomNodeWidget.tsx"],"names":["React","PortWidget","styled","ExclamationCircleOutlined","PlusOutlined","EditOutlined","MoreOutlined","DeleteOutlined","styles","rightPort","width","height","position","right","leftPort","left","tableHeader","display","alignItems","color","fontWeight","fontSize","background","marginBottom","tableHeadText","fill","border","padding","tableRow","flexBasis","justifyContent","Port","div","CustomNodeWidget","props","editNode","setEditNode","useState","name","setName","hover","setHover","addPort","node","addCustomPort","engine","repaintCanvas","confirm","title","icon","content","okText","cancelText","onOk","remove","openEdit","getOptions","extras","closeEdit","handelChangeName","e","target","value","handleChangePort","id","ports","minWidth","size","top","paddingTop","Object","entries","getPorts","map","key","index","paddingLeft","flex","paddingRight","type"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { CustomNodeModel } from './CustomNodeModel';\nimport {\n  DiagramEngine,\n  PortModel,\n  PortModelAlignment,\n  PortWidget,\n} from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\n\nimport {\n  ExclamationCircleOutlined,\n  PlusOutlined,\n  EditOutlined,\n  KeyOutlined,\n  MoreOutlined,\n  DeleteOutlined,\n} from '@ant-design/icons';\nimport { Col, Modal, Input, Button, Typography, Row, Popover, AutoComplete, Select } from 'antd';\n\nexport interface CustomNodeWidgetProps {\n  node: CustomNodeModel;\n  engine: DiagramEngine;\n  size?: number;\n}\n\nconst styles = {\n  rightPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    right: '0px',\n  },\n\n  leftPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '0',\n  },\n  tableHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    color: 'white',\n    fontWeight: 900,\n    fontSize: '18px',\n    background: '#316896',\n    marginBottom: '-2px',\n  },\n  tableHeadText: {\n    fill: '#fff',\n    fontWeight: 700,\n    border: ' 0 solid #e2e8f0',\n    padding: '7px 30px 7px ',\n  },\n  tableRow: {\n    fontWeight: 700,\n    fontSize: '16px',\n    display: 'flex',\n    flexBasis: 100,\n    justifyContent: 'space-between',\n    background: '#f6f6f6',\n  },\n};\nexport const Port = styled.div`\n  height: 20px;\n  background: #f6f6f6;\n  cursor: pointer;\n  margin-top: 5px;\n\n  &:hover {\n    background: #deecf3;\n  }\n`;\n\nexport const CustomNodeWidget: React.FC<CustomNodeWidgetProps> = props => {\n  const [editNode, setEditNode] = React.useState(false);\n  const [name, setName] = React.useState('');\n  const [hover, setHover] = React.useState('');\n\n  const addPort = () => {\n    props.node.addCustomPort('new_col', '', '');\n    props.engine.repaintCanvas();\n  };\n  const confirm = () => {\n    Modal.confirm({\n      title: 'Confirm',\n      icon: <ExclamationCircleOutlined />,\n      content: 'Confirm delete table',\n      okText: 'Yes',\n      cancelText: 'No',\n      onOk() {\n        props.node.remove();\n        props.engine.repaintCanvas();\n      },\n    });\n  };\n  const openEdit = () => {\n    setEditNode(true);\n    setName(props.node.getOptions().extras);\n  };\n  const closeEdit = () => {\n    setEditNode(false);\n    setName('');\n  };\n  const handelChangeName = (e: any) => {\n    setName(e.target.value);\n  };\n  const handleChangePort = e => {\n    const { id, name, value } = e.target;\n\n    ports[name].getOptions().extras[id] = value;\n    // dispatch(action.setPorts({ ...ports }));\n  };\n  const content = (\n    <Row>\n      <Button\n        type=\"ghost\"\n        icon={<PlusOutlined style={{ color: 'green' }} />}\n        onClick={() => addPort()}\n      />\n      <Button\n        type=\"ghost\"\n        icon={<EditOutlined style={{ color: 'cyan' }} />}\n        onClick={() => openEdit()}\n      />\n      <Button\n        type=\"ghost\"\n        icon={<DeleteOutlined style={{ color: 'red' }} />}\n        onClick={() => confirm()}\n      />\n    </Row>\n  );\n  return (\n    <div\n      style={{\n        minWidth: props.size * 2,\n        height: 'auto',\n      }}\n    >\n      <div style={{ position: 'absolute', top: '0', right: '0' }}>\n        <Popover placement=\"rightBottom\" content={content} trigger=\"focus\">\n          <Button\n            type=\"ghost\"\n            style={{ border: 'none' }}\n            icon={<MoreOutlined style={{ color: 'white', fontSize: '20px', paddingTop: '5px' }} />}\n          />\n        </Popover>\n      </div>\n      <div style={styles.tableHeader}>\n        <div style={styles.tableHeadText}>Test</div>\n      </div>\n      {Object.entries(props.node.getPorts()).map(([key, value], index: any) => (\n        <div style={styles.tableRow} key={index}>\n          <PortWidget port={value} engine={props.engine} style={styles.leftPort}>\n            <Port />\n          </PortWidget>\n          <PortWidget port={value} engine={props.engine} style={styles.rightPort}>\n            <Port />\n          </PortWidget>\n          <div style={{ paddingLeft: 30 }}>{value.getOptions().extras.name}</div>\n          <div style={{ flex: '1 0 100px' }}></div>\n          <div style={{ paddingRight: 30, color: '#999' }}>{value.getOptions().extras.type}</div>\n        </div>\n      ))}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}