{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport invariant from 'invariant';\nimport document from 'global/document';\nimport { Provider } from 'react-redux';\nimport * as core from 'dva-core';\nexport const isFunction = o => typeof o === 'function';\nexport default function (opts = {}) {\n  const app = core.create(opts);\n  const oldAppStart = app.start;\n  app.router = router;\n  app.start = start;\n  return app;\n\n  function router(router) {\n    invariant(isFunction(router), `[app.router] router should be function, but got ${typeof router}`);\n    app._router = router;\n  }\n\n  function start(container) {\n    // 允许 container 是字符串，然后用 querySelector 找元素\n    if (isString(container)) {\n      container = document.querySelector(container);\n      invariant(container, `[app.start] container ${container} not found`);\n    } // 并且是 HTMLElement\n\n\n    invariant(!container || isHTMLElement(container), `[app.start] container should be HTMLElement`); // 路由必须提前注册\n\n    invariant(app._router, `[app.start] router must be registered before app.start()`);\n\n    if (!app._store) {\n      oldAppStart.call(app);\n    }\n\n    const store = app._store; // export _getProvider for HMR\n    // ref: https://github.com/dvajs/dva/issues/469\n\n    app._getProvider = getProvider.bind(null, store, app); // If has container, render; else, return react component\n\n    if (container) {\n      render(container, store, app, app._router);\n\n      app._plugin.apply('onHmr')(render.bind(null, container, store, app));\n    } else {\n      return getProvider(store, this, this._router);\n    }\n  }\n}\n\nfunction isHTMLElement(node) {\n  return typeof node === 'object' && node !== null && node.nodeType && node.nodeName;\n}\n\nfunction isString(str) {\n  return typeof str === 'string';\n}\n\nfunction getProvider(store, app, router) {\n  return extraProps => __jsx(Provider, {\n    store: store\n  }, router(_objectSpread({\n    app\n  }, extraProps)));\n}\n\nfunction render(container, store, app, router) {\n  const ReactDOM = require('react-dom'); // eslint-disable-line\n\n\n  ReactDOM.render( /*#__PURE__*/React.createElement(getProvider(store, app, router)), container);\n}","map":null,"metadata":{},"sourceType":"module"}