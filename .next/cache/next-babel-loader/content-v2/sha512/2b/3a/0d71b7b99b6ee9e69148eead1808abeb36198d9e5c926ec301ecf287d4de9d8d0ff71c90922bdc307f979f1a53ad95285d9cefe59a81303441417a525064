{"ast":null,"code":"import \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as roleService from '@/services/role';\nexport default {\n  namespace: 'role',\n  state: {\n    search: {},\n    pagination: {},\n    data: {\n      list: [],\n      pagination: {}\n    },\n    submitting: false,\n    formTitle: '',\n    formID: '',\n    formVisible: false,\n    formData: {},\n    selectData: []\n  },\n  effects: {\n    fetch: /*#__PURE__*/_regeneratorRuntime.mark(function fetch(_ref, _ref2) {\n      var search, pagination, call, put, select, params, s, p, response;\n      return _regeneratorRuntime.wrap(function fetch$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              search = _ref.search, pagination = _ref.pagination;\n              call = _ref2.call, put = _ref2.put, select = _ref2.select;\n              params = {};\n\n              if (!search) {\n                _context.next = 9;\n                break;\n              }\n\n              params = _objectSpread(_objectSpread({}, params), search);\n              _context.next = 7;\n              return put({\n                type: 'saveSearch',\n                payload: search\n              });\n\n            case 7:\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.next = 11;\n              return select(function (state) {\n                return state.role.search;\n              });\n\n            case 11:\n              s = _context.sent;\n\n              if (s) {\n                params = _objectSpread(_objectSpread({}, params), s);\n              }\n\n            case 13:\n              if (!pagination) {\n                _context.next = 19;\n                break;\n              }\n\n              params = _objectSpread(_objectSpread({}, params), pagination);\n              _context.next = 17;\n              return put({\n                type: 'savePagination',\n                payload: pagination\n              });\n\n            case 17:\n              _context.next = 23;\n              break;\n\n            case 19:\n              _context.next = 21;\n              return select(function (state) {\n                return state.role.pagination;\n              });\n\n            case 21:\n              p = _context.sent;\n\n              if (p) {\n                params = _objectSpread(_objectSpread({}, params), p);\n              }\n\n            case 23:\n              _context.next = 25;\n              return call(roleService.query, params);\n\n            case 25:\n              response = _context.sent;\n              _context.next = 28;\n              return put({\n                type: 'saveData',\n                payload: response\n              });\n\n            case 28:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, fetch);\n    }),\n    loadForm: /*#__PURE__*/_regeneratorRuntime.mark(function loadForm(_ref3, _ref4) {\n      var payload, put;\n      return _regeneratorRuntime.wrap(function loadForm$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              payload = _ref3.payload;\n              put = _ref4.put;\n              _context2.next = 4;\n              return put({\n                type: 'changeFormVisible',\n                payload: true\n              });\n\n            case 4:\n              _context2.next = 6;\n              return [put({\n                type: 'saveFormType',\n                payload: payload.type\n              }), put({\n                type: 'saveFormTitle',\n                payload: 'New role'\n              }), put({\n                type: 'saveFormID',\n                payload: ''\n              }), put({\n                type: 'saveFormData',\n                payload: {}\n              })];\n\n            case 6:\n              if (!(payload.type === 'E')) {\n                _context2.next = 9;\n                break;\n              }\n\n              _context2.next = 9;\n              return [put({\n                type: 'saveFormTitle',\n                payload: 'Edit role'\n              }), put({\n                type: 'saveFormID',\n                payload: payload.id\n              }), put({\n                type: 'fetchForm',\n                payload: {\n                  id: payload.id\n                }\n              })];\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, loadForm);\n    }),\n    fetchForm: /*#__PURE__*/_regeneratorRuntime.mark(function fetchForm(_ref5, _ref6) {\n      var payload, call, put, response, roleMenus, mRoleMenus, nRoleMenus;\n      return _regeneratorRuntime.wrap(function fetchForm$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              payload = _ref5.payload;\n              call = _ref6.call, put = _ref6.put;\n              _context3.next = 4;\n              return call(roleService.get, payload.id);\n\n            case 4:\n              response = _context3.sent;\n              roleMenus = response.role_menus;\n\n              if (roleMenus) {\n                mRoleMenus = {};\n                nRoleMenus = [];\n                roleMenus.forEach(function (item) {\n                  if (mRoleMenus[item.menu_id]) {\n                    mRoleMenus[item.menu_id] = [].concat(_toConsumableArray(mRoleMenus[item.menu_id]), [item.action_id]);\n                  } else {\n                    mRoleMenus[item.menu_id] = [item.action_id];\n                  }\n                });\n                Object.keys(mRoleMenus).forEach(function (key) {\n                  nRoleMenus.push({\n                    menu_id: key,\n                    actions: mRoleMenus[key]\n                  });\n                });\n                response.role_menus = nRoleMenus;\n              }\n\n              _context3.next = 9;\n              return [put({\n                type: 'saveFormData',\n                payload: response\n              })];\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, fetchForm);\n    }),\n    submit: /*#__PURE__*/_regeneratorRuntime.mark(function submit(_ref7, _ref8) {\n      var payload, call, put, select, params, formType, success, id, response, _response;\n\n      return _regeneratorRuntime.wrap(function submit$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              payload = _ref7.payload;\n              call = _ref8.call, put = _ref8.put, select = _ref8.select;\n              _context4.next = 4;\n              return put({\n                type: 'changeSubmitting',\n                payload: true\n              });\n\n            case 4:\n              params = _objectSpread({}, payload);\n              _context4.next = 7;\n              return select(function (state) {\n                return state.role.formType;\n              });\n\n            case 7:\n              formType = _context4.sent;\n              success = false;\n\n              if (!(formType === 'E')) {\n                _context4.next = 19;\n                break;\n              }\n\n              _context4.next = 12;\n              return select(function (state) {\n                return state.role.formID;\n              });\n\n            case 12:\n              id = _context4.sent;\n              _context4.next = 15;\n              return call(roleService.update, id, params);\n\n            case 15:\n              response = _context4.sent;\n\n              if (response.status === 'OK') {\n                success = true;\n              }\n\n              _context4.next = 23;\n              break;\n\n            case 19:\n              _context4.next = 21;\n              return call(roleService.create, params);\n\n            case 21:\n              _response = _context4.sent;\n\n              if (_response.id && _response.id !== '') {\n                success = true;\n              }\n\n            case 23:\n              _context4.next = 25;\n              return put({\n                type: 'changeSubmitting',\n                payload: false\n              });\n\n            case 25:\n              if (!success) {\n                _context4.next = 31;\n                break;\n              }\n\n              _message.success('Saved successfully');\n\n              _context4.next = 29;\n              return put({\n                type: 'changeFormVisible',\n                payload: false\n              });\n\n            case 29:\n              _context4.next = 31;\n              return put({\n                type: 'fetch'\n              });\n\n            case 31:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, submit);\n    }),\n    del: /*#__PURE__*/_regeneratorRuntime.mark(function del(_ref9, _ref10) {\n      var payload, call, put, response;\n      return _regeneratorRuntime.wrap(function del$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              payload = _ref9.payload;\n              call = _ref10.call, put = _ref10.put;\n              _context5.next = 4;\n              return call(roleService.del, payload.id);\n\n            case 4:\n              response = _context5.sent;\n\n              if (!(response.status === 'OK')) {\n                _context5.next = 9;\n                break;\n              }\n\n              _message.success('successfully deleted');\n\n              _context5.next = 9;\n              return put({\n                type: 'fetch'\n              });\n\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, del);\n    }),\n    fetchSelect: /*#__PURE__*/_regeneratorRuntime.mark(function fetchSelect(_, _ref11) {\n      var call, put, response;\n      return _regeneratorRuntime.wrap(function fetchSelect$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              call = _ref11.call, put = _ref11.put;\n              _context6.next = 3;\n              return call(roleService.querySelect);\n\n            case 3:\n              response = _context6.sent;\n              _context6.next = 6;\n              return put({\n                type: 'saveSelectData',\n                payload: response.list || []\n              });\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, fetchSelect);\n    }),\n    changeStatus: /*#__PURE__*/_regeneratorRuntime.mark(function changeStatus(_ref12, _ref13) {\n      var payload, call, put, select, response, msg, data, newData, i, item;\n      return _regeneratorRuntime.wrap(function changeStatus$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              payload = _ref12.payload;\n              call = _ref13.call, put = _ref13.put, select = _ref13.select;\n\n              if (!(payload.status === 1)) {\n                _context7.next = 8;\n                break;\n              }\n\n              _context7.next = 5;\n              return call(roleService.enable, payload.id);\n\n            case 5:\n              response = _context7.sent;\n              _context7.next = 11;\n              break;\n\n            case 8:\n              _context7.next = 10;\n              return call(roleService.disable, payload.id);\n\n            case 10:\n              response = _context7.sent;\n\n            case 11:\n              if (!(response.status === 'OK')) {\n                _context7.next = 22;\n                break;\n              }\n\n              msg = 'Successfully activated';\n\n              if (payload.status === 2) {\n                msg = 'Deactivated successfully';\n              }\n\n              _message.success(msg);\n\n              _context7.next = 17;\n              return select(function (state) {\n                return state.role.data;\n              });\n\n            case 17:\n              data = _context7.sent;\n              newData = {\n                list: [],\n                pagination: data.pagination\n              };\n\n              for (i = 0; i < data.list.length; i += 1) {\n                item = data.list[i];\n\n                if (item.id === payload.id) {\n                  item.status = payload.status;\n                }\n\n                newData.list.push(item);\n              }\n\n              _context7.next = 22;\n              return put({\n                type: 'saveData',\n                payload: newData\n              });\n\n            case 22:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, changeStatus);\n    })\n  },\n  reducers: {\n    saveData: function saveData(state, _ref14) {\n      var payload = _ref14.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: payload\n      });\n    },\n    saveSearch: function saveSearch(state, _ref15) {\n      var payload = _ref15.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        search: payload\n      });\n    },\n    savePagination: function savePagination(state, _ref16) {\n      var payload = _ref16.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pagination: payload\n      });\n    },\n    changeFormVisible: function changeFormVisible(state, _ref17) {\n      var payload = _ref17.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formVisible: payload\n      });\n    },\n    saveFormTitle: function saveFormTitle(state, _ref18) {\n      var payload = _ref18.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formTitle: payload\n      });\n    },\n    saveFormType: function saveFormType(state, _ref19) {\n      var payload = _ref19.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formType: payload\n      });\n    },\n    saveFormID: function saveFormID(state, _ref20) {\n      var payload = _ref20.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formID: payload\n      });\n    },\n    saveFormData: function saveFormData(state, _ref21) {\n      var payload = _ref21.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formData: payload\n      });\n    },\n    changeSubmitting: function changeSubmitting(state, _ref22) {\n      var payload = _ref22.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        submitting: payload\n      });\n    },\n    saveSelectData: function saveSelectData(state, _ref23) {\n      var payload = _ref23.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selectData: payload\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/Volumes/ExternalData/Work/vnshop/admin/src/models/role.js"],"names":["roleService","namespace","state","search","pagination","data","list","submitting","formTitle","formID","formVisible","formData","selectData","effects","fetch","call","put","select","params","type","payload","role","s","p","query","response","loadForm","id","fetchForm","get","roleMenus","role_menus","mRoleMenus","nRoleMenus","forEach","item","menu_id","action_id","Object","keys","key","push","actions","submit","formType","success","update","status","create","del","fetchSelect","_","querySelect","changeStatus","enable","disable","msg","newData","i","length","reducers","saveData","saveSearch","savePagination","changeFormVisible","saveFormTitle","saveFormType","saveFormID","saveFormData","changeSubmitting","saveSelectData"],"mappings":"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","sourcesContent":["import { message } from 'antd';\nimport * as roleService from '@/services/role';\n\nexport default {\n  namespace: 'role',\n  state: {\n    search: {},\n    pagination: {},\n    data: {\n      list: [],\n      pagination: {},\n    },\n    submitting: false,\n    formTitle: '',\n    formID: '',\n    formVisible: false,\n    formData: {},\n    selectData: [],\n  },\n  effects: {\n    *fetch({ search, pagination }, { call, put, select }) {\n      let params = {};\n\n      if (search) {\n        params = { ...params, ...search };\n        yield put({\n          type: 'saveSearch',\n          payload: search,\n        });\n      } else {\n        const s = yield select(state => state.role.search);\n        if (s) {\n          params = { ...params, ...s };\n        }\n      }\n\n      if (pagination) {\n        params = { ...params, ...pagination };\n        yield put({\n          type: 'savePagination',\n          payload: pagination,\n        });\n      } else {\n        const p = yield select(state => state.role.pagination);\n        if (p) {\n          params = { ...params, ...p };\n        }\n      }\n\n      const response = yield call(roleService.query, params);\n      yield put({\n        type: 'saveData',\n        payload: response,\n      });\n    },\n    *loadForm({ payload }, { put }) {\n      yield put({\n        type: 'changeFormVisible',\n        payload: true,\n      });\n\n      yield [\n        put({\n          type: 'saveFormType',\n          payload: payload.type,\n        }),\n        put({\n          type: 'saveFormTitle',\n          payload: 'New role',\n        }),\n        put({\n          type: 'saveFormID',\n          payload: '',\n        }),\n        put({\n          type: 'saveFormData',\n          payload: {},\n        }),\n      ];\n\n      if (payload.type === 'E') {\n        yield [\n          put({\n            type: 'saveFormTitle',\n            payload: 'Edit role',\n          }),\n          put({\n            type: 'saveFormID',\n            payload: payload.id,\n          }),\n          put({\n            type: 'fetchForm',\n            payload: { id: payload.id },\n          }),\n        ];\n      }\n    },\n    *fetchForm({ payload }, { call, put }) {\n      const response = yield call(roleService.get, payload.id);\n\n      const { role_menus: roleMenus } = response;\n      if (roleMenus) {\n        const mRoleMenus = {};\n        const nRoleMenus = [];\n        roleMenus.forEach(item => {\n          if (mRoleMenus[item.menu_id]) {\n            mRoleMenus[item.menu_id] = [...mRoleMenus[item.menu_id], item.action_id];\n          } else {\n            mRoleMenus[item.menu_id] = [item.action_id];\n          }\n        });\n        Object.keys(mRoleMenus).forEach(key => {\n          nRoleMenus.push({ menu_id: key, actions: mRoleMenus[key] });\n        });\n        response.role_menus = nRoleMenus;\n      }\n\n      yield [\n        put({\n          type: 'saveFormData',\n          payload: response,\n        }),\n      ];\n    },\n    *submit({ payload }, { call, put, select }) {\n      yield put({\n        type: 'changeSubmitting',\n        payload: true,\n      });\n\n      const params = { ...payload };\n      const formType = yield select(state => state.role.formType);\n\n      let success = false;\n      if (formType === 'E') {\n        const id = yield select(state => state.role.formID);\n        const response = yield call(roleService.update, id, params);\n        if (response.status === 'OK') {\n          success = true;\n        }\n      } else {\n        const response = yield call(roleService.create, params);\n        if (response.id && response.id !== '') {\n          success = true;\n        }\n      }\n\n      yield put({\n        type: 'changeSubmitting',\n        payload: false,\n      });\n\n      if (success) {\n        message.success('Saved successfully');\n        yield put({\n          type: 'changeFormVisible',\n          payload: false,\n        });\n        yield put({\n          type: 'fetch',\n        });\n      }\n    },\n    *del({ payload }, { call, put }) {\n      const response = yield call(roleService.del, payload.id);\n      if (response.status === 'OK') {\n        message.success('successfully deleted');\n        yield put({ type: 'fetch' });\n      }\n    },\n    *fetchSelect(_, { call, put }) {\n      const response = yield call(roleService.querySelect);\n      yield put({\n        type: 'saveSelectData',\n        payload: response.list || [],\n      });\n    },\n    *changeStatus({ payload }, { call, put, select }) {\n      let response;\n      if (payload.status === 1) {\n        response = yield call(roleService.enable, payload.id);\n      } else {\n        response = yield call(roleService.disable, payload.id);\n      }\n\n      if (response.status === 'OK') {\n        let msg = 'Successfully activated';\n        if (payload.status === 2) {\n          msg = 'Deactivated successfully';\n        }\n        message.success(msg);\n        const data = yield select(state => state.role.data);\n        const newData = { list: [], pagination: data.pagination };\n\n        for (let i = 0; i < data.list.length; i += 1) {\n          const item = data.list[i];\n          if (item.id === payload.id) {\n            item.status = payload.status;\n          }\n          newData.list.push(item);\n        }\n\n        yield put({\n          type: 'saveData',\n          payload: newData,\n        });\n      }\n    },\n  },\n  reducers: {\n    saveData(state, { payload }) {\n      return { ...state, data: payload };\n    },\n    saveSearch(state, { payload }) {\n      return { ...state, search: payload };\n    },\n    savePagination(state, { payload }) {\n      return { ...state, pagination: payload };\n    },\n    changeFormVisible(state, { payload }) {\n      return { ...state, formVisible: payload };\n    },\n    saveFormTitle(state, { payload }) {\n      return { ...state, formTitle: payload };\n    },\n    saveFormType(state, { payload }) {\n      return { ...state, formType: payload };\n    },\n    saveFormID(state, { payload }) {\n      return { ...state, formID: payload };\n    },\n    saveFormData(state, { payload }) {\n      return { ...state, formData: payload };\n    },\n    changeSubmitting(state, { payload }) {\n      return { ...state, submitting: payload };\n    },\n    saveSelectData(state, { payload }) {\n      return { ...state, selectData: payload };\n    },\n  },\n};\n"]},"metadata":{},"sourceType":"module"}