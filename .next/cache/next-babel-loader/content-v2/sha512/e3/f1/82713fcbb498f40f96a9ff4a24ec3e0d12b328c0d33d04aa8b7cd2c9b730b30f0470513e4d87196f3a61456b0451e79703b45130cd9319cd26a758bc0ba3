{"ast":null,"code":"import _classCallCheck from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { LabelModel } from '@projectstorm/react-diagrams';\nexport var EditableLabelModel = /*#__PURE__*/function (_LabelModel) {\n  _inherits(EditableLabelModel, _LabelModel);\n\n  var _super = _createSuper(EditableLabelModel);\n\n  function EditableLabelModel() {\n    var _this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, EditableLabelModel);\n\n    _this = _super.call(this, _objectSpread(_objectSpread({}, options), {}, {\n      type: 'editable-label'\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"value\", void 0);\n\n    _this.value = options.value || '';\n    return _this;\n  }\n\n  _createClass(EditableLabelModel, [{\n    key: \"serialize\",\n    value: function serialize() {\n      return _objectSpread(_objectSpread({}, _get(_getPrototypeOf(EditableLabelModel.prototype), \"serialize\", this).call(this)), {}, {\n        value: this.value\n      });\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(event) {\n      _get(_getPrototypeOf(EditableLabelModel.prototype), \"deserialize\", this).call(this, event);\n\n      this.value = event.data.value;\n    }\n  }]);\n\n  return EditableLabelModel;\n}(LabelModel);","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Test/EditableLabelModel.ts"],"names":["LabelModel","EditableLabelModel","options","type","value","event","data"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,8BAA3B;AAOA,WAAaC,kBAAb;AAAA;;AAAA;;AAGC,gCAAgD;AAAA;;AAAA,QAApCC,OAAoC,uEAAJ,EAAI;;AAAA;;AAC/C,8DACIA,OADJ;AAECC,MAAAA,IAAI,EAAE;AAFP;;AAD+C;;AAK/C,UAAKC,KAAL,GAAaF,OAAO,CAACE,KAAR,IAAiB,EAA9B;AAL+C;AAM/C;;AATF;AAAA;AAAA,gCAWa;AACX;AAECA,QAAAA,KAAK,EAAE,KAAKA;AAFb;AAIA;AAhBF;AAAA;AAAA,gCAkBaC,KAlBb,EAkBkD;AAChD,0FAAkBA,KAAlB;;AACA,WAAKD,KAAL,GAAaC,KAAK,CAACC,IAAN,CAAWF,KAAxB;AACA;AArBF;;AAAA;AAAA,EAAwCJ,UAAxC","sourcesContent":["import { LabelModel } from '@projectstorm/react-diagrams';\nimport { BaseModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport interface EditableLabelOptions extends BaseModelOptions {\n\tvalue?: string;\n}\n\nexport class EditableLabelModel extends LabelModel {\n\tvalue: string;\n\n\tconstructor(options: EditableLabelOptions = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\ttype: 'editable-label'\n\t\t});\n\t\tthis.value = options.value || '';\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tvalue: this.value\n\t\t};\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>): void {\n\t\tsuper.deserialize(event);\n\t\tthis.value = event.data.value;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}