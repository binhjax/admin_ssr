{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport context from '@/utils/context';\nexport default ((_ref) => {\n  let {\n    code,\n    children\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"code\", \"children\"]);\n\n  const {\n    GlobalContext\n  } = context;\n  return __jsx(GlobalContext.Consumer, null, global => {\n    const {\n      menuPaths\n    } = global;\n\n    if (menuPaths) {\n      const item = menuPaths[window.location.pathname];\n\n      if (item && item.actions) {\n        const {\n          actions\n        } = item;\n\n        for (let i = 0; i < actions.length; i += 1) {\n          if (actions[i].code === code) {\n            return __jsx(_Button, rest, children);\n          }\n        }\n      }\n    }\n\n    return null;\n  });\n});","map":null,"metadata":{},"sourceType":"module"}