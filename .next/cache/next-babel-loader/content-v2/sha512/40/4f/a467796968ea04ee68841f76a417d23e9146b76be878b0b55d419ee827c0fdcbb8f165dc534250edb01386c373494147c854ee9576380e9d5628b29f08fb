{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/alert/style\";\nimport _Alert from \"antd/lib/alert\";\nimport \"antd/lib/typography/style\";\nimport _Typography from \"antd/lib/typography\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react'; // import { connect } from 'dva';\n\nimport WithDva from '../../utils/store';\nimport moment from 'moment';\nimport PageHeaderLayout from '../../layouts/PageHeaderLayout';\nimport styles from './home.less';\n\nconst CodePreview = ({\n  children\n}) => __jsx(\"pre\", {\n  className: styles.pre\n}, __jsx(\"code\", null, __jsx(_Typography.Text, {\n  copyable: true\n}, children))); // @connect(state => ({\n//   global: state.global,\n// }))\n\n\nclass Home extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      currentTime: moment().format('HH:mm:ss')\n    });\n\n    _defineProperty(this, \"getHeaderContent\", () => {\n      const {\n        global: {\n          user\n        }\n      } = this.props;\n      const {\n        role_names: roleNames\n      } = user;\n      const text = [];\n\n      if (roleNames && roleNames.length > 0) {\n        text.push(__jsx(\"span\", {\n          key: \"role\",\n          style: {\n            marginRight: 20\n          }\n        }, `所属角色：${roleNames.join('/')}`));\n      }\n\n      if (text.length > 0) {\n        return text;\n      }\n\n      return null;\n    });\n  }\n\n  static async getInitialProps(props) {\n    // first time run in server side\n    // other times run in client side ( client side init with default props\n    // console.log('get init props', props);\n    const {\n      pathname,\n      query,\n      isServer,\n      store\n    } = props; // dispatch effects to fetch data here\n\n    await props.store.dispatch({\n      type: 'global/init'\n    });\n    return {\n      // dont use store as property name, it will confilct with initial store\n      pathname,\n      query,\n      isServer,\n      dvaStore: store\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.setState({\n        currentTime: moment().format('HH:mm:ss')\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const {\n      global: {\n        user\n      }\n    } = this.props;\n    const {\n      currentTime\n    } = this.state;\n    const breadcrumbList = [{\n      title: 'Homepage'\n    }];\n    return __jsx(PageHeaderLayout, {\n      title: `您好，${user.real_name}，祝您开心每一天！`,\n      breadcrumbList: breadcrumbList,\n      content: this.getHeaderContent(),\n      action: __jsx(\"span\", null, \"\\u5F53\\u524D\\u65F6\\u95F4\\uFF1A\", currentTime)\n    }, __jsx(_Card, null, __jsx(_Alert, {\n      message: \"gin-admin 6.0.0 \\u73B0\\u5DF2\\u53D1\\u5E03\\uFF0C\\u6B22\\u8FCE\\u4F7F\\u7528\\u4E0B\\u8F7D\\u542F\\u52A8\\u4F53\\u9A8C\\u3002\",\n      type: \"success\",\n      showIcon: true,\n      banner: true,\n      style: {\n        margin: -12,\n        marginBottom: 24\n      }\n    }), __jsx(_Typography.Text, {\n      strong: true\n    }, __jsx(\"a\", {\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: \"https://github.com/LyricTian/gin-admin\"\n    }, \"1. \\u4E0B\\u8F7D\\u5E76\\u542F\\u52A8\\u670D\\u52A1\")), __jsx(CodePreview, null, \"git clone https://github.com/LyricTian/gin-admin.git\"), __jsx(CodePreview, null, \"cd gin-admin\"), __jsx(CodePreview, null, \"go run cmd/gin-admin/main.go web -c ./configs/config.toml -m ./configs/model.conf --menu ./configs/menu.yaml\"), __jsx(CodePreview, null, \"\\u542F\\u52A8\\u6210\\u529F\\u4E4B\\u540E\\uFF0C\\u53EF\\u5728\\u6D4F\\u89C8\\u5668\\u4E2D\\u8F93\\u5165\\u5730\\u5740\\u8FDB\\u884C\\u8BBF\\u95EE\\uFF1Ahttp://127.0.0.1:10088/swagger/index.html\"), __jsx(_Typography.Text, {\n      strong: true,\n      style: {\n        marginBottom: 12\n      }\n    }, __jsx(\"a\", {\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: \"https://github.com/LyricTian/gin-admin-react\"\n    }, \"2. \\u4E0B\\u8F7D\\u5E76\\u8FD0\\u884C gin-admin-react\")), __jsx(CodePreview, null, \"git clone https://github.com/gin-admin/gin-admin-react.git\"), __jsx(CodePreview, null, \"cd gin-admin-react\"), __jsx(CodePreview, null, \"yarn\"), __jsx(CodePreview, null, \"yarn start\")));\n  }\n\n}\n\nexport default WithDva(state => {\n  return {\n    global: state.global\n  };\n})(Home); // export default Home;","map":null,"metadata":{},"sourceType":"module"}