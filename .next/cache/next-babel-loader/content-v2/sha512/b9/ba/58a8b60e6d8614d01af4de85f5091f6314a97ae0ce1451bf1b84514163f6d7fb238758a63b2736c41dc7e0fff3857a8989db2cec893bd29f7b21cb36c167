{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/tuanquang/admin_ssr/src/components/Test/EditableLabelWidget.tsx\";\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nlet S;\n\n(function (_S) {\n  const Label = _S.Label = styled.div`\n    user-select: none;\n    pointer-events: auto;\n  `;\n})(S || (S = {})); // now we can render all what we want in the label\n\n\nexport const EditableLabelWidget = props => {\n  const [str, setStr] = React.useState(props.model.value);\n  return /*#__PURE__*/_jsxDEV(S.Label, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      value: str,\n      onChange: event => {\n        const newVal = event.target.value; // update value both in internal component state\n\n        setStr(newVal); // and in model object\n\n        props.model.value = newVal;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Test/EditableLabelWidget.tsx"],"names":["React","styled","Label","div","S","EditableLabelWidget","props","str","setStr","useState","model","value","event","newVal","target"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,OAAOC,MAAP,MAAmB,iBAAnB;;;;AAQS,QAAMC,KAAK,cAAGD,MAAM,CAACE,GAAI;AAClC;AACA;AACA,GAHS;GAFCC,C,KAAAA,C,SAQV;;;AACA,OAAO,MAAMC,mBAAuE,GAAGC,KAAK,IAAI;AAC9F,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBR,KAAK,CAACS,QAAN,CAAeH,KAAK,CAACI,KAAN,CAAYC,KAA3B,CAAtB;AAEA,sBACE,QAAC,CAAD,CAAG,KAAH;AAAA,2BACE;AACE,MAAA,KAAK,EAAEJ,GADT;AAEE,MAAA,QAAQ,EAAEK,KAAK,IAAI;AACjB,cAAMC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAaH,KAA5B,CADiB,CAGjB;;AACAH,QAAAA,MAAM,CAACK,MAAD,CAAN,CAJiB,CAKjB;;AACAP,QAAAA,KAAK,CAACI,KAAN,CAAYC,KAAZ,GAAoBE,MAApB;AACD;AATH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAlBM","sourcesContent":["import * as React from 'react';\n\nimport { EditableLabelModel } from './EditableLabelModel';\nimport styled from '@emotion/styled';\n\nexport interface FlowAliasLabelWidgetProps {\n  model: EditableLabelModel;\n}\n\nnamespace S {\n  // NOTE: this CSS rules allows to interact with elements in label\n  export const Label = styled.div`\n    user-select: none;\n    pointer-events: auto;\n  `;\n}\n\n// now we can render all what we want in the label\nexport const EditableLabelWidget: React.FunctionComponent<FlowAliasLabelWidgetProps> = props => {\n  const [str, setStr] = React.useState(props.model.value);\n\n  return (\n    <S.Label>\n      <input\n        value={str}\n        onChange={event => {\n          const newVal = event.target.value;\n\n          // update value both in internal component state\n          setStr(newVal);\n          // and in model object\n          props.model.value = newVal;\n        }}\n      />\n    </S.Label>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}