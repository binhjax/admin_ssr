{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/tuanquang/admin_ssr/src/components/Test/CustomNodeWidget.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport { PortModelAlignment, PortWidget } from '@projectstorm/react-diagrams';\nimport './index.scss';\nvar styles = {\n  cardHeader: {\n    color: 'white',\n    border: ' 0 solid #e2e8f0',\n    fontWeight: 400,\n    fontSize: '20px',\n    padding: '5px 20px',\n    height: '40px',\n    background: '#316896',\n    marginBottom: '-2px'\n  }\n};\nexport var CustomNodeWidget = /*#__PURE__*/function (_React$Component) {\n  _inherits(CustomNodeWidget, _React$Component);\n\n  var _super = _createSuper(CustomNodeWidget);\n\n  function CustomNodeWidget() {\n    _classCallCheck(this, CustomNodeWidget);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CustomNodeWidget, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          minWidth: this.props.size * 2,\n          minHeight: this.props.size\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.cardHeader,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(PortWidget, {\n          style: {\n            top: this.props.size / 2 - 8,\n            left: -8,\n            position: 'absolute'\n          },\n          port: this.props.node.getPort(PortModelAlignment.LEFT),\n          engine: this.props.engine\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(PortWidget, {\n          style: {\n            top: this.props.size / 2 - 8,\n            left: -8,\n            position: 'absolute'\n          },\n          port: this.props.node.getPort(PortModelAlignment.RIGHT),\n          engine: this.props.engine\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 4\n      }, this);\n    }\n  }]);\n\n  return CustomNodeWidget;\n}(React.Component);","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Test/CustomNodeWidget.tsx"],"names":["React","PortModelAlignment","PortWidget","styles","cardHeader","color","border","fontWeight","fontSize","padding","height","background","marginBottom","CustomNodeWidget","minWidth","props","size","minHeight","top","left","position","node","getPort","LEFT","engine","RIGHT","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAAwBC,kBAAxB,EAA4CC,UAA5C,QAA8D,8BAA9D;AACA,OAAO,cAAP;AAOA,IAAMC,MAAM,GAAG;AACdC,EAAAA,UAAU,EAAE;AACXC,IAAAA,KAAK,EAAE,OADI;AAEXC,IAAAA,MAAM,EAAE,kBAFG;AAGXC,IAAAA,UAAU,EAAE,GAHD;AAIXC,IAAAA,QAAQ,EAAE,MAJC;AAKXC,IAAAA,OAAO,EAAE,UALE;AAMXC,IAAAA,MAAM,EAAE,MANG;AAOXC,IAAAA,UAAU,EAAE,SAPD;AAQXC,IAAAA,YAAY,EAAE;AARH;AADE,CAAf;AAYA,WAAaC,gBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACU;AACR,0BACC;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,IAAX,GAAgB,CAA3B;AAA8BC,UAAAA,SAAS,EAAC,KAAKF,KAAL,CAAWC;AAAnD,SAAZ;AAAA,gCACC;AAAK,UAAA,KAAK,EAAEb,MAAM,CAACC,UAAnB;AAAA,iCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD,eAIC,QAAC,UAAD;AACC,UAAA,KAAK,EAAE;AACNc,YAAAA,GAAG,EAAE,KAAKH,KAAL,CAAWC,IAAX,GAAkB,CAAlB,GAAsB,CADrB;AAENG,YAAAA,IAAI,EAAE,CAAC,CAFD;AAGNC,YAAAA,QAAQ,EAAE;AAHJ,WADR;AAMC,UAAA,IAAI,EAAE,KAAKL,KAAL,CAAWM,IAAX,CAAgBC,OAAhB,CAAwBrB,kBAAkB,CAACsB,IAA3C,CANP;AAOC,UAAA,MAAM,EAAE,KAAKR,KAAL,CAAWS;AAPpB;AAAA;AAAA;AAAA;AAAA,gBAJD,eAaC,QAAC,UAAD;AACC,UAAA,KAAK,EAAE;AACNN,YAAAA,GAAG,EAAE,KAAKH,KAAL,CAAWC,IAAX,GAAkB,CAAlB,GAAsB,CADrB;AAENG,YAAAA,IAAI,EAAE,CAAC,CAFD;AAGNC,YAAAA,QAAQ,EAAE;AAHJ,WADR;AAMC,UAAA,IAAI,EAAE,KAAKL,KAAL,CAAWM,IAAX,CAAgBC,OAAhB,CAAwBrB,kBAAkB,CAACwB,KAA3C,CANP;AAOC,UAAA,MAAM,EAAE,KAAKV,KAAL,CAAWS;AAPpB;AAAA;AAAA;AAAA;AAAA,gBAbD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AAyBA;AA3BF;;AAAA;AAAA,EAAsCxB,KAAK,CAAC0B,SAA5C","sourcesContent":["import * as React from 'react';\nimport { DiamondNodeModel } from './DiamondNodeModel';\nimport { DiagramEngine, PortModelAlignment, PortWidget } from '@projectstorm/react-diagrams';\nimport './index.scss'\nexport interface CustomNodeWidgetProps {\n\tnode: DiamondNodeModel;\n\tengine: DiagramEngine;\n\tsize?: number;\n}\n\nconst styles = {\n\tcardHeader: {\n\t\tcolor: 'white',\n\t\tborder: ' 0 solid #e2e8f0',\n\t\tfontWeight: 400,\n\t\tfontSize: '20px',\n\t\tpadding: '5px 20px',\n\t\theight: '40px',\n\t\tbackground: '#316896',\n\t\tmarginBottom: '-2px',\n\t}\n}\nexport class CustomNodeWidget extends React.Component<CustomNodeWidgetProps> {\n\trender() {\n\t\treturn (\n\t\t\t<div style={{minWidth: this.props.size*2, minHeight:this.props.size}}>\n\t\t\t\t<div style={styles.cardHeader} >\n\t\t\t\t\t<p>Test</p>\n\t\t\t\t</div>\n\t\t\t\t<PortWidget\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttop: this.props.size / 2 - 8,\n\t\t\t\t\t\tleft: -8,\n\t\t\t\t\t\tposition: 'absolute'\n\t\t\t\t\t}}\n\t\t\t\t\tport={this.props.node.getPort(PortModelAlignment.LEFT)}\n\t\t\t\t\tengine={this.props.engine}>\n\t\t\t\t</PortWidget>\n\t\t\t\t<PortWidget\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttop: this.props.size / 2 - 8,\n\t\t\t\t\t\tleft: -8,\n\t\t\t\t\t\tposition: 'absolute'\n\t\t\t\t\t}}\n\t\t\t\t\tport={this.props.node.getPort(PortModelAlignment.RIGHT)}\n\t\t\t\t\tengine={this.props.engine}>\n\t\t\t\t</PortWidget>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}