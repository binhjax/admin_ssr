{"ast":null,"code":"import \"antd/lib/breadcrumb/style\";\nimport _Breadcrumb from \"antd/lib/breadcrumb\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/nguyenthanhbinh/Work/vnshop/admin/src/components/PageHeader/breadcrumb.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent, createElement } from 'react';\nimport pathToRegexp from 'path-to-regexp';\nimport styles from './index.less';\nimport { urlToList } from '../_utils/pathTools';\nexport var getBreadcrumb = function getBreadcrumb(breadcrumbNameMap, url) {\n  var breadcrumb = breadcrumbNameMap[url];\n\n  if (!breadcrumb) {\n    Object.keys(breadcrumbNameMap).forEach(function (item) {\n      if (pathToRegexp(item).test(url)) {\n        breadcrumb = breadcrumbNameMap[item];\n      }\n    });\n  }\n\n  return breadcrumb || {};\n};\n\nvar BreadcrumbView = /*#__PURE__*/function (_PureComponent) {\n  _inherits(BreadcrumbView, _PureComponent);\n\n  var _super = _createSuper(BreadcrumbView);\n\n  function BreadcrumbView() {\n    var _this;\n\n    _classCallCheck(this, BreadcrumbView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      breadcrumb: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getBreadcrumbDom\", function () {\n      var breadcrumb = _this.conversionBreadcrumbList();\n\n      _this.setState({\n        breadcrumb: breadcrumb\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getBreadcrumbProps\", function () {\n      var _this$props = _this.props,\n          routes = _this$props.routes,\n          params = _this$props.params,\n          location = _this$props.location,\n          breadcrumbNameMap = _this$props.breadcrumbNameMap;\n      return {\n        routes: routes,\n        params: params,\n        routerLocation: location,\n        breadcrumbNameMap: breadcrumbNameMap\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"conversionFromProps\", function () {\n      var _this$props2 = _this.props,\n          breadcrumbList = _this$props2.breadcrumbList,\n          breadcrumbSeparator = _this$props2.breadcrumbSeparator,\n          itemRender = _this$props2.itemRender,\n          _this$props2$linkElem = _this$props2.linkElement,\n          linkElement = _this$props2$linkElem === void 0 ? 'a' : _this$props2$linkElem;\n      return __jsx(_Breadcrumb, {\n        className: styles.breadcrumb,\n        separator: breadcrumbSeparator,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, breadcrumbList.map(function (item) {\n        var title = itemRender ? itemRender(item) : item.title;\n        return __jsx(_Breadcrumb.Item, {\n          key: item.title,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }\n        }, item.href ? /*#__PURE__*/createElement(linkElement, _defineProperty({}, linkElement === 'a' ? 'href' : 'to', item.href), title) : title);\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"conversionFromLocation\", function (routerLocation, breadcrumbNameMap) {\n      var _this$props3 = _this.props,\n          breadcrumbSeparator = _this$props3.breadcrumbSeparator,\n          home = _this$props3.home,\n          itemRender = _this$props3.itemRender,\n          _this$props3$linkElem = _this$props3.linkElement,\n          linkElement = _this$props3$linkElem === void 0 ? 'a' : _this$props3$linkElem; // Convert the url to an array\n\n      var pathSnippets = urlToList(routerLocation.pathname); // Loop data mosaic routing\n\n      var extraBreadcrumbItems = pathSnippets.map(function (url, index) {\n        var currentBreadcrumb = getBreadcrumb(breadcrumbNameMap, url);\n\n        if (currentBreadcrumb.inherited) {\n          return null;\n        }\n\n        var isLinkable = index !== pathSnippets.length - 1 && currentBreadcrumb.component;\n        var name = itemRender ? itemRender(currentBreadcrumb) : currentBreadcrumb.name;\n        return currentBreadcrumb.name && !currentBreadcrumb.hideInBreadcrumb ? __jsx(_Breadcrumb.Item, {\n          key: url,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/createElement(isLinkable ? linkElement : 'span', _defineProperty({}, linkElement === 'a' ? 'href' : 'to', url), name)) : null;\n      }); // Add home breadcrumbs to your head\n\n      extraBreadcrumbItems.unshift(__jsx(_Breadcrumb.Item, {\n        key: \"home\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/createElement(linkElement, _defineProperty({}, linkElement === 'a' ? 'href' : 'to', '/'), home || 'Home')));\n      return __jsx(_Breadcrumb, {\n        className: styles.breadcrumb,\n        separator: breadcrumbSeparator,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }\n      }, extraBreadcrumbItems);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"conversionBreadcrumbList\", function () {\n      var _this$props4 = _this.props,\n          breadcrumbList = _this$props4.breadcrumbList,\n          breadcrumbSeparator = _this$props4.breadcrumbSeparator;\n\n      var _this$getBreadcrumbPr = _this.getBreadcrumbProps(),\n          routes = _this$getBreadcrumbPr.routes,\n          params = _this$getBreadcrumbPr.params,\n          routerLocation = _this$getBreadcrumbPr.routerLocation,\n          breadcrumbNameMap = _this$getBreadcrumbPr.breadcrumbNameMap;\n\n      if (breadcrumbList && breadcrumbList.length) {\n        return _this.conversionFromProps();\n      } // 如果传入 routes 和 params 属性\n      // If pass routes and params attributes\n\n\n      if (routes && params) {\n        return __jsx(_Breadcrumb, {\n          className: styles.breadcrumb,\n          routes: routes.filter(function (route) {\n            return route.breadcrumbName;\n          }),\n          params: params,\n          itemRender: _this.itemRender,\n          separator: breadcrumbSeparator,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 9\n          }\n        });\n      } // 根据 location 生成 面包屑\n      // Generate breadcrumbs based on location\n\n\n      if (routerLocation && routerLocation.pathname) {\n        return _this.conversionFromLocation(routerLocation, breadcrumbNameMap);\n      }\n\n      return null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"itemRender\", function (route, params, routes, paths) {\n      var _this$props$linkEleme = _this.props.linkElement,\n          linkElement = _this$props$linkEleme === void 0 ? 'a' : _this$props$linkEleme;\n      var last = routes.indexOf(route) === routes.length - 1;\n      return last || !route.component ? __jsx(\"span\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 7\n        }\n      }, route.breadcrumbName) : /*#__PURE__*/createElement(linkElement, {\n        href: paths.join('/') || '/',\n        to: paths.join('/') || '/'\n      }, route.breadcrumbName);\n    });\n\n    return _this;\n  }\n\n  _createClass(BreadcrumbView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getBreadcrumbDom();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(preProps) {\n      var location = this.props.location;\n\n      if (!location || !preProps.location) {\n        return;\n      }\n\n      var prePathname = preProps.location.pathname;\n\n      if (prePathname !== location.pathname) {\n        this.getBreadcrumbDom();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var breadcrumb = this.state.breadcrumb;\n      return breadcrumb;\n    }\n  }]);\n\n  return BreadcrumbView;\n}(PureComponent);\n\nexport { BreadcrumbView as default };","map":{"version":3,"sources":["/Users/nguyenthanhbinh/Work/vnshop/admin/src/components/PageHeader/breadcrumb.js"],"names":["React","PureComponent","createElement","pathToRegexp","styles","urlToList","getBreadcrumb","breadcrumbNameMap","url","breadcrumb","Object","keys","forEach","item","test","BreadcrumbView","conversionBreadcrumbList","setState","props","routes","params","location","routerLocation","breadcrumbList","breadcrumbSeparator","itemRender","linkElement","map","title","href","home","pathSnippets","pathname","extraBreadcrumbItems","index","currentBreadcrumb","inherited","isLinkable","length","component","name","hideInBreadcrumb","unshift","getBreadcrumbProps","conversionFromProps","filter","route","breadcrumbName","conversionFromLocation","paths","last","indexOf","join","to","getBreadcrumbDom","preProps","prePathname","state"],"mappings":"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","sourcesContent":["import React, { PureComponent, createElement } from 'react';\r\nimport pathToRegexp from 'path-to-regexp';\r\nimport { Breadcrumb } from 'antd';\r\nimport styles from './index.less';\r\nimport { urlToList } from '../_utils/pathTools';\r\n\r\nexport const getBreadcrumb = (breadcrumbNameMap, url) => {\r\n  let breadcrumb = breadcrumbNameMap[url];\r\n  if (!breadcrumb) {\r\n    Object.keys(breadcrumbNameMap).forEach(item => {\r\n      if (pathToRegexp(item).test(url)) {\r\n        breadcrumb = breadcrumbNameMap[item];\r\n      }\r\n    });\r\n  }\r\n  return breadcrumb || {};\r\n};\r\n\r\nexport default class BreadcrumbView extends PureComponent {\r\n  state = {\r\n    breadcrumb: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getBreadcrumbDom();\r\n  }\r\n\r\n  componentDidUpdate(preProps) {\r\n    const { location } = this.props;\r\n    if (!location || !preProps.location) {\r\n      return;\r\n    }\r\n    const prePathname = preProps.location.pathname;\r\n    if (prePathname !== location.pathname) {\r\n      this.getBreadcrumbDom();\r\n    }\r\n  }\r\n\r\n  getBreadcrumbDom = () => {\r\n    const breadcrumb = this.conversionBreadcrumbList();\r\n    this.setState({\r\n      breadcrumb,\r\n    });\r\n  };\r\n\r\n  getBreadcrumbProps = () => {\r\n    const { routes, params, location, breadcrumbNameMap } = this.props;\r\n    return {\r\n      routes,\r\n      params,\r\n      routerLocation: location,\r\n      breadcrumbNameMap,\r\n    };\r\n  };\r\n\r\n  // Generated according to props\r\n  conversionFromProps = () => {\r\n    const { breadcrumbList, breadcrumbSeparator, itemRender, linkElement = 'a' } = this.props;\r\n    return (\r\n      <Breadcrumb className={styles.breadcrumb} separator={breadcrumbSeparator}>\r\n        {breadcrumbList.map(item => {\r\n          const title = itemRender ? itemRender(item) : item.title;\r\n          return (\r\n            <Breadcrumb.Item key={item.title}>\r\n              {item.href\r\n                ? createElement(\r\n                    linkElement,\r\n                    {\r\n                      [linkElement === 'a' ? 'href' : 'to']: item.href,\r\n                    },\r\n                    title\r\n                  )\r\n                : title}\r\n            </Breadcrumb.Item>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    );\r\n  };\r\n\r\n  conversionFromLocation = (routerLocation, breadcrumbNameMap) => {\r\n    const { breadcrumbSeparator, home, itemRender, linkElement = 'a' } = this.props;\r\n    // Convert the url to an array\r\n    const pathSnippets = urlToList(routerLocation.pathname);\r\n    // Loop data mosaic routing\r\n    const extraBreadcrumbItems = pathSnippets.map((url, index) => {\r\n      const currentBreadcrumb = getBreadcrumb(breadcrumbNameMap, url);\r\n      if (currentBreadcrumb.inherited) {\r\n        return null;\r\n      }\r\n      const isLinkable = index !== pathSnippets.length - 1 && currentBreadcrumb.component;\r\n      const name = itemRender ? itemRender(currentBreadcrumb) : currentBreadcrumb.name;\r\n      return currentBreadcrumb.name && !currentBreadcrumb.hideInBreadcrumb ? (\r\n        <Breadcrumb.Item key={url}>\r\n          {createElement(\r\n            isLinkable ? linkElement : 'span',\r\n            { [linkElement === 'a' ? 'href' : 'to']: url },\r\n            name\r\n          )}\r\n        </Breadcrumb.Item>\r\n      ) : null;\r\n    });\r\n    // Add home breadcrumbs to your head\r\n    extraBreadcrumbItems.unshift(\r\n      <Breadcrumb.Item key=\"home\">\r\n        {createElement(\r\n          linkElement,\r\n          {\r\n            [linkElement === 'a' ? 'href' : 'to']: '/',\r\n          },\r\n          home || 'Home'\r\n        )}\r\n      </Breadcrumb.Item>\r\n    );\r\n    return (\r\n      <Breadcrumb className={styles.breadcrumb} separator={breadcrumbSeparator}>\r\n        {extraBreadcrumbItems}\r\n      </Breadcrumb>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * 将参数转化为面包屑\r\n   * Convert parameters into breadcrumbs\r\n   */\r\n  conversionBreadcrumbList = () => {\r\n    const { breadcrumbList, breadcrumbSeparator } = this.props;\r\n    const { routes, params, routerLocation, breadcrumbNameMap } = this.getBreadcrumbProps();\r\n    if (breadcrumbList && breadcrumbList.length) {\r\n      return this.conversionFromProps();\r\n    }\r\n    // 如果传入 routes 和 params 属性\r\n    // If pass routes and params attributes\r\n    if (routes && params) {\r\n      return (\r\n        <Breadcrumb\r\n          className={styles.breadcrumb}\r\n          routes={routes.filter(route => route.breadcrumbName)}\r\n          params={params}\r\n          itemRender={this.itemRender}\r\n          separator={breadcrumbSeparator}\r\n        />\r\n      );\r\n    }\r\n    // 根据 location 生成 面包屑\r\n    // Generate breadcrumbs based on location\r\n    if (routerLocation && routerLocation.pathname) {\r\n      return this.conversionFromLocation(routerLocation, breadcrumbNameMap);\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // 渲染Breadcrumb 子节点\r\n  // Render the Breadcrumb child node\r\n  itemRender = (route, params, routes, paths) => {\r\n    const { linkElement = 'a' } = this.props;\r\n    const last = routes.indexOf(route) === routes.length - 1;\r\n    return last || !route.component ? (\r\n      <span>{route.breadcrumbName}</span>\r\n    ) : (\r\n      createElement(\r\n        linkElement,\r\n        {\r\n          href: paths.join('/') || '/',\r\n          to: paths.join('/') || '/',\r\n        },\r\n        route.breadcrumbName\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { breadcrumb } = this.state;\r\n    return breadcrumb;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}