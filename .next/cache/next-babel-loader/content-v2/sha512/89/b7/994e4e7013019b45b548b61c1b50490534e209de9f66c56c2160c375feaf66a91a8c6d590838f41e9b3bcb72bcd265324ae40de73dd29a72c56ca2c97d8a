{"ast":null,"code":"import \"antd/lib/auto-complete/style\";\nimport _AutoComplete from \"antd/lib/auto-complete\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nvar _jsxFileName = \"/home/tuanquang/admin_ssr/src/components/Diagram/components/PortDetail.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { TYPE } from '../../../const';\nimport { RollbackOutlined } from '@ant-design/icons';\n\nconst PortDetail = props => {\n  const {\n    Option\n  } = _Select;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, props.port !== undefined ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, __jsx(_Button, {\n    style: {\n      border: 'none',\n      paddingLeft: '0'\n    },\n    icon: __jsx(RollbackOutlined, {\n      style: {\n        fontSize: '20'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 19\n      }\n    }),\n    onClick: () => {\n      props.setActive('table');\n      props.setSelectedPort(undefined);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }, props.selectedNode ? props.selectedNode.getOptions().extras : ''), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, \"Name:\", __jsx(_Input, {\n    id: \"name\",\n    value: props.port ? props.port.getOptions().extras.name : '',\n    onChange: props.handleChangePort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Data type:\"), __jsx(_AutoComplete, {\n    style: {\n      width: 200\n    },\n    options: TYPE,\n    filterOption: (inputValue, option) => option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1,\n    value: props.port.getOptions().extras.type,\n    onChange: value => {\n      props.port.getOptions().extras.type = value;\n      props.dispatchPorts();\n    },\n    onSelect: value => {\n      props.port.getOptions().extras.type = value;\n      props.dispatchPorts();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Key:\"), __jsx(_Select, {\n    value: props.port.getOptions().extras.key,\n    style: {\n      width: 200\n    },\n    onSelect: key => {\n      props.port.getOptions().extras.key = key;\n      props.dispatchPorts();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, __jsx(Option, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \"null\"), __jsx(Option, {\n    value: \"PRIMARY KEY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, \"PRIMARY KEY\")))) : '');\n};\n\nexport default PortDetail;","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Diagram/components/PortDetail.tsx"],"names":["React","TYPE","RollbackOutlined","PortDetail","props","Option","port","undefined","border","paddingLeft","fontSize","setActive","setSelectedPort","selectedNode","getOptions","extras","name","handleChangePort","width","inputValue","option","value","toUpperCase","indexOf","type","dispatchPorts","key"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Input, Button, AutoComplete, Select } from 'antd';\nimport { TYPE } from '../../../const';\nimport { RollbackOutlined } from '@ant-design/icons';\nconst PortDetail = (props) => {\n  const { Option } = Select;\n\n  return (\n    <div>\n      {props.port !== undefined ? (\n        <div>\n          <Button\n            style={{ border: 'none', paddingLeft: '0' }}\n            icon={<RollbackOutlined style={{ fontSize: '20' }} />}\n            onClick={() => {\n              props.setActive('table');\n              props.setSelectedPort(undefined);\n            }}\n          >\n            {props.selectedNode ? props.selectedNode.getOptions().extras : ''}\n          </Button>\n          <div>\n            Name:\n            <Input\n              id='name'\n              value={props.port ? props.port.getOptions().extras.name : ''}\n              onChange={props.handleChangePort}\n            />\n          </div>\n          <div>\n            <p>Data type:</p>\n            <AutoComplete\n              style={{ width: 200 }}\n              options={TYPE}\n              filterOption={(inputValue, option) =>\n                option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n              }\n              value={props.port.getOptions().extras.type}\n              onChange={(value) => {\n                props.port.getOptions().extras.type = value;\n                props.dispatchPorts();\n              }}\n              onSelect={(value) => {\n                props.port.getOptions().extras.type = value;\n\n                props.dispatchPorts();\n              }}\n            ></AutoComplete>\n          </div>\n          <div>\n            <p>Key:</p>\n            <Select\n              value={props.port.getOptions().extras.key}\n              style={{ width: 200 }}\n              onSelect={(key) => {\n                props.port.getOptions().extras.key = key;\n                props.dispatchPorts();\n              }}\n            >\n              <Option value=''>null</Option>\n              <Option value='PRIMARY KEY'>PRIMARY KEY</Option>\n            </Select>\n          </div>\n        </div>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\nexport default PortDetail;\n"]},"metadata":{},"sourceType":"module"}