{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { LabelModel } from '@projectstorm/react-diagrams';\nexport class EditableLabelModel extends LabelModel {\n  constructor(options = {}) {\n    super(_objectSpread(_objectSpread({}, options), {}, {\n      type: 'editable-label'\n    }));\n\n    _defineProperty(this, \"value\", void 0);\n\n    this.value = options.value || '';\n  }\n\n  serialize() {\n    return _objectSpread(_objectSpread({}, super.serialize()), {}, {\n      value: this.value\n    });\n  }\n\n  deserialize(event) {\n    super.deserialize(event);\n    this.value = event.data.value;\n  }\n\n}","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Test/EditableLabelModel.ts"],"names":["LabelModel","EditableLabelModel","constructor","options","type","value","serialize","deserialize","event","data"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,8BAA3B;AAOA,OAAO,MAAMC,kBAAN,SAAiCD,UAAjC,CAA4C;AAGlDE,EAAAA,WAAW,CAACC,OAA6B,GAAG,EAAjC,EAAqC;AAC/C,0CACIA,OADJ;AAECC,MAAAA,IAAI,EAAE;AAFP;;AAD+C;;AAK/C,SAAKC,KAAL,GAAaF,OAAO,CAACE,KAAR,IAAiB,EAA9B;AACA;;AAEDC,EAAAA,SAAS,GAAG;AACX,2CACI,MAAMA,SAAN,EADJ;AAECD,MAAAA,KAAK,EAAE,KAAKA;AAFb;AAIA;;AAEDE,EAAAA,WAAW,CAACC,KAAD,EAAsC;AAChD,UAAMD,WAAN,CAAkBC,KAAlB;AACA,SAAKH,KAAL,GAAaG,KAAK,CAACC,IAAN,CAAWJ,KAAxB;AACA;;AArBiD","sourcesContent":["import { LabelModel } from '@projectstorm/react-diagrams';\nimport { BaseModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport interface EditableLabelOptions extends BaseModelOptions {\n\tvalue?: string;\n}\n\nexport class EditableLabelModel extends LabelModel {\n\tvalue: string;\n\n\tconstructor(options: EditableLabelOptions = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\ttype: 'editable-label'\n\t\t});\n\t\tthis.value = options.value || '';\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tvalue: this.value\n\t\t};\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>): void {\n\t\tsuper.deserialize(event);\n\t\tthis.value = event.data.value;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}