{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport _toConsumableArray from \"/Volumes/ExternalData/Work/vnshop/admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Volumes/ExternalData/Work/vnshop/admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/ExternalData/Work/vnshop/admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Volumes/ExternalData/Work/vnshop/admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Volumes/ExternalData/Work/vnshop/admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Volumes/ExternalData/Work/vnshop/admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/ExternalData/Work/vnshop/admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Volumes/ExternalData/Work/vnshop/admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport * as menuService from '@/services/menu';\nimport EditableCell from './EditableCell';\n\nvar RoleMenu = /*#__PURE__*/function (_PureComponent) {\n  _inherits(RoleMenu, _PureComponent);\n\n  var _super = _createSuper(RoleMenu);\n\n  function RoleMenu(props) {\n    var _this;\n\n    _classCallCheck(this, RoleMenu);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"fillData\", function (data) {\n      var newData = _toConsumableArray(data);\n\n      for (var i = 0; i < newData.length; i += 1) {\n        var children = newData[i].children;\n\n        var item = _objectSpread(_objectSpread({}, newData[i]), {}, {\n          hasChild: children && children.length > 0\n        });\n\n        if (item.hasChild) {\n          item.children = _this.fillData(children);\n        }\n\n        newData[i] = item;\n      }\n\n      return newData;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSave\", function (record, dataIndex, values) {\n      var dataSource = _this.state.dataSource;\n\n      var data = _toConsumableArray(dataSource);\n\n      var index = data.findIndex(function (item) {\n        return item.menu_id === record.id;\n      });\n      var item = data[index];\n\n      if (!item) {\n        item = {\n          menu_id: record.id,\n          dataIndex: values\n        };\n      } else {\n        item[dataIndex] = values;\n      }\n\n      data.splice(index, 1, _objectSpread({}, item));\n\n      _this.setState({\n        dataSource: data\n      }, function () {\n        _this.triggerChange(data);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"triggerChange\", function (data) {\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        onChange(data);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"expandAllChild\", function (data) {\n      var child = [];\n\n      for (var i = 0; i < data.length; i += 1) {\n        child.push(data[i]);\n\n        if (data[i].children) {\n          child = [].concat(_toConsumableArray(child), _toConsumableArray(_this.expandAllChild(data[i].children)));\n        }\n      }\n\n      return child;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkAndAdd\", function (data, addData) {\n      var list = _toConsumableArray(data);\n\n      for (var i = 0; i < addData.length; i += 1) {\n        var exists = false;\n\n        for (var j = 0; j < list.length; j += 1) {\n          if (list[j].menu_id === addData[i].id) {\n            exists = true;\n            break;\n          }\n        }\n\n        if (!exists) {\n          var item = {\n            menu_id: addData[i].id,\n            actions: addData[i].actions ? addData[i].actions.map(function (v) {\n              return v.id;\n            }) : []\n          };\n          list.push(item);\n        }\n      }\n\n      return list;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"cancelSelected\", function (data, selectedRows) {\n      var list = [];\n\n      for (var i = 0; i < data.length; i += 1) {\n        var exists = false;\n\n        for (var j = 0; j < selectedRows.length; j += 1) {\n          if (data[i].menu_id === selectedRows[j].id) {\n            exists = true;\n            break;\n          }\n        }\n\n        if (!exists) {\n          list.push(data[i]);\n        }\n      }\n\n      return list;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelectedRow\", function (record, selected) {\n      var selectedRows = [record];\n\n      if (record.children) {\n        selectedRows = [].concat(_toConsumableArray(selectedRows), _toConsumableArray(_this.expandAllChild(record.children)));\n      }\n\n      var dataSource = _this.state.dataSource;\n      var list = [];\n\n      if (selected) {\n        list = _this.checkAndAdd(dataSource, selectedRows);\n      } else {\n        list = _this.cancelSelected(dataSource, selectedRows);\n      }\n\n      _this.setState({\n        dataSource: list\n      }, function () {\n        _this.triggerChange(list);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelectAll\", function (selected, selectRows) {\n      var list = [];\n\n      if (selected) {\n        list = selectRows.map(function (vv) {\n          var item = {\n            menu_id: vv.id,\n            actions: vv.actions ? vv.actions.map(function (v) {\n              return v.id;\n            }) : []\n          };\n          return item;\n        });\n      }\n\n      _this.setState({\n        dataSource: list\n      }, function () {\n        _this.triggerChange(list);\n      });\n    });\n\n    _this.columns = [{\n      title: 'Menu name',\n      dataIndex: 'name',\n      width: '35%'\n    }, {\n      title: 'Action permission',\n      dataIndex: 'actions',\n      editable: true\n    }];\n    _this.state = {\n      menuData: [],\n      dataSource: props.value || []\n    };\n    return _this;\n  }\n\n  _createClass(RoleMenu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      menuService.queryTree().then(function (data) {\n        var list = data.list || [];\n\n        _this2.setState({\n          menuData: _this2.fillData(list)\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          dataSource = _this$state.dataSource,\n          menuData = _this$state.menuData;\n      var components = {\n        body: {\n          cell: EditableCell\n        }\n      };\n      var columns = this.columns.map(function (col) {\n        if (!col.editable) {\n          return col;\n        }\n\n        return _objectSpread(_objectSpread({}, col), {}, {\n          onCell: function onCell(record) {\n            return {\n              record: record,\n              data: dataSource,\n              dataIndex: col.dataIndex,\n              handleSave: _this3.handleSave\n            };\n          }\n        });\n      });\n      return menuData.length > 0 && __jsx(_Table, {\n        bordered: true,\n        defaultExpandAllRows: true,\n        rowSelection: {\n          selectedRowKeys: dataSource.map(function (v) {\n            return v.menu_id;\n          }),\n          onSelect: this.handleSelectedRow,\n          onSelectAll: this.handleSelectAll\n        },\n        rowKey: function rowKey(record) {\n          return record.id;\n        },\n        components: components,\n        dataSource: menuData,\n        columns: columns,\n        pagination: false\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, state) {\n      if ('value' in nextProps) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          dataSource: nextProps.value || []\n        });\n      }\n\n      return state;\n    }\n  }]);\n\n  return RoleMenu;\n}(PureComponent);\n\nexport { RoleMenu as default };","map":null,"metadata":{},"sourceType":"module"}