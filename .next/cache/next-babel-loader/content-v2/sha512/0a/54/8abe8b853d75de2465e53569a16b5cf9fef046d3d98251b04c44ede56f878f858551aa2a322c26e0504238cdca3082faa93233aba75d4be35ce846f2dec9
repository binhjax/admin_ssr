{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/typography/style\";\nimport _Typography from \"antd/lib/typography\";\nvar _jsxFileName = \"/Volumes/ExternalData/Work/vnshop/admin/src/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport WithDva from '../utils/store';\nimport moment from 'moment';\nimport PageHeaderLayout from '../layouts/PageHeaderLayout';\nimport styles from './index.less';\n\nconst CodePreview = ({\n  children\n}) => __jsx(\"pre\", {\n  className: styles.pre,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}, __jsx(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, __jsx(_Typography.Text, {\n  copyable: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }\n}, children)));\n\nclass Home extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      currentTime: moment().format('HH:mm:ss')\n    });\n\n    _defineProperty(this, \"getHeaderContent\", () => {\n      const {\n        global: {\n          user\n        }\n      } = this.props;\n      const {\n        role_names: roleNames\n      } = user;\n      const text = [];\n\n      if (roleNames && roleNames.length > 0) {\n        text.push(__jsx(\"span\", {\n          key: \"role\",\n          style: {\n            marginRight: 20\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 9\n          }\n        }, `所属角色：${roleNames.join('/')}`));\n      }\n\n      if (text.length > 0) {\n        return text;\n      }\n\n      return null;\n    });\n  }\n\n  static async getInitialProps(props) {\n    // first time run in server side\n    // other times run in client side ( client side init with default props\n    // console.log('get init props', props);\n    const {\n      pathname,\n      query,\n      isServer,\n      store\n    } = props; // dispatch effects to fetch data here\n\n    await props.store.dispatch({\n      type: 'global/init'\n    });\n    return {\n      // dont use store as property name, it will confilct with initial store\n      pathname,\n      query,\n      isServer,\n      dvaStore: store\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.setState({\n        currentTime: moment().format('HH:mm:ss')\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const {\n      global: {\n        user\n      }\n    } = this.props;\n    const {\n      currentTime\n    } = this.state;\n    const breadcrumbList = [{\n      title: 'Homepage'\n    }];\n    return __jsx(PageHeaderLayout, {\n      title: `Hello，${user.real_name}，I wish you happy everyday！`,\n      breadcrumbList: breadcrumbList,\n      content: this.getHeaderContent(),\n      action: __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, \"Current Time\\uFF1A\", currentTime),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, __jsx(_Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default WithDva(state => {\n  return {\n    global: state.global\n  };\n})(Home);","map":{"version":3,"sources":["/Volumes/ExternalData/Work/vnshop/admin/src/pages/index.js"],"names":["React","PureComponent","WithDva","moment","PageHeaderLayout","styles","CodePreview","children","pre","Home","currentTime","format","global","user","props","role_names","roleNames","text","length","push","marginRight","join","getInitialProps","pathname","query","isServer","store","dispatch","type","dvaStore","componentDidMount","interval","setInterval","setState","componentWillUnmount","clearInterval","render","state","breadcrumbList","title","real_name","getHeaderContent"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport WithDva from '../utils/store';\n\nimport moment from 'moment';\nimport { Typography, Card, Alert } from 'antd';\nimport PageHeaderLayout from '../layouts/PageHeaderLayout';\nimport styles from './index.less';\n\nconst CodePreview = ({ children }) => (\n  <pre className={styles.pre}>\n    <code>\n      <Typography.Text copyable>{children}</Typography.Text>\n    </code>\n  </pre>\n);\n\nclass Home extends PureComponent {\n  static async getInitialProps(props) {\n    // first time run in server side\n    // other times run in client side ( client side init with default props\n    // console.log('get init props', props);\n    const { pathname, query, isServer, store } = props;\n    // dispatch effects to fetch data here\n    await props.store.dispatch({ type: 'global/init' });\n    return {\n      // dont use store as property name, it will confilct with initial store\n      pathname,\n      query,\n      isServer,\n      dvaStore: store,\n    };\n  }\n\n  state = {\n    currentTime: moment().format('HH:mm:ss'),\n  };\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.setState({ currentTime: moment().format('HH:mm:ss') });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getHeaderContent = () => {\n    const {\n      global: { user },\n    } = this.props;\n\n    const { role_names: roleNames } = user;\n\n    const text = [];\n    if (roleNames && roleNames.length > 0) {\n      text.push(\n        <span key=\"role\" style={{ marginRight: 20 }}>{`所属角色：${roleNames.join('/')}`}</span>\n      );\n    }\n\n    if (text.length > 0) {\n      return text;\n    }\n    return null;\n  };\n\n  render() {\n    const {\n      global: { user },\n    } = this.props;\n\n    const { currentTime } = this.state;\n\n    const breadcrumbList = [{ title: 'Homepage' }];\n\n    return (\n      <PageHeaderLayout\n        title={`Hello，${user.real_name}，I wish you happy everyday！`}\n        breadcrumbList={breadcrumbList}\n        content={this.getHeaderContent()}\n        action={<span>Current Time：{currentTime}</span>}\n      >\n        <Card></Card>\n      </PageHeaderLayout>\n    );\n  }\n}\nexport default WithDva(state => {\n  return { global: state.global };\n})(Home);\n"]},"metadata":{},"sourceType":"module"}