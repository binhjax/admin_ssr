{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tuanquang/admin_ssr/src/components/Editor/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-noconflict/mode-mysql';\nimport 'ace-builds/src-noconflict/theme-monokai';\n\nvar Editor = function Editor(props) {\n  _s();\n\n  var _useState = useState(''),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var testData = \"//// -- LEVEL 1\\n  //// -- Tables and References\\n  \\n  // Creating tables\\n  Table users as U {\\n    id int [pk, increment] // auto-increment\\n    full_name varchar\\n    created_at timestamp\\n    country_code int\\n    \\n  }\\n  \\n  Table countries {\\n    code int [pk]\\n    name varchar\\n    continent_name varchar\\n   }\\n  \\n  // Creating references\\n  // You can also define relaionship separately\\n  // > many-to-one; < one-to-many; - one-to-one\\n  Ref: U.country_code > countries.code  \\n  Ref: merchants.country_code > countries.code\\n  \\n  //----------------------------------------------//\\n  \\n  //// -- LEVEL 2\\n  //// -- Adding column settings\\n  \\n  Table order_items {\\n    order_id int [ref: > orders.id] // inline relationship (many-to-one)\\n    product_id int\\n    quantity int [default: 1] // default value\\n  }\\n  \\n  Ref: order_items. > products.id\\n  \\n  Table orders {\\n    id int [pk] // primary key\\n    user_id int [not null, unique]\\n    status varchar\\n    created_at varchar [note: 'When order created'] // add column note\\n  }\\n  \\n  //----------------------------------------------//\\n  \\n  //// -- Level 3 \\n  //// -- Enum, Indexes\\n  \\n  // Enum for 'products' table below\\n  Enum products_status {\\n    out_of_stock\\n    in_stock\\n    running_low [note: 'less than 20'] // add column note\\n  }\\n  \\n  // Indexes: You can define a single or multi-column index \\n  Table products {\\n    id int [pk]\\n    name varchar\\n    merchant_id int [not null]\\n    price int\\n    status products_status\\n    \\n    Indexes {\\n      (merchant_id, status) [name:'product_status']\\n      id [unique]\\n    }\\n  }\\n  \\n  Table merchants {\\n    id int\\n    country_code int\\n    merchant_name varchar\\n    \\n    \\\"created at\\\" varchar\\n    admin_id int [ref: > U.id]\\n    Indexes {\\n      (id, country_code) [pk]\\n    }\\n  }\\n  \\n  Table merchant_periods {\\n    id int [pk]\\n    merchant_id int\\n    country_code int\\n    start_date datetime\\n    end_date datetime\\n  }\\n  \\n  Ref: products.merchant_id > merchants.id // many-to-one\\n  //composite foreign key\\n  Ref: merchant_periods.(merchant_id, country_code) > merchants.(id, country_code)\\n  \";\n  useEffect(function () {\n    window.addEventListener('message', function (event) {\n      console.log(event);\n\n      if (event) {\n        console.log(event);\n        setData(localStorage.getItem('json-diagram'));\n        console.log(localStorage.getItem('json-diagram'));\n        console.log(data);\n      }\n    }, false);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AceEditor, {\n      placeholder: \"Placeholder Text\",\n      mode: \"mysql\",\n      theme: \"monokai\",\n      name: \"blah2\",\n      width: \"100%\",\n      height: \"100%\" //   onLoad={this.onLoad}\n      //   onChange={this.onChange}\n      ,\n      fontSize: 14,\n      showPrintMargin: true,\n      showGutter: true,\n      highlightActiveLine: true,\n      value: testData,\n      setOptions: {\n        enableBasicAutocompletion: true,\n        enableLiveAutocompletion: true,\n        enableSnippets: true,\n        showLineNumbers: true,\n        tabSize: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Editor, \"VZqd8eS65aqgHhr94QvD8B0VC/4=\");\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Editor/index.js"],"names":["React","useEffect","useState","AceEditor","Editor","props","data","setData","testData","window","addEventListener","event","console","log","localStorage","getItem","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,OAAO,sCAAP;AACA,OAAO,yCAAP;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AAAA;;AAAA,kBACEH,QAAQ,CAAC,EAAD,CADV;AAAA,MACfI,IADe;AAAA,MACTC,OADS;;AAEtB,MAAMC,QAAQ,mnEAAd;AA8FAP,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,MAAM,CAACC,gBAAP,CACE,SADF,EAEE,UAAAC,KAAK,EAAI;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AAEA,UAAIA,KAAJ,EAAW;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEAJ,QAAAA,OAAO,CAACO,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAD,CAAP;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAZ;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACD;AACF,KAZH,EAaE,KAbF;AAeD,GAhBQ,CAAT;AAkBA,sBACE;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,WAAW,EAAC,kBADd;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,KAAK,EAAC,MALR;AAME,MAAA,MAAM,EAAC,MANT,CAOE;AACA;AARF;AASE,MAAA,QAAQ,EAAE,EATZ;AAUE,MAAA,eAAe,EAAE,IAVnB;AAWE,MAAA,UAAU,EAAE,IAXd;AAYE,MAAA,mBAAmB,EAAE,IAZvB;AAaE,MAAA,KAAK,EAAEE,QAbT;AAcE,MAAA,UAAU,EAAE;AACVQ,QAAAA,yBAAyB,EAAE,IADjB;AAEVC,QAAAA,wBAAwB,EAAE,IAFhB;AAGVC,QAAAA,cAAc,EAAE,IAHN;AAIVC,QAAAA,eAAe,EAAE,IAJP;AAKVC,QAAAA,OAAO,EAAE;AALC;AAdd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AA0BD,CA5ID;;GAAMhB,M;;KAAAA,M;AA6IN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport AceEditor from 'react-ace';\n\nimport 'ace-builds/src-noconflict/mode-mysql';\nimport 'ace-builds/src-noconflict/theme-monokai';\n\nconst Editor = props => {\n  const [data, setData] = useState('');\n  const testData = `//// -- LEVEL 1\n  //// -- Tables and References\n  \n  // Creating tables\n  Table users as U {\n    id int [pk, increment] // auto-increment\n    full_name varchar\n    created_at timestamp\n    country_code int\n    \n  }\n  \n  Table countries {\n    code int [pk]\n    name varchar\n    continent_name varchar\n   }\n  \n  // Creating references\n  // You can also define relaionship separately\n  // > many-to-one; < one-to-many; - one-to-one\n  Ref: U.country_code > countries.code  \n  Ref: merchants.country_code > countries.code\n  \n  //----------------------------------------------//\n  \n  //// -- LEVEL 2\n  //// -- Adding column settings\n  \n  Table order_items {\n    order_id int [ref: > orders.id] // inline relationship (many-to-one)\n    product_id int\n    quantity int [default: 1] // default value\n  }\n  \n  Ref: order_items. > products.id\n  \n  Table orders {\n    id int [pk] // primary key\n    user_id int [not null, unique]\n    status varchar\n    created_at varchar [note: 'When order created'] // add column note\n  }\n  \n  //----------------------------------------------//\n  \n  //// -- Level 3 \n  //// -- Enum, Indexes\n  \n  // Enum for 'products' table below\n  Enum products_status {\n    out_of_stock\n    in_stock\n    running_low [note: 'less than 20'] // add column note\n  }\n  \n  // Indexes: You can define a single or multi-column index \n  Table products {\n    id int [pk]\n    name varchar\n    merchant_id int [not null]\n    price int\n    status products_status\n    \n    Indexes {\n      (merchant_id, status) [name:'product_status']\n      id [unique]\n    }\n  }\n  \n  Table merchants {\n    id int\n    country_code int\n    merchant_name varchar\n    \n    \"created at\" varchar\n    admin_id int [ref: > U.id]\n    Indexes {\n      (id, country_code) [pk]\n    }\n  }\n  \n  Table merchant_periods {\n    id int [pk]\n    merchant_id int\n    country_code int\n    start_date datetime\n    end_date datetime\n  }\n  \n  Ref: products.merchant_id > merchants.id // many-to-one\n  //composite foreign key\n  Ref: merchant_periods.(merchant_id, country_code) > merchants.(id, country_code)\n  `;\n  useEffect(() => {\n    window.addEventListener(\n      'message',\n      event => {\n        console.log(event);\n\n        if (event) {\n          console.log(event);\n\n          setData(localStorage.getItem('json-diagram'));\n          console.log(localStorage.getItem('json-diagram'));\n          console.log(data);\n        }\n      },\n      false\n    );\n  });\n\n  return (\n    <div>\n      <AceEditor\n        placeholder=\"Placeholder Text\"\n        mode=\"mysql\"\n        theme=\"monokai\"\n        name=\"blah2\"\n        width=\"100%\"\n        height=\"100%\"\n        //   onLoad={this.onLoad}\n        //   onChange={this.onChange}\n        fontSize={14}\n        showPrintMargin={true}\n        showGutter={true}\n        highlightActiveLine={true}\n        value={testData}\n        setOptions={{\n          enableBasicAutocompletion: true,\n          enableLiveAutocompletion: true,\n          enableSnippets: true,\n          showLineNumbers: true,\n          tabSize: 2,\n        }}\n      />\n    </div>\n  );\n};\nexport default Editor;\n"]},"metadata":{},"sourceType":"module"}