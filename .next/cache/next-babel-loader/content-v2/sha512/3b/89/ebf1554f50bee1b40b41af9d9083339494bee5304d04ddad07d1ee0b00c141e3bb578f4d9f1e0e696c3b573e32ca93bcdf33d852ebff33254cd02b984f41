{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/typography/style\";\nimport _Typography from \"antd/lib/typography\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport WithDva from '../utils/store';\nimport moment from 'moment';\nimport PageHeaderLayout from '../layouts/PageHeaderLayout';\nimport styles from './index.less';\n\nconst CodePreview = ({\n  children\n}) => __jsx(\"pre\", {\n  className: styles.pre\n}, __jsx(\"code\", null, __jsx(_Typography.Text, {\n  copyable: true\n}, children)));\n\nclass Home extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      currentTime: moment().format('HH:mm:ss')\n    });\n\n    _defineProperty(this, \"getHeaderContent\", () => {\n      const {\n        global: {\n          user\n        }\n      } = this.props;\n      const {\n        role_names: roleNames\n      } = user;\n      const text = [];\n\n      if (roleNames && roleNames.length > 0) {\n        text.push(__jsx(\"span\", {\n          key: \"role\",\n          style: {\n            marginRight: 20\n          }\n        }, `所属角色：${roleNames.join('/')}`));\n      }\n\n      if (text.length > 0) {\n        return text;\n      }\n\n      return null;\n    });\n  }\n\n  static async getInitialProps(props) {\n    // first time run in server side\n    // other times run in client side ( client side init with default props\n    // console.log('get init props', props);\n    const {\n      pathname,\n      query,\n      isServer,\n      store\n    } = props; // dispatch effects to fetch data here\n\n    await props.store.dispatch({\n      type: 'global/init'\n    });\n    return {\n      // dont use store as property name, it will confilct with initial store\n      pathname,\n      query,\n      isServer,\n      dvaStore: store\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.setState({\n        currentTime: moment().format('HH:mm:ss')\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const {\n      global: {\n        user\n      }\n    } = this.props;\n    const {\n      currentTime\n    } = this.state;\n    const breadcrumbList = [{\n      title: 'Homepage'\n    }];\n    return __jsx(PageHeaderLayout, {\n      title: `Hello，${user.real_name}，I wish you happy everyday！`,\n      breadcrumbList: breadcrumbList,\n      content: this.getHeaderContent(),\n      action: __jsx(\"span\", null, \"Current Time\\uFF1A\", currentTime)\n    }, __jsx(_Card, null));\n  }\n\n}\n\nexport default WithDva(state => {\n  return {\n    global: state.global\n  };\n})(Home);","map":null,"metadata":{},"sourceType":"module"}