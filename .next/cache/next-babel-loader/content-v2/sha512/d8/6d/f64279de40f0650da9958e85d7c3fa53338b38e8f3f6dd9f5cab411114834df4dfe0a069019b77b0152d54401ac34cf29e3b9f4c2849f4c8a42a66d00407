{"ast":null,"code":"import \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as restaurantService from '@/services/restaurant';\nexport default {\n  namespace: 'restaurant',\n  state: {\n    search: {},\n    pagination: {},\n    data: {\n      list: [],\n      pagination: {}\n    },\n    submitting: false,\n    formType: '',\n    formTitle: '',\n    formID: '',\n    formVisible: false,\n    formData: {},\n    treeData: [],\n    expandedKeys: []\n  },\n  effects: {\n    *fetch({\n      search,\n      pagination\n    }, {\n      call,\n      put,\n      select\n    }) {\n      console.log(\"restarant.model.fetch: is triggered\");\n      let params = {};\n\n      if (search) {\n        params = _objectSpread(_objectSpread({}, params), search);\n        yield put({\n          type: 'saveSearch',\n          payload: search\n        });\n      } else {\n        const s = yield select(state => state.menu.search);\n\n        if (s) {\n          params = _objectSpread(_objectSpread({}, params), s);\n        }\n      }\n\n      if (pagination) {\n        params = _objectSpread(_objectSpread({}, params), pagination);\n        yield put({\n          type: 'savePagination',\n          payload: pagination\n        });\n      } else {\n        const p = yield select(state => state.menu.pagination);\n\n        if (p) {\n          params = _objectSpread(_objectSpread({}, params), p);\n        }\n      }\n\n      const response = yield call(restaurantService.query, params);\n      console.log(\"model.fetch: return value, \", response); //binhnt edit\n\n      var data = {\n        list: response,\n        pagination: 0\n      };\n      yield put({\n        type: 'saveData',\n        payload: data\n      });\n    },\n\n    *loadForm({\n      payload\n    }, {\n      put,\n      select\n    }) {\n      yield put({\n        type: 'changeFormVisible',\n        payload: true\n      });\n      yield [put({\n        type: 'saveFormType',\n        payload: payload.type\n      }), put({\n        type: 'saveFormTitle',\n        payload: 'New menu'\n      }), put({\n        type: 'saveFormID',\n        payload: ''\n      }), put({\n        type: 'saveFormData',\n        payload: {}\n      }), put({\n        type: 'fetchTree'\n      })];\n\n      if (payload.type === 'E') {\n        yield [put({\n          type: 'saveFormTitle',\n          payload: 'Edit menu'\n        }), put({\n          type: 'saveFormID',\n          payload: payload.id\n        }), put({\n          type: 'fetchForm',\n          payload: {\n            id: payload.id\n          }\n        })];\n      } else {\n        const search = yield select(state => state.menu.search);\n        yield put({\n          type: 'saveFormData',\n          payload: {\n            parent_id: search.parentID ? search.parentID : ''\n          }\n        });\n      }\n    },\n\n    *fetchForm({\n      payload\n    }, {\n      call,\n      put\n    }) {\n      const response = yield call(restaurantService.get, payload.id);\n      yield put({\n        type: 'saveFormData',\n        payload: response\n      });\n    },\n\n    *submit({\n      payload\n    }, {\n      call,\n      put,\n      select\n    }) {\n      yield put({\n        type: 'changeSubmitting',\n        payload: true\n      });\n\n      const params = _objectSpread({}, payload);\n\n      const formType = yield select(state => state.menu.formType);\n      let success = false;\n\n      if (formType === 'E') {\n        const id = yield select(state => state.menu.formID);\n        const response = yield call(restaurantService.update, id, params);\n\n        if (response.status === 'OK') {\n          success = true;\n        }\n      } else {\n        const response = yield call(restaurantService.create, params);\n\n        if (response.id && response.id !== '') {\n          success = true;\n        }\n      }\n\n      yield put({\n        type: 'changeSubmitting',\n        payload: false\n      });\n\n      if (success) {\n        _message.success('Saved successfully');\n\n        yield put({\n          type: 'changeFormVisible',\n          payload: false\n        });\n        yield put({\n          type: 'fetchTree'\n        });\n        yield put({\n          type: 'fetch'\n        });\n      }\n    },\n\n    *del({\n      payload\n    }, {\n      call,\n      put\n    }) {\n      const response = yield call(restaurantService.del, payload.id);\n\n      if (response.status === 'OK') {\n        _message.success('successfully deleted');\n\n        yield put({\n          type: 'fetchTree'\n        });\n        yield put({\n          type: 'fetch'\n        });\n      }\n    },\n\n    *fetchTree({\n      payload\n    }, {\n      call,\n      put\n    }) {\n      let params = {};\n\n      if (payload) {\n        params = _objectSpread(_objectSpread({}, params), payload);\n      }\n\n      const response = yield call(restaurantService.queryTree, params);\n      yield put({\n        type: 'saveTreeData',\n        payload: response.list || []\n      });\n    },\n\n    *changeStatus({\n      payload\n    }, {\n      call,\n      put,\n      select\n    }) {\n      let response;\n\n      if (payload.status === 1) {\n        response = yield call(restaurantService.enable, payload.id);\n      } else {\n        response = yield call(restaurantService.disable, payload.id);\n      }\n\n      if (response.status === 'OK') {\n        let msg = 'Successfully activated';\n\n        if (payload.status === 2) {\n          msg = 'Deactivated successfully';\n        }\n\n        _message.success(msg);\n\n        const data = yield select(state => state.menu.data);\n        const newData = {\n          list: [],\n          pagination: data.pagination\n        };\n\n        for (let i = 0; i < data.list.length; i += 1) {\n          const item = data.list[i];\n\n          if (item.id === payload.id) {\n            item.status = payload.status;\n          }\n\n          newData.list.push(item);\n        }\n\n        yield put({\n          type: 'saveData',\n          payload: newData\n        });\n      }\n    }\n\n  },\n  reducers: {\n    saveData(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: payload\n      });\n    },\n\n    saveSearch(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        search: payload\n      });\n    },\n\n    savePagination(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pagination: payload\n      });\n    },\n\n    changeFormVisible(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formVisible: payload\n      });\n    },\n\n    saveFormType(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formType: payload\n      });\n    },\n\n    saveFormTitle(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formTitle: payload\n      });\n    },\n\n    saveFormID(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formID: payload\n      });\n    },\n\n    saveFormData(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formData: payload\n      });\n    },\n\n    changeSubmitting(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        submitting: payload\n      });\n    },\n\n    saveTreeData(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        treeData: payload\n      });\n    },\n\n    saveExpandedKeys(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        expandedKeys: payload\n      });\n    }\n\n  }\n};","map":{"version":3,"sources":["/Users/nguyenthanhbinh/Work/vnshop/admin/src/models/restaurant.js"],"names":["restaurantService","namespace","state","search","pagination","data","list","submitting","formType","formTitle","formID","formVisible","formData","treeData","expandedKeys","effects","fetch","call","put","select","console","log","params","type","payload","s","menu","p","response","query","loadForm","id","parent_id","parentID","fetchForm","get","submit","success","update","status","create","del","fetchTree","queryTree","changeStatus","enable","disable","msg","newData","i","length","item","push","reducers","saveData","saveSearch","savePagination","changeFormVisible","saveFormType","saveFormTitle","saveFormID","saveFormData","changeSubmitting","saveTreeData","saveExpandedKeys"],"mappings":"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","sourcesContent":["import { message } from 'antd';\r\nimport * as restaurantService from '@/services/restaurant';\r\n\r\nexport default {\r\n  namespace: 'restaurant',\r\n  state: {\r\n    search: {},\r\n    pagination: {},\r\n    data: {\r\n      list: [],\r\n      pagination: {},\r\n    },\r\n    submitting: false,\r\n    formType: '',\r\n    formTitle: '',\r\n    formID: '',\r\n    formVisible: false,\r\n    formData: {},\r\n    treeData: [],\r\n    expandedKeys: [],\r\n  },\r\n  effects: {\r\n    *fetch({ search, pagination }, { call, put, select }) {\r\n      console.log(\"restarant.model.fetch: is triggered\")\r\n      let params = {};\r\n\r\n      if (search) {\r\n        params = { ...params, ...search };\r\n        yield put({\r\n          type: 'saveSearch',\r\n          payload: search,\r\n        });\r\n      } else {\r\n        const s = yield select(state => state.menu.search);\r\n        if (s) {\r\n          params = { ...params, ...s };\r\n        }\r\n      }\r\n\r\n      if (pagination) {\r\n        params = { ...params, ...pagination };\r\n        yield put({\r\n          type: 'savePagination',\r\n          payload: pagination,\r\n        });\r\n      } else {\r\n        const p = yield select(state => state.menu.pagination);\r\n        if (p) {\r\n          params = { ...params, ...p };\r\n        }\r\n      }\r\n      const response = yield call(restaurantService.query, params);\r\n      console.log(\"model.fetch: return value, \", response)\r\n\r\n      //binhnt edit\r\n      var data = {\r\n        list: response,\r\n        pagination: 0,\r\n      }\r\n      yield put({\r\n        type: 'saveData',\r\n        payload: data,\r\n      });\r\n    },\r\n    *loadForm({ payload }, { put, select }) {\r\n      yield put({\r\n        type: 'changeFormVisible',\r\n        payload: true,\r\n      });\r\n\r\n      yield [\r\n        put({\r\n          type: 'saveFormType',\r\n          payload: payload.type,\r\n        }),\r\n        put({\r\n          type: 'saveFormTitle',\r\n          payload: 'New menu',\r\n        }),\r\n        put({\r\n          type: 'saveFormID',\r\n          payload: '',\r\n        }),\r\n        put({\r\n          type: 'saveFormData',\r\n          payload: {},\r\n        }),\r\n        put({ type: 'fetchTree' }),\r\n      ];\r\n\r\n      if (payload.type === 'E') {\r\n        yield [\r\n          put({\r\n            type: 'saveFormTitle',\r\n            payload: 'Edit menu',\r\n          }),\r\n          put({\r\n            type: 'saveFormID',\r\n            payload: payload.id,\r\n          }),\r\n          put({\r\n            type: 'fetchForm',\r\n            payload: { id: payload.id },\r\n          }),\r\n        ];\r\n      } else {\r\n        const search = yield select(state => state.menu.search);\r\n        yield put({\r\n          type: 'saveFormData',\r\n          payload: { parent_id: search.parentID ? search.parentID : '' },\r\n        });\r\n      }\r\n    },\r\n    *fetchForm({ payload }, { call, put }) {\r\n      const response = yield call(restaurantService.get, payload.id);\r\n      yield put({\r\n        type: 'saveFormData',\r\n        payload: response,\r\n      });\r\n    },\r\n    *submit({ payload }, { call, put, select }) {\r\n      yield put({\r\n        type: 'changeSubmitting',\r\n        payload: true,\r\n      });\r\n\r\n      const params = { ...payload };\r\n      const formType = yield select(state => state.menu.formType);\r\n      let success = false;\r\n      if (formType === 'E') {\r\n        const id = yield select(state => state.menu.formID);\r\n        const response = yield call(restaurantService.update, id, params);\r\n        if (response.status === 'OK') {\r\n          success = true;\r\n        }\r\n      } else {\r\n        const response = yield call(restaurantService.create, params);\r\n        if (response.id && response.id !== '') {\r\n          success = true;\r\n        }\r\n      }\r\n\r\n      yield put({\r\n        type: 'changeSubmitting',\r\n        payload: false,\r\n      });\r\n\r\n      if (success) {\r\n        message.success('Saved successfully');\r\n        yield put({\r\n          type: 'changeFormVisible',\r\n          payload: false,\r\n        });\r\n\r\n        yield put({ type: 'fetchTree' });\r\n        yield put({ type: 'fetch' });\r\n      }\r\n    },\r\n    *del({ payload }, { call, put }) {\r\n      const response = yield call(restaurantService.del, payload.id);\r\n      if (response.status === 'OK') {\r\n        message.success('successfully deleted');\r\n        yield put({ type: 'fetchTree' });\r\n        yield put({ type: 'fetch' });\r\n      }\r\n    },\r\n    *fetchTree({ payload }, { call, put }) {\r\n      let params = {};\r\n      if (payload) {\r\n        params = { ...params, ...payload };\r\n      }\r\n      const response = yield call(restaurantService.queryTree, params);\r\n      yield put({\r\n        type: 'saveTreeData',\r\n        payload: response.list || [],\r\n      });\r\n    },\r\n    *changeStatus({ payload }, { call, put, select }) {\r\n      let response;\r\n      if (payload.status === 1) {\r\n        response = yield call(restaurantService.enable, payload.id);\r\n      } else {\r\n        response = yield call(restaurantService.disable, payload.id);\r\n      }\r\n\r\n      if (response.status === 'OK') {\r\n        let msg = 'Successfully activated';\r\n        if (payload.status === 2) {\r\n          msg = 'Deactivated successfully';\r\n        }\r\n        message.success(msg);\r\n        const data = yield select(state => state.menu.data);\r\n        const newData = { list: [], pagination: data.pagination };\r\n\r\n        for (let i = 0; i < data.list.length; i += 1) {\r\n          const item = data.list[i];\r\n          if (item.id === payload.id) {\r\n            item.status = payload.status;\r\n          }\r\n          newData.list.push(item);\r\n        }\r\n\r\n        yield put({\r\n          type: 'saveData',\r\n          payload: newData,\r\n        });\r\n      }\r\n    },\r\n  },\r\n  reducers: {\r\n    saveData(state, { payload }) {\r\n      return { ...state, data: payload };\r\n    },\r\n    saveSearch(state, { payload }) {\r\n      return { ...state, search: payload };\r\n    },\r\n    savePagination(state, { payload }) {\r\n      return { ...state, pagination: payload };\r\n    },\r\n    changeFormVisible(state, { payload }) {\r\n      return { ...state, formVisible: payload };\r\n    },\r\n    saveFormType(state, { payload }) {\r\n      return { ...state, formType: payload };\r\n    },\r\n    saveFormTitle(state, { payload }) {\r\n      return { ...state, formTitle: payload };\r\n    },\r\n    saveFormID(state, { payload }) {\r\n      return { ...state, formID: payload };\r\n    },\r\n    saveFormData(state, { payload }) {\r\n      return { ...state, formData: payload };\r\n    },\r\n    changeSubmitting(state, { payload }) {\r\n      return { ...state, submitting: payload };\r\n    },\r\n    saveTreeData(state, { payload }) {\r\n      return { ...state, treeData: payload };\r\n    },\r\n    saveExpandedKeys(state, { payload }) {\r\n      return { ...state, expandedKeys: payload };\r\n    },\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}