{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Volumes/ExternalData/Work/vnshop/admin/src/components/Menu/FormDialog.js\",\n    _dec,\n    _class,\n    _temp;\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport { Form } from '@ant-design/compatible';\nimport '@ant-design/compatible/assets/index.css';\nimport MenuResource from './MenuResource';\nvar FormDialog = (_dec = Form.create(), _dec(_class = (_temp = /*#__PURE__*/function (_PureComponent) {\n  _inherits(FormDialog, _PureComponent);\n\n  var _super = _createSuper(FormDialog);\n\n  function FormDialog() {\n    var _this;\n\n    _classCallCheck(this, FormDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCancel\", function () {\n      var onCancel = _this.props.onCancel;\n\n      if (onCancel) {\n        onCancel();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOKClick\", function () {\n      var _this$props = _this.props,\n          form = _this$props.form,\n          onSubmit = _this$props.onSubmit;\n      form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          onSubmit(_objectSpread({}, values));\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(FormDialog, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          visible = _this$props2.visible,\n          formData = _this$props2.formData,\n          form = _this$props2.form;\n      var getFieldDecorator = form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 6\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n      return __jsx(_Modal, {\n        title: \"Menu action (button) management\",\n        width: 650,\n        visible: visible,\n        maskClosable: false,\n        destroyOnClose: true,\n        onOk: this.handleOKClick,\n        onCancel: this.handleCancel,\n        style: {\n          top: 20\n        },\n        bodyStyle: {\n          maxHeight: 'calc( 100vh - 158px )',\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, __jsx(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, __jsx(Form.Item, _extends({}, formItemLayout, {\n        label: \"Action Number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }), getFieldDecorator('code', {\n        initialValue: formData.code,\n        rules: [{\n          required: true,\n          message: 'Please enter the action number'\n        }]\n      })(__jsx(_Input, {\n        placeholder: \"please enter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 16\n        }\n      }))), __jsx(Form.Item, _extends({}, formItemLayout, {\n        label: \"Action name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }), getFieldDecorator('name', {\n        initialValue: formData.name,\n        rules: [{\n          required: true,\n          message: 'Please enter the action name'\n        }]\n      })(__jsx(_Input, {\n        placeholder: \"please enter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 16\n        }\n      }))), __jsx(Form.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, __jsx(_Card, {\n        title: \"Resource management (server interface mapping)\",\n        bordered: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }, getFieldDecorator('resources', {\n        initialValue: formData.resources\n      })(__jsx(MenuResource, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 18\n        }\n      }))))));\n    }\n  }]);\n\n  return FormDialog;\n}(PureComponent), _temp)) || _class);\nexport default FormDialog;","map":{"version":3,"sources":["/Volumes/ExternalData/Work/vnshop/admin/src/components/Menu/FormDialog.js"],"names":["React","PureComponent","Form","MenuResource","FormDialog","create","onCancel","props","form","onSubmit","validateFieldsAndScroll","err","values","visible","formData","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","handleOKClick","handleCancel","top","maxHeight","overflowY","initialValue","code","rules","required","message","name","resources"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Modal, Input, Card } from 'antd';\nimport { Form } from '@ant-design/compatible';\nimport '@ant-design/compatible/assets/index.css';\nimport MenuResource from './MenuResource';\n\n@Form.create()\nclass FormDialog extends PureComponent {\n  handleCancel = () => {\n    const { onCancel } = this.props;\n    if (onCancel) {\n      onCancel();\n    }\n  };\n\n  handleOKClick = () => {\n    const { form, onSubmit } = this.props;\n    form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        onSubmit({ ...values });\n      }\n    });\n  };\n\n  render() {\n    const { visible, formData, form } = this.props;\n    const { getFieldDecorator } = form;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n\n    return (\n      <Modal\n        title=\"Menu action (button) management\"\n        width={650}\n        visible={visible}\n        maskClosable={false}\n        destroyOnClose\n        onOk={this.handleOKClick}\n        onCancel={this.handleCancel}\n        style={{ top: 20 }}\n        bodyStyle={{ maxHeight: 'calc( 100vh - 158px )', overflowY: 'auto' }}\n      >\n        <Form>\n          <Form.Item {...formItemLayout} label=\"Action Number\">\n            {getFieldDecorator('code', {\n              initialValue: formData.code,\n              rules: [\n                {\n                  required: true,\n                  message: 'Please enter the action number',\n                },\n              ],\n            })(<Input placeholder=\"please enter\" />)}\n          </Form.Item>\n          <Form.Item {...formItemLayout} label=\"Action name\">\n            {getFieldDecorator('name', {\n              initialValue: formData.name,\n              rules: [\n                {\n                  required: true,\n                  message: 'Please enter the action name',\n                },\n              ],\n            })(<Input placeholder=\"please enter\" />)}\n          </Form.Item>\n          <Form.Item>\n            <Card title=\"Resource management (server interface mapping)\" bordered={false}>\n              {getFieldDecorator('resources', {\n                initialValue: formData.resources,\n              })(<MenuResource />)}\n            </Card>\n          </Form.Item>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default FormDialog;\n"]},"metadata":{},"sourceType":"module"}