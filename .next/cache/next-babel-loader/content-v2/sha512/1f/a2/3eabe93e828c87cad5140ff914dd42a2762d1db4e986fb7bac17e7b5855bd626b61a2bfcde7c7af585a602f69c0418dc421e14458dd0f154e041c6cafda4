{"ast":null,"code":"import _slicedToArray from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/tuanquang/admin_ssr/src/components/Test/CustomNodeWidget.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 20px;\\n  background: #f6f6f6;\\n  cursor: pointer;\\n  margin-top: 5px;\\n\\n  &:hover {\\n    background: #deecf3;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport { PortModelAlignment, PortWidget } from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\nvar styles = {\n  tableHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    color: 'white',\n    fontWeight: 900,\n    fontSize: '20px',\n    background: '#316896',\n    marginBottom: '-2px'\n  },\n  tableHeadText: {\n    fill: '#fff',\n    fontWeight: 700,\n    border: ' 0 solid #e2e8f0',\n    padding: '7px 30px 7px '\n  },\n  tableRow: {\n    fontWeight: 700,\n    fontSize: '18px',\n    display: 'flex',\n    flexBasis: 100,\n    justifyContent: 'space-between'\n  },\n  rightPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    right: '0px'\n  },\n  leftPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '0'\n  }\n};\nexport var Port = styled.div(_templateObject());\n_c = Port;\nexport var CustomNodeWidget = /*#__PURE__*/function (_React$Component) {\n  _inherits(CustomNodeWidget, _React$Component);\n\n  var _super = _createSuper(CustomNodeWidget);\n\n  function CustomNodeWidget(props) {\n    var _this;\n\n    _classCallCheck(this, CustomNodeWidget);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"addPort\", function () {});\n\n    return _this;\n  }\n\n  _createClass(CustomNodeWidget, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          minWidth: this.props.size * 2,\n          minHeight: this.props.size,\n          width: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.tableHeader,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.tableHeadText,\n            children: \"Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), Object.entries(this.props.node.getPorts()).map(function (_ref, index) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              key = _ref2[0],\n              value = _ref2[1];\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.tableRow,\n            children: [/*#__PURE__*/_jsxDEV(PortWidget, {\n              port: value,\n              engine: _this2.props.engine,\n              style: styles.leftPort,\n              children: /*#__PURE__*/_jsxDEV(Port, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 15\n              }, _this2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }, _this2), /*#__PURE__*/_jsxDEV(PortWidget, {\n              port: _this2.props.node.getPort(PortModelAlignment.RIGHT),\n              engine: _this2.props.engine,\n              style: styles.rightPort,\n              children: /*#__PURE__*/_jsxDEV(Port, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 15\n              }, _this2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 13\n            }, _this2), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                paddingLeft: 30\n              },\n              children: \"student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 13\n            }, _this2), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: '1 0 100px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }, _this2), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                paddingRight: 30,\n                color: '#999'\n              },\n              children: \"string\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }, _this2)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, _this2);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return CustomNodeWidget;\n}(React.Component);\n\nvar _c;\n\n$RefreshReg$(_c, \"Port\");","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Test/CustomNodeWidget.tsx"],"names":["React","PortModelAlignment","PortWidget","styled","styles","tableHeader","display","alignItems","color","fontWeight","fontSize","background","marginBottom","tableHeadText","fill","border","padding","tableRow","flexBasis","justifyContent","rightPort","width","height","position","right","leftPort","left","Port","div","CustomNodeWidget","props","minWidth","size","minHeight","Object","entries","node","getPorts","map","index","key","value","engine","getPort","RIGHT","paddingLeft","flex","paddingRight","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DiamondNodeModel } from './DiamondNodeModel';\nimport { DiagramEngine, PortModelAlignment, PortWidget } from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\n\nexport interface CustomNodeWidgetProps {\n  node: DiamondNodeModel;\n  engine: DiagramEngine;\n  size?: number;\n}\n\nconst styles = {\n  tableHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    color: 'white',\n    fontWeight: 900,\n    fontSize: '20px',\n    background: '#316896',\n    marginBottom: '-2px',\n  },\n  tableHeadText: {\n    fill: '#fff',\n    fontWeight: 700,\n    border: ' 0 solid #e2e8f0',\n    padding: '7px 30px 7px ',\n  },\n  tableRow: {\n    fontWeight: 700,\n    fontSize: '18px',\n    display: 'flex',\n    flexBasis: 100,\n    justifyContent: 'space-between',\n  },\n  rightPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    right: '0px',\n  },\n\n  leftPort: {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n    left: '0',\n  },\n};\nexport const Port = styled.div`\n  height: 20px;\n  background: #f6f6f6;\n  cursor: pointer;\n  margin-top: 5px;\n\n  &:hover {\n    background: #deecf3;\n  }\n`;\nexport class CustomNodeWidget extends React.Component<CustomNodeWidgetProps> {\n  constructor(props) {\n    super(props);\n  }\n  addPort = () => {};\n  render() {\n    return (\n      <div style={{ minWidth: this.props.size * 2, minHeight: this.props.size, width: 'auto' }}>\n        <div style={styles.tableHeader}>\n          <div style={styles.tableHeadText}>Test</div>\n        </div>\n        {Object.entries(this.props.node.getPorts()).map(([key, value], index: any) => (\n          <div style={styles.tableRow} key={index}>\n            <PortWidget port={value} engine={this.props.engine} style={styles.leftPort}>\n              <Port />\n            </PortWidget>\n            <PortWidget\n              port={this.props.node.getPort(PortModelAlignment.RIGHT)}\n              engine={this.props.engine}\n              style={styles.rightPort}\n            >\n              <Port />\n            </PortWidget>\n            <div style={{ paddingLeft: 30 }}>student</div>\n            <div style={{ flex: '1 0 100px' }}></div>\n            <div style={{ paddingRight: 30, color: '#999' }}>string</div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}