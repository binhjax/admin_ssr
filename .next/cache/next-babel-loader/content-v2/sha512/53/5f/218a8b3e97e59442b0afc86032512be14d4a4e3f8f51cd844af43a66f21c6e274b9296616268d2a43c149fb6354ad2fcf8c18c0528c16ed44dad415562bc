{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _slicedToArray from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/tuanquang/admin_ssr/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/home/tuanquang/admin_ssr/src/components/Diagram/BodyWidget.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  flex-grow: 1;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport TrayWidget from './components/TrayWidget';\nimport ActionMenu from './components/ActionMenu';\nimport LinkDetail from './components/LinkDetail';\nimport TableDetail from './components/TableDetail';\nimport PortDetail from './components/PortDetail';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport DemoCanvasWidget from '../helpers/DemoCanvasWidget';\nimport { CustomNodeModel } from '../CustomNode/CustomNodeModel';\nimport styled from '@emotion/styled';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { useDispatch } from 'react-redux';\nexport var Layer = styled.div(_templateObject());\n_c = Layer;\n\nvar BodyWidget = function BodyWidget(props) {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      updateState = _React$useState2[1]; // const node = useSelector((state) => state.node);\n  // const ports: { [s: string]: PortModel } = useSelector((state) => state.node.ports);\n\n\n  var forceUpdate = React.useCallback(function () {\n    return updateState({});\n  }, []);\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      port = _React$useState4[0],\n      setPort = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      selectedNode = _React$useState6[0],\n      setSelectedNode = _React$useState6[1];\n\n  var _React$useState7 = React.useState('table'),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      active = _React$useState8[0],\n      setActive = _React$useState8[1];\n\n  var _React$useState9 = React.useState(),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      selectedPort = _React$useState10[0],\n      setSelectedPort = _React$useState10[1];\n\n  var _React$useState11 = React.useState(),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      link = _React$useState12[0],\n      setLink = _React$useState12[1]; // useEffect(() => {\n  //   setSelectedNode(node.selectedNode);\n  //   setActive(node.active);\n  //   setLink(node.link);\n  // }, [node.selectedNode, node.active, node.link, node.name, setSelectedNode]);\n\n\n  var handelChangeName = function handelChangeName(e) {\n    selectedNode.getOptions().extras = e.target.value; // dispatch(action.setSelectedNode(selectedNode));\n\n    props.app.getDiagramEngine().repaintCanvas();\n  };\n\n  var handleChangePort = function handleChangePort(e) {\n    var _e$target = e.target,\n        id = _e$target.id,\n        value = _e$target.value;\n    port.getOptions().extras[id] = value; // dispatch(\n    //   action.setPorts({\n    //     ...ports\n    //   })\n    // );\n  };\n\n  var openDetail = function openDetail(value) {\n    setPort(value);\n    setActive('detail');\n  };\n\n  var confirmDeletePort = function confirmDeletePort(port) {\n    _Modal.confirm({\n      title: 'Confirm',\n      icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, _this),\n      content: 'Confirm delete port',\n      okText: 'Yes',\n      cancelText: 'No',\n      onOk: function onOk() {\n        selectedNode.deletePort(port); // dispatch(action.setPorts(selectedNode.getPorts()));\n      }\n    });\n  };\n\n  var selectPort = function selectPort(value) {\n    setSelectedPort(value);\n  };\n\n  var addPort = function addPort() {\n    var port = selectedNode.addCustomPort('new_col', '', ''); // dispatch(action.setPorts(selectedNode.getPorts()));\n\n    openDetail(port);\n  }; // const dispatchPorts = () => {\n  //   dispatch(\n  //     action.setPorts({\n  //       ...ports,\n  //     })\n  //   );\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(_Card, {\n    extra: /*#__PURE__*/_jsxDEV(ActionMenu, {\n      app: props.app\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 18\n    }, _this),\n    children: /*#__PURE__*/_jsxDEV(_Row, {\n      gutter: 16,\n      style: {\n        width: '100%',\n        marginTop: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(_Col, {\n        lg: 18,\n        md: 24,\n        sm: 24,\n        xs: 24,\n        children: /*#__PURE__*/_jsxDEV(Layer, {\n          onClick: function onClick(e) {\n            e.stopPropagation();\n            setSelectedPort(undefined);\n          },\n          onDrop: function onDrop(event) {\n            var node;\n            node = new CustomNodeModel('Name');\n            var point = props.app.getDiagramEngine().getRelativeMousePoint(event);\n            node.setPosition(point);\n            props.app.getDiagramEngine().getModel().addNode(node);\n            forceUpdate();\n          },\n          onDragOver: function onDragOver(event) {\n            event.preventDefault();\n          },\n          children: /*#__PURE__*/_jsxDEV(DemoCanvasWidget, {\n            background: \"#ffff\",\n            children: /*#__PURE__*/_jsxDEV(CanvasWidget, {\n              engine: props.app.getDiagramEngine()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(_Col, {\n        lg: 6,\n        md: 24,\n        xs: 24,\n        sm: 24,\n        children: /*#__PURE__*/_jsxDEV(TrayWidget, {\n          children: [active === 'table' ? /*#__PURE__*/_jsxDEV(TableDetail, {\n            selectedPort: selectedPort,\n            selectedNode: selectedNode,\n            selectPort: selectPort,\n            addPort: addPort,\n            confirmDeletePort: confirmDeletePort,\n            handelChangeName: handelChangeName,\n            openDetail: openDetail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, _this) : '', active === 'detail' ? /*#__PURE__*/_jsxDEV(PortDetail, {\n            port: port,\n            selectedNode: selectedNode,\n            dispatchPorts: dispatchPorts,\n            handleChangePort: handleChangePort,\n            setActive: setActive,\n            setSelectedPort: setSelectedPort\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, _this) : '', active === 'link' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: link !== undefined ? /*#__PURE__*/_jsxDEV(LinkDetail, {\n              link: link\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 42\n            }, _this) : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, _this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(BodyWidget, \"pwdWvlutXPtao4mtB0H221CkGP4=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = BodyWidget;\nexport default BodyWidget;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Layer\");\n$RefreshReg$(_c2, \"BodyWidget\");","map":{"version":3,"sources":["/home/tuanquang/admin_ssr/src/components/Diagram/BodyWidget.tsx"],"names":["React","TrayWidget","ActionMenu","LinkDetail","TableDetail","PortDetail","CanvasWidget","DemoCanvasWidget","CustomNodeModel","styled","ExclamationCircleOutlined","useDispatch","Layer","div","BodyWidget","props","dispatch","useState","updateState","forceUpdate","useCallback","port","setPort","selectedNode","setSelectedNode","active","setActive","selectedPort","setSelectedPort","link","setLink","handelChangeName","e","getOptions","extras","target","value","app","getDiagramEngine","repaintCanvas","handleChangePort","id","openDetail","confirmDeletePort","confirm","title","icon","content","okText","cancelText","onOk","deletePort","selectPort","addPort","addCustomPort","width","marginTop","stopPropagation","undefined","event","node","point","getRelativeMousePoint","setPosition","getModel","addNode","preventDefault","dispatchPorts"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport TrayWidget from './components/TrayWidget';\nimport ActionMenu from './components/ActionMenu';\nimport LinkDetail from './components/LinkDetail';\nimport TableDetail from './components/TableDetail';\nimport PortDetail from './components/PortDetail';\n\nimport { Application } from './Application';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport DemoCanvasWidget from '../helpers/DemoCanvasWidget';\nimport { CustomNodeModel } from '../CustomNode/CustomNodeModel';\nimport styled from '@emotion/styled';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Card, Col, Row, Modal } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { PortModel } from '@projectstorm/react-diagrams';\nimport { CustomPortModel } from '../CustomNode/CustomPortModel';\n// import * as action from '../../actions/node';\nimport { CustomLinkModel } from '../CustomNode/CustomLinkModel';\nexport interface BodyWidgetProps {\n  app: Application;\n}\n\nexport const Layer = styled.div`\n  position: relative;\n  flex-grow: 1;\n`;\n\nconst BodyWidget: React.FC<BodyWidgetProps> = (props) => {\n  const dispatch = useDispatch();\n  const [, updateState] = React.useState();\n  // const node = useSelector((state) => state.node);\n  // const ports: { [s: string]: PortModel } = useSelector((state) => state.node.ports);\n\n  const forceUpdate = React.useCallback(() => updateState({}), []);\n  const [port, setPort] = React.useState<CustomPortModel>();\n  const [selectedNode, setSelectedNode] = React.useState<CustomNodeModel>();\n  const [active, setActive] = React.useState('table');\n  const [selectedPort, setSelectedPort] = React.useState<PortModel>();\n  const [link, setLink] = React.useState<CustomLinkModel>();\n  // useEffect(() => {\n  //   setSelectedNode(node.selectedNode);\n  //   setActive(node.active);\n  //   setLink(node.link);\n  // }, [node.selectedNode, node.active, node.link, node.name, setSelectedNode]);\n\n  const handelChangeName = (e: any) => {\n    selectedNode.getOptions().extras = e.target.value;\n    // dispatch(action.setSelectedNode(selectedNode));\n    props.app.getDiagramEngine().repaintCanvas();\n  };\n\n  const handleChangePort = (e) => {\n    const { id, value } = e.target;\n    port.getOptions().extras[id] = value;\n    // dispatch(\n    //   action.setPorts({\n    //     ...ports\n    //   })\n    // );\n  };\n  const openDetail = (value) => {\n    setPort(value as CustomPortModel);\n    setActive('detail');\n  };\n  const confirmDeletePort = (port: PortModel) => {\n    Modal.confirm({\n      title: 'Confirm',\n      icon: <ExclamationCircleOutlined />,\n      content: 'Confirm delete port',\n      okText: 'Yes',\n      cancelText: 'No',\n      onOk() {\n        selectedNode.deletePort(port as CustomPortModel);\n        // dispatch(action.setPorts(selectedNode.getPorts()));\n      },\n    });\n  };\n  const selectPort = (value) => {\n    setSelectedPort(value);\n  };\n\n  const addPort = () => {\n    let port = selectedNode.addCustomPort('new_col', '', '');\n    // dispatch(action.setPorts(selectedNode.getPorts()));\n    openDetail(port);\n  };\n\n  // const dispatchPorts = () => {\n  //   dispatch(\n  //     action.setPorts({\n  //       ...ports,\n  //     })\n  //   );\n  // };\n  return (\n    <Card extra={<ActionMenu app={props.app} />}>\n      <Row gutter={16} style={{ width: '100%', marginTop: '5px' }}>\n        <Col lg={18} md={24} sm={24} xs={24}>\n          <Layer\n            onClick={(e) => {\n              e.stopPropagation();\n              setSelectedPort(undefined);\n            }}\n            onDrop={(event) => {\n              var node: CustomNodeModel;\n              node = new CustomNodeModel('Name');\n              var point = props.app.getDiagramEngine().getRelativeMousePoint(event);\n              node.setPosition(point);\n              props.app.getDiagramEngine().getModel().addNode(node);\n              forceUpdate();\n            }}\n            onDragOver={(event) => {\n              event.preventDefault();\n            }}\n          >\n            <DemoCanvasWidget background='#ffff'>\n              <CanvasWidget engine={props.app.getDiagramEngine()} />\n            </DemoCanvasWidget>\n          </Layer>\n        </Col>\n        <Col lg={6} md={24} xs={24} sm={24}>\n          <TrayWidget>\n            {active === 'table' ? (\n              <TableDetail\n                selectedPort={selectedPort}\n                selectedNode={selectedNode}\n                selectPort={selectPort}\n                addPort={addPort}\n                confirmDeletePort={confirmDeletePort}\n                handelChangeName={handelChangeName}\n                openDetail={openDetail}\n              />\n            ) : (\n              ''\n            )}\n            {active === 'detail' ? (\n              <PortDetail\n                port={port}\n                selectedNode={selectedNode}\n                dispatchPorts={dispatchPorts}\n                handleChangePort={handleChangePort}\n                setActive={setActive}\n                setSelectedPort={setSelectedPort}\n              />\n            ) : (\n              ''\n            )}\n            {active === 'link' ? (\n              <div>{link !== undefined ? <LinkDetail link={link} /> : ''}</div>\n            ) : (\n              ''\n            )}\n          </TrayWidget>\n        </Col>\n      </Row>\n    </Card>\n  );\n};\nexport default BodyWidget;\n"]},"metadata":{},"sourceType":"module"}