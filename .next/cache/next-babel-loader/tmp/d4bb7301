{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as loginService from '@/services/login';\nexport default {\n  namespace: 'global',\n  state: {\n    title: 'System Management',\n    copyRight: '2020 Vnpay',\n    defaultURL: '/dashboard',\n    collapsed: false,\n    openKeys: [],\n    selectedKeys: [],\n    user: {\n      user_name: 'admin',\n      real_name: 'Administrator',\n      role_names: []\n    },\n    menuPaths: {},\n    menuMap: {},\n    menus: []\n  },\n  effects: {\n    menuEvent: /*#__PURE__*/_regeneratorRuntime.mark(function menuEvent(_ref, _ref2) {\n      var pathname, put, select, p, menuPaths, item;\n      return _regeneratorRuntime.wrap(function menuEvent$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              pathname = _ref.pathname;\n              put = _ref2.put, select = _ref2.select;\n              p = pathname;\n\n              if (!(p === '/')) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 6;\n              return select(function (state) {\n                return state.global.defaultURL;\n              });\n\n            case 6:\n              p = _context.sent;\n\n            case 7:\n              _context.next = 9;\n              return select(function (state) {\n                return state.global.menuPaths;\n              });\n\n            case 9:\n              menuPaths = _context.sent;\n              item = menuPaths[p];\n\n              if (item) {\n                _context.next = 13;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 13:\n              if (!(item.parent_path && item.parent_path !== '')) {\n                _context.next = 16;\n                break;\n              }\n\n              _context.next = 16;\n              return put({\n                type: 'changeOpenKeys',\n                payload: item.parent_path.split('/')\n              });\n\n            case 16:\n              _context.next = 18;\n              return put({\n                type: 'changeSelectedKeys',\n                payload: [item.id]\n              });\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, menuEvent);\n    }),\n    fetchUser: /*#__PURE__*/_regeneratorRuntime.mark(function fetchUser(_, _ref3) {\n      var call, put, response;\n      return _regeneratorRuntime.wrap(function fetchUser$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              call = _ref3.call, put = _ref3.put;\n              _context2.next = 3;\n              return call(loginService.getCurrentUser);\n\n            case 3:\n              response = _context2.sent;\n              _context2.next = 6;\n              return put({\n                type: 'saveUser',\n                payload: response\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, fetchUser);\n    }),\n    fetchMenuTree: /*#__PURE__*/_regeneratorRuntime.mark(function fetchMenuTree(_ref4, _ref5) {\n      var pathname, call, put, response, menuData, menuPaths, menuMap, fillData;\n      return _regeneratorRuntime.wrap(function fetchMenuTree$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              fillData = function _fillData(data) {\n                for (var i = 0; i < data.length; i += 1) {\n                  menuMap[data[i].id] = data[i];\n\n                  if (data[i].router !== '') {\n                    menuPaths[data[i].router] = data[i];\n                  }\n\n                  if (data[i].children && data[i].children.length > 0) {\n                    fillData(data[i].children);\n                  }\n                }\n              };\n\n              pathname = _ref4.pathname;\n              call = _ref5.call, put = _ref5.put;\n              _context3.next = 5;\n              return call(loginService.queryMenuTree);\n\n            case 5:\n              response = _context3.sent;\n              menuData = response.list || [];\n              _context3.next = 9;\n              return put({\n                type: 'saveMenus',\n                payload: menuData\n              });\n\n            case 9:\n              menuPaths = {};\n              menuMap = {};\n              fillData(menuData);\n              _context3.next = 14;\n              return [put({\n                type: 'saveMenuPaths',\n                payload: menuPaths\n              }), put({\n                type: 'saveMenuMap',\n                payload: menuMap\n              }), put({\n                type: 'menuEvent',\n                pathname: pathname\n              })];\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, fetchMenuTree);\n    })\n  },\n  reducers: {\n    changeLayoutCollapsed: function changeLayoutCollapsed(state, _ref6) {\n      var payload = _ref6.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        collapsed: payload\n      });\n    },\n    changeOpenKeys: function changeOpenKeys(state, _ref7) {\n      var payload = _ref7.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        openKeys: payload\n      });\n    },\n    changeSelectedKeys: function changeSelectedKeys(state, _ref8) {\n      var payload = _ref8.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selectedKeys: payload\n      });\n    },\n    saveUser: function saveUser(state, _ref9) {\n      var payload = _ref9.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: payload\n      });\n    },\n    saveMenuPaths: function saveMenuPaths(state, _ref10) {\n      var payload = _ref10.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        menuPaths: payload\n      });\n    },\n    saveMenuMap: function saveMenuMap(state, _ref11) {\n      var payload = _ref11.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        menuMap: payload\n      });\n    },\n    saveMenus: function saveMenus(state, _ref12) {\n      var payload = _ref12.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        menus: payload\n      });\n    }\n  },\n  subscriptions: {\n    setup: function setup(_ref13) {\n      var dispatch = _ref13.dispatch,\n          history = _ref13.history;\n\n      if (typeof history !== 'undefined') {\n        history.listen(function (_ref14) {\n          var pathname = _ref14.pathname;\n          dispatch({\n            type: 'menuEvent',\n            pathname: pathname\n          });\n        });\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}